

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Nov 13 00:09:17 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4550 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataBANK0
    99  00478C                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for _e
   103  00478C  7CEE               	dw	31982
   104  00478E  412B               	dw	16683
   105                           
   106                           ;initializer for _b
   107  004790  0001               	dw	1
   108  0000                     _LATD	set	3980
   109  0000                     _TRISC	set	3988
   110  0000                     _TRISBbits	set	3987
   111  0000                     _TRISD	set	3989
   112  0000                     _OSCCON	set	4051
   113  0000                     _LATD3	set	31843
   114  0000                     _LATD2	set	31842
   115  0000                     _RB5	set	31757
   116  0000                     _RB4	set	31756
   117  0000                     _RB2	set	31754
   118  0000                     _RC4	set	31764
   119  0000                     _RC2	set	31762
   120  0000                     _RC1	set	31761
   121  0000                     _RC0	set	31760
   122  0000                     _RB1	set	31753
   123                           
   124                           	psect	smallconst
   125  000800                     __psmallconst:
   126                           	callstack 0
   127  000800  00                 	db	0
   128  000801                     STR_1:
   129  000801  49                 	db	73	;'I'
   130  000802  6E                 	db	110	;'n'
   131  000803  74                 	db	116	;'t'
   132  000804  72                 	db	114	;'r'
   133  000805  6F                 	db	111	;'o'
   134  000806  64                 	db	100	;'d'
   135  000807  75                 	db	117	;'u'
   136  000808  63                 	db	99	;'c'
   137  000809  65                 	db	101	;'e'
   138  00080A  20                 	db	32
   139  00080B  76                 	db	118	;'v'
   140  00080C  61                 	db	97	;'a'
   141  00080D  6C                 	db	108	;'l'
   142  00080E  6F                 	db	111	;'o'
   143  00080F  72                 	db	114	;'r'
   144  000810  3A                 	db	58	;':'
   145  000811  20                 	db	32
   146  000812  00                 	db	0
   147  000813                     STR_3:
   148  000813  25                 	db	37
   149  000814  30                 	db	48	;'0'
   150  000815  2E                 	db	46
   151  000816  33                 	db	51	;'3'
   152  000817  66                 	db	102	;'f'
   153  000818  00                 	db	0
   154  000819                     STR_4:
   155  000819  49                 	db	73	;'I'
   156  00081A  4E                 	db	78	;'N'
   157  00081B  46                 	db	70	;'F'
   158  00081C  00                 	db	0
   159  00081D                     STR_8:
   160  00081D  4E                 	db	78	;'N'
   161  00081E  41                 	db	65	;'A'
   162  00081F  4E                 	db	78	;'N'
   163  000820  00                 	db	0
   164  000821                     STR_5:
   165  000821  69                 	db	105	;'i'
   166  000822  6E                 	db	110	;'n'
   167  000823  66                 	db	102	;'f'
   168  000824  00                 	db	0
   169  000825                     STR_9:
   170  000825  6E                 	db	110	;'n'
   171  000826  61                 	db	97	;'a'
   172  000827  6E                 	db	110	;'n'
   173  000828  00                 	db	0
   174  000829                     STR_12:
   175  000829  6C                 	db	108	;'l'
   176  00082A  66                 	db	102	;'f'
   177  00082B  00                 	db	0
   178  00082C                     STR_2:
   179  00082C  25                 	db	37
   180  00082D  64                 	db	100	;'d'
   181  00082E  00                 	db	0
   182  00082F  00                 	db	0	; dummy byte at the end
   183  0000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187  00458E                     __pcinit:
   188                           	callstack 0
   189  00458E                     start_initialization:
   190                           	callstack 0
   191  00458E                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Initialize objects allocated to BANK0 (6 bytes)
   195                           ; load TBLPTR registers with __pidataBANK0
   196  00458E  0E8C               	movlw	low __pidataBANK0
   197  004590  6EF6               	movwf	tblptrl,c
   198  004592  0E47               	movlw	high __pidataBANK0
   199  004594  6EF7               	movwf	tblptrh,c
   200  004596  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   201  004598  6EF8               	movwf	tblptru,c
   202  00459A  EE00  F0E3         	lfsr	0,__pdataBANK0
   203  00459E  EE10 F006          	lfsr	1,6
   204  0045A2                     copy_data0:
   205  0045A2  0009               	tblrd		*+
   206  0045A4  CFF5 FFEE          	movff	tablat,postinc0
   207  0045A8  50E5               	movf	postdec1,w,c
   208  0045AA  50E1               	movf	fsr1l,w,c
   209  0045AC  E1FA               	bnz	copy_data0
   210                           
   211                           ; Clear objects allocated to BANK1 (80 bytes)
   212  0045AE  EE01  F000         	lfsr	0,__pbssBANK1
   213  0045B2  0E50               	movlw	80
   214  0045B4                     clear_0:
   215  0045B4  6AEE               	clrf	postinc0,c
   216  0045B6  06E8               	decf	wreg,f,c
   217  0045B8  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to BANK0 (26 bytes)
   220  0045BA  EE00  F0C9         	lfsr	0,__pbssBANK0
   221  0045BE  0E1A               	movlw	26
   222  0045C0                     clear_1:
   223  0045C0  6AEE               	clrf	postinc0,c
   224  0045C2  06E8               	decf	wreg,f,c
   225  0045C4  E1FD               	bnz	clear_1
   226  0045C6                     end_of_initialization:
   227                           	callstack 0
   228  0045C6                     __end_of__initialization:
   229                           	callstack 0
   230  0045C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   231  0045C8  6EF8               	movwf	tblptru,c
   232  0045CA  0100               	movlb	0
   233  0045CC  EF90  F01C         	goto	_main	;jump to C main() function
   234                           
   235                           	psect	bssBANK0
   236  0000C9                     __pbssBANK0:
   237                           	callstack 0
   238  0000C9                     floorf@F524:
   239                           	callstack 0
   240  0000C9                     	ds	4
   241  0000CD                     ___fpclassifyf@F463:
   242                           	callstack 0
   243  0000CD                     	ds	4
   244  0000D1                     _nout:
   245                           	callstack 0
   246  0000D1                     	ds	2
   247  0000D3                     _width:
   248                           	callstack 0
   249  0000D3                     	ds	2
   250  0000D5                     _prec:
   251                           	callstack 0
   252  0000D5                     	ds	2
   253  0000D7                     _flags:
   254                           	callstack 0
   255  0000D7                     	ds	2
   256  0000D9                     _a:
   257                           	callstack 0
   258  0000D9                     	ds	2
   259  0000DB                     _f:
   260                           	callstack 0
   261  0000DB                     	ds	2
   262  0000DD                     _d:
   263                           	callstack 0
   264  0000DD                     	ds	2
   265  0000DF                     _c:
   266                           	callstack 0
   267  0000DF                     	ds	2
   268  0000E1                     _duty_cicle:
   269                           	callstack 0
   270  0000E1                     	ds	2
   271                           
   272                           	psect	dataBANK0
   273  0000E3                     __pdataBANK0:
   274                           	callstack 0
   275  0000E3                     _e:
   276                           	callstack 0
   277  0000E3                     	ds	4
   278  0000E7                     _b:
   279                           	callstack 0
   280  0000E7                     	ds	2
   281                           
   282                           	psect	bssBANK1
   283  000100                     __pbssBANK1:
   284                           	callstack 0
   285  000100                     _dbuf:
   286                           	callstack 0
   287  000100                     	ds	80
   288                           
   289                           	psect	cstackBANK0
   290  000060                     __pcstackBANK0:
   291                           	callstack 0
   292  000060                     efgtoa@ou:
   293                           	callstack 0
   294                           
   295                           ; 4 bytes @ 0x0
   296  000060                     	ds	4
   297  000064                     _efgtoa$764:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x4
   301  000064                     	ds	2
   302  000066                     _efgtoa$765:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x6
   306  000066                     	ds	2
   307  000068                     _efgtoa$769:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x8
   311  000068                     	ds	2
   312  00006A                     _efgtoa$773:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xA
   316  00006A                     	ds	2
   317  00006C                     _efgtoa$774:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0xC
   321  00006C                     	ds	2
   322  00006E                     _efgtoa$775:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xE
   326  00006E                     	ds	2
   327  000070                     efgtoa@t:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x10
   331  000070                     	ds	2
   332  000072                     efgtoa@pp:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x12
   336  000072                     	ds	2
   337  000074                     efgtoa@m:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x14
   341  000074                     	ds	2
   342  000076                     efgtoa@ne:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x16
   346  000076                     	ds	2
   347  000078                     efgtoa@d:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x18
   351  000078                     	ds	2
   352  00007A                     efgtoa@sign:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x1A
   356  00007A                     	ds	2
   357  00007C                     efgtoa@p:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x1C
   361  00007C                     	ds	2
   362  00007E                     efgtoa@nmode:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x1E
   366  00007E                     	ds	1
   367  00007F                     efgtoa@w:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x1F
   371  00007F                     	ds	2
   372  000081                     efgtoa@mode:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x21
   376  000081                     	ds	1
   377  000082                     efgtoa@h:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x22
   381  000082                     	ds	4
   382  000086                     efgtoa@l:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x26
   386  000086                     	ds	4
   387  00008A                     efgtoa@i:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2A
   391  00008A                     	ds	2
   392  00008C                     efgtoa@g:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x2C
   396  00008C                     	ds	4
   397  000090                     efgtoa@e:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x30
   401  000090                     	ds	2
   402  000092                     efgtoa@n:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x32
   406  000092                     	ds	2
   407  000094                     efgtoa@u:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x34
   411  000094                     	ds	4
   412  000098                     ?_vfprintf:
   413                           	callstack 0
   414  000098                     vfprintf@fp:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x38
   418  000098                     	ds	2
   419  00009A                     vfprintf@fmt:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x3A
   423  00009A                     	ds	2
   424  00009C                     vfprintf@ap:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x3C
   428  00009C                     	ds	2
   429  00009E                     vfprintf@cfmt:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x3E
   433  00009E                     	ds	2
   434  0000A0                     ?_sprintf:
   435                           	callstack 0
   436  0000A0                     sprintf@s:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x40
   440  0000A0                     	ds	2
   441  0000A2                     sprintf@fmt:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x42
   445  0000A2                     	ds	8
   446  0000AA                     sprintf@ap:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x4A
   450  0000AA                     	ds	2
   451  0000AC                     sprintf@f:
   452                           	callstack 0
   453                           
   454                           ; 6 bytes @ 0x4C
   455  0000AC                     	ds	6
   456  0000B2                     ??_main:
   457                           
   458                           ; 1 bytes @ 0x52
   459  0000B2                     	ds	1
   460  0000B3                     main@Total_distance:
   461                           	callstack 0
   462                           
   463                           ; 20 bytes @ 0x53
   464  0000B3                     	ds	20
   465  0000C7                     main@Distance:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x67
   469  0000C7                     	ds	2
   470                           
   471                           	psect	cstackCOMRAM
   472  000001                     __pcstackCOMRAM:
   473                           	callstack 0
   474  000001                     ??_Secuence1:
   475  000001                     ??_Secuence3:
   476  000001                     ?_strlen:
   477                           	callstack 0
   478  000001                     ?___fpclassifyf:
   479                           	callstack 0
   480  000001                     ?_isupper:
   481                           	callstack 0
   482  000001                     ?_isdigit:
   483                           	callstack 0
   484  000001                     ?_strncmp:
   485                           	callstack 0
   486  000001                     ?_isspace:
   487                           	callstack 0
   488  000001                     ?___wmul:
   489                           	callstack 0
   490  000001                     ?___awdiv:
   491                           	callstack 0
   492  000001                     ?___awmod:
   493                           	callstack 0
   494  000001                     ?___fladd:
   495                           	callstack 0
   496  000001                     ?___fldiv:
   497                           	callstack 0
   498  000001                     ?___flmul:
   499                           	callstack 0
   500  000001                     ?___flneg:
   501                           	callstack 0
   502  000001                     ?___fltol:
   503                           	callstack 0
   504  000001                     ?___aodiv:
   505                           	callstack 0
   506  000001                     ?___aomod:
   507                           	callstack 0
   508  000001                     MSdelay@val:
   509                           	callstack 0
   510  000001                     ___wmul@multiplier:
   511                           	callstack 0
   512  000001                     ___awdiv@dividend:
   513                           	callstack 0
   514  000001                     ___awmod@dividend:
   515                           	callstack 0
   516  000001                     isdigit@c:
   517                           	callstack 0
   518  000001                     isspace@c:
   519                           	callstack 0
   520  000001                     isupper@c:
   521                           	callstack 0
   522  000001                     fputc@c:
   523                           	callstack 0
   524  000001                     strcpy@dest:
   525                           	callstack 0
   526  000001                     strlen@s:
   527                           	callstack 0
   528  000001                     strncmp@_l:
   529                           	callstack 0
   530  000001                     ___fleq@ff1:
   531                           	callstack 0
   532  000001                     ___flneg@f1:
   533                           	callstack 0
   534  000001                     ___fltol@f1:
   535                           	callstack 0
   536  000001                     ___fladd@b:
   537                           	callstack 0
   538  000001                     ___fldiv@b:
   539                           	callstack 0
   540  000001                     ___flmul@b:
   541                           	callstack 0
   542  000001                     ___fpclassifyf@x:
   543                           	callstack 0
   544  000001                     ___aodiv@dividend:
   545                           	callstack 0
   546  000001                     ___aomod@dividend:
   547                           	callstack 0
   548                           
   549                           ; 8 bytes @ 0x0
   550  000001                     	ds	2
   551  000003                     ??_isupper:
   552  000003                     ??_isdigit:
   553  000003                     ??_isspace:
   554  000003                     MSdelay@i:
   555                           	callstack 0
   556  000003                     ___wmul@multiplicand:
   557                           	callstack 0
   558  000003                     ___awdiv@divisor:
   559                           	callstack 0
   560  000003                     ___awmod@divisor:
   561                           	callstack 0
   562  000003                     fputc@fp:
   563                           	callstack 0
   564  000003                     strcpy@src:
   565                           	callstack 0
   566  000003                     strlen@a:
   567                           	callstack 0
   568  000003                     strncmp@_r:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x2
   572  000003                     	ds	2
   573  000005                     ??_fputc:
   574  000005                     ??___fpclassifyf:
   575  000005                     ??_strcpy:
   576  000005                     ??___fltol:
   577  000005                     ___awdiv@counter:
   578                           	callstack 0
   579  000005                     ___awmod@counter:
   580                           	callstack 0
   581  000005                     MSdelay@j:
   582                           	callstack 0
   583  000005                     ___wmul@product:
   584                           	callstack 0
   585  000005                     strncmp@n:
   586                           	callstack 0
   587  000005                     ___fleq@ff2:
   588                           	callstack 0
   589  000005                     ___fladd@a:
   590                           	callstack 0
   591  000005                     ___fldiv@a:
   592                           	callstack 0
   593  000005                     ___flmul@a:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x4
   597  000005                     	ds	1
   598  000006                     ___awdiv@sign:
   599                           	callstack 0
   600  000006                     ___awmod@sign:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x5
   604  000006                     	ds	1
   605  000007                     ??_LCD_Command:
   606  000007                     ??_strncmp:
   607  000007                     ??_LCD_Char:
   608  000007                     ?_tolower:
   609                           	callstack 0
   610  000007                     _isspace$861:
   611                           	callstack 0
   612  000007                     ___awdiv@quotient:
   613                           	callstack 0
   614  000007                     strcpy@s:
   615                           	callstack 0
   616  000007                     tolower@c:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x6
   620  000007                     	ds	1
   621  000008                     ?_atoi:
   622                           	callstack 0
   623  000008                     LCD_Command@cmd:
   624                           	callstack 0
   625  000008                     LCD_Char@dat:
   626                           	callstack 0
   627  000008                     atoi@s:
   628                           	callstack 0
   629  000008                     strncmp@l:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x7
   633  000008                     	ds	1
   634  000009                     ??_Secuence2:
   635  000009                     ??_Secuence4:
   636  000009                     ??___fladd:
   637  000009                     ??___fldiv:
   638  000009                     ??___flmul:
   639  000009                     ??_tolower:
   640  000009                     ??___fleq:
   641  000009                     ___fltol@sign1:
   642                           	callstack 0
   643  000009                     LCD_String@msg:
   644                           	callstack 0
   645  000009                     ___fpclassifyf@e:
   646                           	callstack 0
   647  000009                     strcpy@d:
   648                           	callstack 0
   649  000009                     ___aodiv@divisor:
   650                           	callstack 0
   651  000009                     ___aomod@divisor:
   652                           	callstack 0
   653                           
   654                           ; 8 bytes @ 0x8
   655  000009                     	ds	1
   656  00000A                     ??_atoi:
   657  00000A                     ___fltol@exp1:
   658                           	callstack 0
   659  00000A                     fputs@s:
   660                           	callstack 0
   661  00000A                     strncmp@r:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x9
   665  00000A                     	ds	1
   666  00000B                     LCD_String_xy@pos:
   667                           	callstack 0
   668  00000B                     ___fpclassifyf@u:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0xA
   672  00000B                     	ds	1
   673  00000C                     LCD_String_xy@msg:
   674                           	callstack 0
   675  00000C                     fputs@fp:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0xB
   679  00000C                     	ds	1
   680  00000D                     ___fladd@signs:
   681                           	callstack 0
   682  00000D                     ___flmul@sign:
   683                           	callstack 0
   684  00000D                     _tolower$925:
   685                           	callstack 0
   686  00000D                     ___fldiv@rem:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0xC
   690  00000D                     	ds	1
   691  00000E                     LCD_String_xy@row:
   692                           	callstack 0
   693  00000E                     ___fladd@aexp:
   694                           	callstack 0
   695  00000E                     fputs@c:
   696                           	callstack 0
   697  00000E                     atoi@neg:
   698                           	callstack 0
   699  00000E                     ___flmul@grs:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0xD
   703  00000E                     	ds	1
   704  00000F                     LCD_String_xy@location:
   705                           	callstack 0
   706  00000F                     ___fladd@bexp:
   707                           	callstack 0
   708  00000F                     fputs@i:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0xE
   712  00000F                     	ds	1
   713  000010                     ___fladd@grs:
   714                           	callstack 0
   715  000010                     _atoi$830:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0xF
   719  000010                     	ds	1
   720  000011                     ?_pad:
   721                           	callstack 0
   722  000011                     ___aodiv@counter:
   723                           	callstack 0
   724  000011                     ___aomod@counter:
   725                           	callstack 0
   726  000011                     ___fldiv@sign:
   727                           	callstack 0
   728  000011                     pad@fp:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x10
   732  000011                     	ds	1
   733  000012                     ___aodiv@sign:
   734                           	callstack 0
   735  000012                     ___aomod@sign:
   736                           	callstack 0
   737  000012                     ___flmul@aexp:
   738                           	callstack 0
   739  000012                     ___fldiv@new_exp:
   740                           	callstack 0
   741  000012                     _atoi$832:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x11
   745  000012                     	ds	1
   746  000013                     ?_abs:
   747                           	callstack 0
   748  000013                     ___flmul@bexp:
   749                           	callstack 0
   750  000013                     pad@buf:
   751                           	callstack 0
   752  000013                     abs@a:
   753                           	callstack 0
   754  000013                     ___aodiv@quotient:
   755                           	callstack 0
   756                           
   757                           ; 8 bytes @ 0x12
   758  000013                     	ds	1
   759  000014                     _atoi$831:
   760                           	callstack 0
   761  000014                     ___fldiv@grs:
   762                           	callstack 0
   763  000014                     ___flmul@prod:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x13
   767  000014                     	ds	1
   768  000015                     ??_abs:
   769  000015                     pad@p:
   770                           	callstack 0
   771  000015                     atoi@n:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x14
   775  000015                     	ds	2
   776  000017                     ??_pad:
   777                           
   778                           ; 1 bytes @ 0x16
   779  000017                     	ds	1
   780  000018                     ___fldiv@bexp:
   781                           	callstack 0
   782  000018                     ___flmul@temp:
   783                           	callstack 0
   784  000018                     pad@i:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x17
   788  000018                     	ds	1
   789  000019                     ___fldiv@aexp:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x18
   793  000019                     	ds	1
   794  00001A                     ?___flsub:
   795                           	callstack 0
   796  00001A                     ?_floorf:
   797                           	callstack 0
   798  00001A                     pad@w:
   799                           	callstack 0
   800  00001A                     ___flge@ff1:
   801                           	callstack 0
   802  00001A                     ___flsub@b:
   803                           	callstack 0
   804  00001A                     floorf@x:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x19
   808  00001A                     	ds	2
   809  00001C                     ?_dtoa:
   810                           	callstack 0
   811  00001C                     dtoa@fp:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x1B
   815  00001C                     	ds	2
   816  00001E                     ??_floorf:
   817  00001E                     ___flge@ff2:
   818                           	callstack 0
   819  00001E                     ___flsub@a:
   820                           	callstack 0
   821  00001E                     dtoa@d:
   822                           	callstack 0
   823                           
   824                           ; 8 bytes @ 0x1D
   825  00001E                     	ds	4
   826  000022                     ??___flge:
   827                           
   828                           ; 1 bytes @ 0x21
   829  000022                     	ds	2
   830  000024                     floorf@m:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x23
   834  000024                     	ds	2
   835  000026                     ??_dtoa:
   836                           
   837                           ; 1 bytes @ 0x25
   838  000026                     	ds	2
   839  000028                     floorf@e:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x27
   843  000028                     	ds	2
   844  00002A                     floorf@u:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x29
   848  00002A                     	ds	4
   849  00002E                     ?_efgtoa:
   850                           	callstack 0
   851  00002E                     _dtoa$740:
   852                           	callstack 0
   853  00002E                     efgtoa@fp:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x2D
   857  00002E                     	ds	2
   858  000030                     dtoa@p:
   859                           	callstack 0
   860  000030                     efgtoa@f:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x2F
   864  000030                     	ds	2
   865  000032                     dtoa@w:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x31
   869  000032                     	ds	2
   870  000034                     efgtoa@c:
   871                           	callstack 0
   872  000034                     dtoa@s:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x33
   876  000034                     	ds	1
   877  000035                     ??_efgtoa:
   878                           
   879                           ; 1 bytes @ 0x34
   880  000035                     	ds	1
   881  000036                     dtoa@n:
   882                           	callstack 0
   883                           
   884                           ; 8 bytes @ 0x35
   885  000036                     	ds	8
   886  00003E                     dtoa@i:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x3D
   890  00003E                     	ds	2
   891  000040                     ?_vfpfcnvrt:
   892                           	callstack 0
   893  000040                     vfpfcnvrt@fp:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x3F
   897  000040                     	ds	2
   898  000042                     vfpfcnvrt@fmt:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x41
   902  000042                     	ds	2
   903  000044                     vfpfcnvrt@ap:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x43
   907  000044                     	ds	2
   908  000046                     ??_vfpfcnvrt:
   909                           
   910                           ; 1 bytes @ 0x45
   911  000046                     	ds	4
   912  00004A                     vfpfcnvrt@ll:
   913                           	callstack 0
   914                           
   915                           ; 8 bytes @ 0x49
   916  00004A                     	ds	8
   917  000052                     vfpfcnvrt@done:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x51
   921  000052                     	ds	2
   922  000054                     _vfpfcnvrt$789:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x53
   926  000054                     	ds	2
   927  000056                     _vfpfcnvrt$794:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x55
   931  000056                     	ds	2
   932  000058                     vfpfcnvrt@f:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x57
   936  000058                     	ds	4
   937  00005C                     vfpfcnvrt@ct:
   938                           	callstack 0
   939                           
   940                           ; 3 bytes @ 0x5B
   941  00005C                     	ds	3
   942  00005F                     vfpfcnvrt@c:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0x5E
   946  00005F                     	ds	1
   947  000060                     
   948                           ; 1 bytes @ 0x5F
   949 ;;
   950 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   951 ;;
   952 ;; *************** function _main *****************
   953 ;; Defined at:
   954 ;;		line 19 in file "distance_finding.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  Total_distan   40    0        float [10]
   959 ;;  Total_distan   20   83[BANK0 ] int [10]
   960 ;;  Distance        2  103[BANK0 ] int 
   961 ;;  Time            2    0        int 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   971 ;;      Params:         0       0       0       0       0       0       0       0       0
   972 ;;      Locals:         0      22       0       0       0       0       0       0       0
   973 ;;      Temps:          0       1       0       0       0       0       0       0       0
   974 ;;      Totals:         0      23       0       0       0       0       0       0       0
   975 ;;Total ram usage:       23 bytes
   976 ;; Hardware stack levels required when called:    8
   977 ;; This function calls:
   978 ;;		_LCD_Clear
   979 ;;		_LCD_Init
   980 ;;		_LCD_String_xy
   981 ;;		_MSdelay
   982 ;;		_Secuence1
   983 ;;		_Secuence2
   984 ;;		_Secuence3
   985 ;;		_Secuence4
   986 ;;		_sprintf
   987 ;; This function is called by:
   988 ;;		Startup code after reset
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text0
   993  003920                     __ptext0:
   994                           	callstack 0
   995  003920                     _main:
   996                           	callstack 23
   997  003920                     
   998                           ;distance_finding.c: 21:     int Distance;;distance_finding.c: 22:     int Time;;distanc
      +                          e_finding.c: 23:     int Total_distance[10];;distance_finding.c: 24:     float Total_dis
      +                          tance2[10];;distance_finding.c: 26:     OSCCON=0x72;
   999  003920  0E72               	movlw	114
  1000  003922  6ED3               	movwf	211,c	;volatile
  1001                           
  1002                           ;distance_finding.c: 28:     TRISD = 0;
  1003  003924  0E00               	movlw	0
  1004  003926  6E95               	movwf	149,c	;volatile
  1005  003928                     
  1006                           ;distance_finding.c: 30:     LCD_Init();
  1007  003928  EC97  F023         	call	_LCD_Init	;wreg free
  1008  00392C                     l5133:
  1009                           
  1010                           ;distance_finding.c: 32:     LCD_Clear();
  1011  00392C  ECC2  F023         	call	_LCD_Clear	;wreg free
  1012                           
  1013                           ;distance_finding.c: 33:     while(c==0){
  1014  003930  EFAB  F01C         	goto	l5145
  1015  003934                     l5135:
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;distance_finding.c: 34:     LCD_String_xy(1,0,"Introduce valor: ");
  1019  003934  0E00               	movlw	0
  1020  003936  6E0B               	movwf	LCD_String_xy@pos^0,c
  1021  003938  0E01               	movlw	low STR_1
  1022  00393A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1023  00393C  0E08               	movlw	high STR_1
  1024  00393E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1025  003940  0E01               	movlw	1
  1026  003942  EC08  F023         	call	_LCD_String_xy
  1027  003946                     
  1028                           ;distance_finding.c: 35:     Secuence1();
  1029  003946  EC28  F018         	call	_Secuence1	;wreg free
  1030  00394A                     
  1031                           ;distance_finding.c: 36:     Secuence2();
  1032  00394A  EC04  F017         	call	_Secuence2	;wreg free
  1033  00394E                     
  1034                           ;distance_finding.c: 37:     Secuence3();
  1035  00394E  ECD3  F015         	call	_Secuence3	;wreg free
  1036  003952                     
  1037                           ;distance_finding.c: 38:     Secuence4();
  1038  003952  EC9B  F014         	call	_Secuence4	;wreg free
  1039  003956                     l5145:
  1040                           
  1041                           ;distance_finding.c: 33:     while(c==0){
  1042  003956  0100               	movlb	0	; () banked
  1043  003958  51DF               	movf	_c& (0+255),w,b
  1044  00395A  11E0               	iorwf	(_c+1)& (0+255),w,b
  1045  00395C  B4D8               	btfsc	status,2,c
  1046  00395E  EFB3  F01C         	goto	u6651
  1047  003962  EFB5  F01C         	goto	u6650
  1048  003966                     u6651:
  1049  003966  EF9A  F01C         	goto	l5135
  1050  00396A                     u6650:
  1051  00396A                     
  1052                           ; BSR set to: 0
  1053                           ;distance_finding.c: 40:     LCD_Clear();
  1054  00396A  ECC2  F023         	call	_LCD_Clear	;wreg free
  1055                           
  1056                           ;distance_finding.c: 41:     while(c>=1 && f == 0){
  1057  00396E  EFEC  F01C         	goto	l5161
  1058  003972                     l5149:
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;distance_finding.c: 54:     Secuence1();
  1062  003972  EC28  F018         	call	_Secuence1	;wreg free
  1063                           
  1064                           ;distance_finding.c: 55:     Secuence2();
  1065  003976  EC04  F017         	call	_Secuence2	;wreg free
  1066                           
  1067                           ;distance_finding.c: 56:     Secuence3();
  1068  00397A  ECD3  F015         	call	_Secuence3	;wreg free
  1069                           
  1070                           ;distance_finding.c: 57:     Secuence4();
  1071  00397E  EC9B  F014         	call	_Secuence4	;wreg free
  1072  003982                     
  1073                           ;distance_finding.c: 59:     _delay((unsigned long)((900)*(20000000/4000000.0)));
  1074  003982  0E06               	movlw	6
  1075  003984  0100               	movlb	0	; () banked
  1076  003986  6FB2               	movwf	??_main& (0+255),b
  1077  003988  0ED7               	movlw	215
  1078  00398A                     u6697:
  1079  00398A  2EE8               	decfsz	wreg,f,c
  1080  00398C  D7FE               	bra	u6697
  1081  00398E  2FB2               	decfsz	??_main& (0+255),f,b
  1082  003990  D7FC               	bra	u6697
  1083  003992                     
  1084                           ;distance_finding.c: 60:     Distance = (a*1);
  1085  003992  C0D9  F0C7         	movff	_a,main@Distance
  1086  003996  C0DA  F0C8         	movff	_a+1,main@Distance+1
  1087  00399A                     
  1088                           ;distance_finding.c: 61:     sprintf(Total_distance,"%d",Distance);
  1089  00399A  0EB3               	movlw	low main@Total_distance
  1090  00399C  0100               	movlb	0	; () banked
  1091  00399E  6FA0               	movwf	sprintf@s& (0+255),b
  1092  0039A0  0E00               	movlw	high main@Total_distance
  1093  0039A2  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1094  0039A4  0E2C               	movlw	low STR_2
  1095  0039A6  6FA2               	movwf	sprintf@fmt& (0+255),b
  1096  0039A8  0E08               	movlw	high STR_2
  1097  0039AA  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1098  0039AC  C0C7  F0A4         	movff	main@Distance,?_sprintf+4
  1099  0039B0  C0C8  F0A5         	movff	main@Distance+1,?_sprintf+5
  1100  0039B4  ECBF  F021         	call	_sprintf	;wreg free
  1101  0039B8                     
  1102                           ;distance_finding.c: 62:     LCD_String_xy(b,c-1,Total_distance);
  1103  0039B8  0100               	movlb	0	; () banked
  1104  0039BA  05DF               	decf	_c& (0+255),w,b
  1105  0039BC  6E0B               	movwf	LCD_String_xy@pos^0,c
  1106  0039BE  0EB3               	movlw	low main@Total_distance
  1107  0039C0  6E0C               	movwf	LCD_String_xy@msg^0,c
  1108  0039C2  0E00               	movlw	high main@Total_distance
  1109  0039C4  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1110  0039C6  51E7               	movf	_b& (0+255),w,b
  1111  0039C8  EC08  F023         	call	_LCD_String_xy
  1112  0039CC                     
  1113                           ;distance_finding.c: 63:     MSdelay(50);
  1114  0039CC  0E00               	movlw	0
  1115  0039CE  6E02               	movwf	(MSdelay@val+1)^0,c
  1116  0039D0  0E32               	movlw	50
  1117  0039D2  6E01               	movwf	MSdelay@val^0,c
  1118  0039D4  EC5D  F022         	call	_MSdelay	;wreg free
  1119  0039D8                     l5161:
  1120                           
  1121                           ;distance_finding.c: 41:     while(c>=1 && f == 0){
  1122  0039D8  0100               	movlb	0	; () banked
  1123  0039DA  BFE0               	btfsc	(_c+1)& (0+255),7,b
  1124  0039DC  EFF8  F01C         	goto	u6661
  1125  0039E0  51E0               	movf	(_c+1)& (0+255),w,b
  1126  0039E2  E108               	bnz	u6660
  1127  0039E4  05DF               	decf	_c& (0+255),w,b
  1128  0039E6  A0D8               	btfss	status,0,c
  1129  0039E8  EFF8  F01C         	goto	u6661
  1130  0039EC  EFFA  F01C         	goto	u6660
  1131  0039F0                     u6661:
  1132  0039F0  EF2E  F01D         	goto	l5173
  1133  0039F4                     u6660:
  1134  0039F4                     
  1135                           ; BSR set to: 0
  1136  0039F4  51DB               	movf	_f& (0+255),w,b
  1137  0039F6  11DC               	iorwf	(_f+1)& (0+255),w,b
  1138  0039F8  B4D8               	btfsc	status,2,c
  1139  0039FA  EF01  F01D         	goto	u6671
  1140  0039FE  EF03  F01D         	goto	u6670
  1141  003A02                     u6671:
  1142  003A02  EFB9  F01C         	goto	l5149
  1143  003A06                     u6670:
  1144  003A06  EF2E  F01D         	goto	l5173
  1145  003A0A                     l5165:
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;distance_finding.c: 70:         Secuence1();
  1149  003A0A  EC28  F018         	call	_Secuence1	;wreg free
  1150                           
  1151                           ;distance_finding.c: 71:         Secuence2();
  1152  003A0E  EC04  F017         	call	_Secuence2	;wreg free
  1153                           
  1154                           ;distance_finding.c: 72:         Secuence3();
  1155  003A12  ECD3  F015         	call	_Secuence3	;wreg free
  1156                           
  1157                           ;distance_finding.c: 73:         Secuence4();
  1158  003A16  EC9B  F014         	call	_Secuence4	;wreg free
  1159  003A1A                     
  1160                           ;distance_finding.c: 74:         sprintf(Total_distance,"%0.3f",e);
  1161  003A1A  0EB3               	movlw	low main@Total_distance
  1162  003A1C  0100               	movlb	0	; () banked
  1163  003A1E  6FA0               	movwf	sprintf@s& (0+255),b
  1164  003A20  0E00               	movlw	high main@Total_distance
  1165  003A22  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1166  003A24  0E13               	movlw	low STR_3
  1167  003A26  6FA2               	movwf	sprintf@fmt& (0+255),b
  1168  003A28  0E08               	movlw	high STR_3
  1169  003A2A  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1170  003A2C  0EEE               	movlw	238
  1171  003A2E  6FA4               	movwf	(?_sprintf+4)& (0+255),b
  1172  003A30  0E7C               	movlw	124
  1173  003A32  6FA5               	movwf	(?_sprintf+5)& (0+255),b
  1174  003A34  0E2B               	movlw	43
  1175  003A36  6FA6               	movwf	(?_sprintf+6)& (0+255),b
  1176  003A38  0E41               	movlw	65
  1177  003A3A  6FA7               	movwf	(?_sprintf+7)& (0+255),b
  1178  003A3C  ECBF  F021         	call	_sprintf	;wreg free
  1179  003A40                     
  1180                           ;distance_finding.c: 75:         LCD_String_xy(1,0,Total_distance);
  1181  003A40  0E00               	movlw	0
  1182  003A42  6E0B               	movwf	LCD_String_xy@pos^0,c
  1183  003A44  0EB3               	movlw	low main@Total_distance
  1184  003A46  6E0C               	movwf	LCD_String_xy@msg^0,c
  1185  003A48  0E00               	movlw	high main@Total_distance
  1186  003A4A  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1187  003A4C  0E01               	movlw	1
  1188  003A4E  EC08  F023         	call	_LCD_String_xy
  1189  003A52                     
  1190                           ;distance_finding.c: 76:        c=1;
  1191  003A52  0E00               	movlw	0
  1192  003A54  0100               	movlb	0	; () banked
  1193  003A56  6FE0               	movwf	(_c+1)& (0+255),b
  1194  003A58  0E01               	movlw	1
  1195  003A5A  6FDF               	movwf	_c& (0+255),b
  1196  003A5C                     l5173:
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;distance_finding.c: 69:     while(f==1){
  1200  003A5C  05DB               	decf	_f& (0+255),w,b
  1201  003A5E  11DC               	iorwf	(_f+1)& (0+255),w,b
  1202  003A60  B4D8               	btfsc	status,2,c
  1203  003A62  EF35  F01D         	goto	u6681
  1204  003A66  EF37  F01D         	goto	u6680
  1205  003A6A                     u6681:
  1206  003A6A  EF05  F01D         	goto	l5165
  1207  003A6E                     u6680:
  1208  003A6E  EF96  F01C         	goto	l5133
  1209  003A72  EF00  F000         	goto	start
  1210  003A76                     __end_of_main:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _sprintf *****************
  1214 ;; Defined at:
  1215 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  s               2   64[BANK0 ] PTR unsigned char 
  1218 ;;		 -> main@Total_distance(20), 
  1219 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  1220 ;;		 -> STR_3(6), STR_2(3), 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  f               6   76[BANK0 ] struct _IO_FILE
  1223 ;;  ap              2   74[BANK0 ] PTR void [1]
  1224 ;;		 -> ?_sprintf(2), 
  1225 ;;  ret             2    0        int 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  2   64[BANK0 ] int 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1235 ;;      Params:         0       8       0       0       0       0       0       0       0
  1236 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1238 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1239 ;;Total ram usage:       18 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    7
  1242 ;; This function calls:
  1243 ;;		_vfprintf
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text1
  1250  00437E                     __ptext1:
  1251                           	callstack 0
  1252  00437E                     _sprintf:
  1253                           	callstack 23
  1254  00437E  0EA4               	movlw	low (?_sprintf+4)
  1255  004380  0100               	movlb	0	; () banked
  1256  004382  6FAA               	movwf	sprintf@ap& (0+255),b
  1257  004384  0E00               	movlw	high (?_sprintf+4)
  1258  004386  6FAB               	movwf	(sprintf@ap+1)& (0+255),b
  1259  004388  C0A0  F0AC         	movff	sprintf@s,sprintf@f
  1260  00438C  C0A1  F0AD         	movff	sprintf@s+1,sprintf@f+1
  1261  004390                     
  1262                           ; BSR set to: 0
  1263  004390  0E00               	movlw	0
  1264  004392  6FAF               	movwf	(sprintf@f+3)& (0+255),b
  1265  004394  0E00               	movlw	0
  1266  004396  6FAE               	movwf	(sprintf@f+2)& (0+255),b
  1267  004398                     
  1268                           ; BSR set to: 0
  1269  004398  0E00               	movlw	0
  1270  00439A  6FB1               	movwf	(sprintf@f+5)& (0+255),b
  1271  00439C  0E00               	movlw	0
  1272  00439E  6FB0               	movwf	(sprintf@f+4)& (0+255),b
  1273  0043A0                     
  1274                           ; BSR set to: 0
  1275  0043A0  0EAC               	movlw	low sprintf@f
  1276  0043A2  6F98               	movwf	vfprintf@fp& (0+255),b
  1277  0043A4  0E00               	movlw	high sprintf@f
  1278  0043A6  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  1279  0043A8  C0A2  F09A         	movff	sprintf@fmt,vfprintf@fmt
  1280  0043AC  C0A3  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1281  0043B0  0EAA               	movlw	low sprintf@ap
  1282  0043B2  6F9C               	movwf	vfprintf@ap& (0+255),b
  1283  0043B4  0E00               	movlw	high sprintf@ap
  1284  0043B6  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  1285  0043B8  EC01  F021         	call	_vfprintf	;wreg free
  1286  0043BC  0100               	movlb	0	; () banked
  1287  0043BE  51AE               	movf	(sprintf@f+2)& (0+255),w,b
  1288  0043C0  25A0               	addwf	sprintf@s& (0+255),w,b
  1289  0043C2  6ED9               	movwf	fsr2l,c
  1290  0043C4  51AF               	movf	(sprintf@f+3)& (0+255),w,b
  1291  0043C6  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1292  0043C8  6EDA               	movwf	fsr2h,c
  1293  0043CA  0E00               	movlw	0
  1294  0043CC  6EDF               	movwf	indf2,c
  1295  0043CE                     
  1296                           ; BSR set to: 0
  1297  0043CE  0012               	return		;funcret
  1298  0043D0                     __end_of_sprintf:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _vfprintf *****************
  1302 ;; Defined at:
  1303 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1306 ;;		 -> sprintf@f(6), 
  1307 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1308 ;;		 -> STR_3(6), STR_2(3), 
  1309 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1310 ;;		 -> sprintf@ap(2), 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  cfmt            2   62[BANK0 ] PTR unsigned char 
  1313 ;;		 -> STR_3(6), STR_2(3), 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  2   56[BANK0 ] int 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1323 ;;      Params:         0       6       0       0       0       0       0       0       0
  1324 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1326 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1327 ;;Total ram usage:        8 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    6
  1330 ;; This function calls:
  1331 ;;		_vfpfcnvrt
  1332 ;; This function is called by:
  1333 ;;		_sprintf
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text2
  1338  004202                     __ptext2:
  1339                           	callstack 0
  1340  004202                     _vfprintf:
  1341                           	callstack 23
  1342  004202                     
  1343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1344  004202  C09A  F09E         	movff	vfprintf@fmt,vfprintf@cfmt
  1345  004206  C09B  F09F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1346  00420A                     
  1347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1348  00420A  0E00               	movlw	0
  1349  00420C  0100               	movlb	0	; () banked
  1350  00420E  6FD2               	movwf	(_nout+1)& (0+255),b
  1351  004210  0E00               	movlw	0
  1352  004212  6FD1               	movwf	_nout& (0+255),b
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1355  004214  EF1F  F021         	goto	l4721
  1356  004218                     l4719:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1360  004218  C098  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1361  00421C  C099  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1362  004220  0E9E               	movlw	low vfprintf@cfmt
  1363  004222  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1364  004224  0E00               	movlw	high vfprintf@cfmt
  1365  004226  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1366  004228  C09C  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1367  00422C  C09D  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1368  004230  ECF0  F009         	call	_vfpfcnvrt	;wreg free
  1369  004234  5040               	movf	?_vfpfcnvrt^0,w,c
  1370  004236  0100               	movlb	0	; () banked
  1371  004238  27D1               	addwf	_nout& (0+255),f,b
  1372  00423A  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1373  00423C  23D2               	addwfc	(_nout+1)& (0+255),f,b
  1374  00423E                     l4721:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1378  00423E  C09E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1379  004242  C09F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1380  004246                     	if	0	;tblptru may be non-zero
  1381  004246                     	endif
  1382  004246                     	if	0	;tblptru may be non-zero
  1383  004246                     	endif
  1384  004246  0008               	tblrd		*
  1385  004248  50F5               	movf	tablat,w,c
  1386  00424A  0900               	iorlw	0
  1387  00424C  A4D8               	btfss	status,2,c
  1388  00424E  EF2B  F021         	goto	u5981
  1389  004252  EF2D  F021         	goto	u5980
  1390  004256                     u5981:
  1391  004256  EF0C  F021         	goto	l4719
  1392  00425A                     u5980:
  1393  00425A                     
  1394                           ; BSR set to: 0
  1395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1396  00425A  C0D1  F098         	movff	_nout,?_vfprintf
  1397  00425E  C0D2  F099         	movff	_nout+1,?_vfprintf+1
  1398  004262                     
  1399                           ; BSR set to: 0
  1400  004262  0012               	return		;funcret
  1401  004264                     __end_of_vfprintf:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _vfpfcnvrt *****************
  1405 ;; Defined at:
  1406 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1409 ;;		 -> sprintf@f(6), 
  1410 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1411 ;;		 -> vfprintf@cfmt(2), 
  1412 ;;  ap              2   67[COMRAM] PTR PTR void 
  1413 ;;		 -> sprintf@ap(2), 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  ll              8   73[COMRAM] long long 
  1416 ;;  llu             8    0        unsigned long long 
  1417 ;;  f               4   87[COMRAM] unsigned long long 
  1418 ;;  ct              3   91[COMRAM] unsigned char [3]
  1419 ;;  vp              3    0        PTR void 
  1420 ;;  cp              3    0        PTR unsigned char 
  1421 ;;  done            2   81[COMRAM] int 
  1422 ;;  i               2    0        int 
  1423 ;;  c               1   94[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2   63[COMRAM] int 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1433 ;;      Params:         6       0       0       0       0       0       0       0       0
  1434 ;;      Locals:        22       0       0       0       0       0       0       0       0
  1435 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1436 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1437 ;;Total ram usage:       32 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    5
  1440 ;; This function calls:
  1441 ;;		_atoi
  1442 ;;		_dtoa
  1443 ;;		_efgtoa
  1444 ;;		_fputc
  1445 ;;		_isdigit
  1446 ;;		_isupper
  1447 ;;		_strncmp
  1448 ;;		_tolower
  1449 ;; This function is called by:
  1450 ;;		_vfprintf
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text3
  1455  0013E0                     __ptext3:
  1456                           	callstack 0
  1457  0013E0                     _vfpfcnvrt:
  1458                           	callstack 23
  1459  0013E0                     
  1460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1461  0013E0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1462  0013E4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1463  0013E8  CFDE FFF6          	movff	postinc2,tblptrl
  1464  0013EC  CFDD FFF7          	movff	postdec2,tblptrh
  1465  0013F0                     	if	0	;tblptru may be non-zero
  1466  0013F0                     	endif
  1467  0013F0                     	if	0	;tblptru may be non-zero
  1468  0013F0                     	endif
  1469  0013F0  0008               	tblrd		*
  1470  0013F2  50F5               	movf	tablat,w,c
  1471  0013F4  0A25               	xorlw	37
  1472  0013F6  A4D8               	btfss	status,2,c
  1473  0013F8  EF00  F00A         	goto	u5771
  1474  0013FC  EF02  F00A         	goto	u5770
  1475  001400                     u5771:
  1476  001400  EFCB  F00C         	goto	l4691
  1477  001404                     u5770:
  1478  001404                     
  1479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1480  001404  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1481  001408  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1482  00140C  2ADE               	incf	postinc2,f,c
  1483  00140E  0E00               	movlw	0
  1484  001410  22DD               	addwfc	postdec2,f,c
  1485  001412                     
  1486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1487  001412  0E00               	movlw	0
  1488  001414  0100               	movlb	0	; () banked
  1489  001416  6FD4               	movwf	(_width+1)& (0+255),b
  1490  001418  0E00               	movlw	0
  1491  00141A  6FD3               	movwf	_width& (0+255),b
  1492  00141C  C0D3  F0D7         	movff	_width,_flags
  1493  001420  C0D4  F0D8         	movff	_width+1,_flags+1
  1494  001424                     
  1495                           ; BSR set to: 0
  1496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1497  001424  69D5               	setf	_prec& (0+255),b
  1498  001426  69D6               	setf	(_prec+1)& (0+255),b
  1499  001428                     
  1500                           ; BSR set to: 0
  1501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1502  001428  0E00               	movlw	0
  1503  00142A  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1504  00142C  0E00               	movlw	0
  1505  00142E  6E52               	movwf	vfpfcnvrt@done^0,c
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1508  001430  EF65  F00A         	goto	l4603
  1509  001434                     l4577:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1512  001434  0100               	movlb	0	; () banked
  1513  001436  81D7               	bsf	_flags& (0+255),0,b
  1514  001438                     l4579:
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1518  001438  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1519  00143C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1520  001440  2ADE               	incf	postinc2,f,c
  1521  001442  0E00               	movlw	0
  1522  001444  22DD               	addwfc	postdec2,f,c
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1525  001446  EF65  F00A         	goto	l4603
  1526  00144A                     l4581:
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1529  00144A  0100               	movlb	0	; () banked
  1530  00144C  83D7               	bsf	_flags& (0+255),1,b
  1531  00144E  EF1C  F00A         	goto	l4579
  1532  001452                     l4585:
  1533                           
  1534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1535  001452  0100               	movlb	0	; () banked
  1536  001454  85D7               	bsf	_flags& (0+255),2,b
  1537  001456  EF1C  F00A         	goto	l4579
  1538  00145A                     l4589:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1541  00145A  0100               	movlb	0	; () banked
  1542  00145C  87D7               	bsf	_flags& (0+255),3,b
  1543  00145E  EF1C  F00A         	goto	l4579
  1544  001462                     l4593:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1547  001462  0100               	movlb	0	; () banked
  1548  001464  89D7               	bsf	_flags& (0+255),4,b
  1549  001466  EF1C  F00A         	goto	l4579
  1550  00146A                     l4597:
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1553  00146A  0E00               	movlw	0
  1554  00146C  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1555  00146E  0E01               	movlw	1
  1556  001470  6E52               	movwf	vfpfcnvrt@done^0,c
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1559  001472  EF65  F00A         	goto	l4603
  1560  001476                     l4601:
  1561  001476  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1562  00147A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1563  00147E  CFDE FFF6          	movff	postinc2,tblptrl
  1564  001482  CFDD FFF7          	movff	postdec2,tblptrh
  1565  001486                     	if	0	;tblptru may be non-zero
  1566  001486                     	endif
  1567  001486                     	if	0	;tblptru may be non-zero
  1568  001486                     	endif
  1569  001486  0008               	tblrd		*
  1570  001488  50F5               	movf	tablat,w,c
  1571  00148A  6E46               	movwf	??_vfpfcnvrt^0,c
  1572  00148C  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  1573                           
  1574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 1, Range of values is 0 to 0
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte            4     3 (average)
  1580                           ;	Chosen strategy is simple_byte
  1581  00148E  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1582  001490  0A00               	xorlw	0	; case 0
  1583  001492  B4D8               	btfsc	status,2,c
  1584  001494  EF4E  F00A         	goto	l5225
  1585  001498  EF35  F00A         	goto	l4597
  1586  00149C                     l5225:
  1587                           
  1588                           ; Switch size 1, requested type "simple"
  1589                           ; Number of cases is 5, Range of values is 32 to 48
  1590                           ; switch strategies available:
  1591                           ; Name         Instructions Cycles
  1592                           ; simple_byte           16     9 (average)
  1593                           ;	Chosen strategy is simple_byte
  1594  00149C  5046               	movf	??_vfpfcnvrt^0,w,c
  1595  00149E  0A20               	xorlw	32	; case 32
  1596  0014A0  B4D8               	btfsc	status,2,c
  1597  0014A2  EF2D  F00A         	goto	l4589
  1598  0014A6  0A03               	xorlw	3	; case 35
  1599  0014A8  B4D8               	btfsc	status,2,c
  1600  0014AA  EF31  F00A         	goto	l4593
  1601  0014AE  0A08               	xorlw	8	; case 43
  1602  0014B0  B4D8               	btfsc	status,2,c
  1603  0014B2  EF29  F00A         	goto	l4585
  1604  0014B6  0A06               	xorlw	6	; case 45
  1605  0014B8  B4D8               	btfsc	status,2,c
  1606  0014BA  EF1A  F00A         	goto	l4577
  1607  0014BE  0A1D               	xorlw	29	; case 48
  1608  0014C0  B4D8               	btfsc	status,2,c
  1609  0014C2  EF25  F00A         	goto	l4581
  1610  0014C6  EF35  F00A         	goto	l4597
  1611  0014CA                     l4603:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1614  0014CA  5052               	movf	vfpfcnvrt@done^0,w,c
  1615  0014CC  1053               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1616  0014CE  B4D8               	btfsc	status,2,c
  1617  0014D0  EF6C  F00A         	goto	u5781
  1618  0014D4  EF6E  F00A         	goto	u5780
  1619  0014D8                     u5781:
  1620  0014D8  EF3B  F00A         	goto	l4601
  1621  0014DC                     u5780:
  1622  0014DC                     
  1623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1624  0014DC  0100               	movlb	0	; () banked
  1625  0014DE  A1D7               	btfss	_flags& (0+255),0,b
  1626  0014E0  EF74  F00A         	goto	u5791
  1627  0014E4  EF76  F00A         	goto	u5790
  1628  0014E8                     u5791:
  1629  0014E8  EF77  F00A         	goto	l4607
  1630  0014EC                     u5790:
  1631  0014EC                     
  1632                           ; BSR set to: 0
  1633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1634  0014EC  93D7               	bcf	_flags& (0+255),1,b
  1635  0014EE                     l4607:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1639  0014EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  0014F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  0014F6  CFDE FFF6          	movff	postinc2,tblptrl
  1642  0014FA  CFDD FFF7          	movff	postdec2,tblptrh
  1643  0014FE                     	if	0	;tblptru may be non-zero
  1644  0014FE                     	endif
  1645  0014FE                     	if	0	;tblptru may be non-zero
  1646  0014FE                     	endif
  1647  0014FE  0008               	tblrd		*
  1648  001500  50F5               	movf	tablat,w,c
  1649  001502  0A2E               	xorlw	46
  1650  001504  A4D8               	btfss	status,2,c
  1651  001506  EF87  F00A         	goto	u5801
  1652  00150A  EF89  F00A         	goto	u5800
  1653  00150E                     u5801:
  1654  00150E  EF06  F00B         	goto	l4627
  1655  001512                     u5800:
  1656  001512                     
  1657                           ; BSR set to: 0
  1658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1659  001512  0E00               	movlw	0
  1660  001514  6FD6               	movwf	(_prec+1)& (0+255),b
  1661  001516  0E00               	movlw	0
  1662  001518  6FD5               	movwf	_prec& (0+255),b
  1663  00151A                     
  1664                           ; BSR set to: 0
  1665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1666  00151A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1667  00151E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1668  001522  2ADE               	incf	postinc2,f,c
  1669  001524  0E00               	movlw	0
  1670  001526  22DD               	addwfc	postdec2,f,c
  1671  001528                     
  1672                           ; BSR set to: 0
  1673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1674  001528  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1675  00152C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1676  001530  CFDE FFF6          	movff	postinc2,tblptrl
  1677  001534  CFDD FFF7          	movff	postdec2,tblptrh
  1678  001538                     	if	0	;tblptru may be non-zero
  1679  001538                     	endif
  1680  001538                     	if	0	;tblptru may be non-zero
  1681  001538                     	endif
  1682  001538  0008               	tblrd		*
  1683  00153A  50F5               	movf	tablat,w,c
  1684  00153C  0A2A               	xorlw	42
  1685  00153E  A4D8               	btfss	status,2,c
  1686  001540  EFA4  F00A         	goto	u5811
  1687  001544  EFA6  F00A         	goto	u5810
  1688  001548                     u5811:
  1689  001548  EFC3  F00A         	goto	l4617
  1690  00154C                     u5810:
  1691  00154C                     
  1692                           ; BSR set to: 0
  1693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1694  00154C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1695  001550  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1696  001554  2ADE               	incf	postinc2,f,c
  1697  001556  0E00               	movlw	0
  1698  001558  22DD               	addwfc	postdec2,f,c
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1701  00155A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1702  00155E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1703  001562  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1704  001566  0E02               	movlw	2
  1705  001568  26DE               	addwf	postinc2,f,c
  1706  00156A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1707  00156E  0E00               	movlw	0
  1708  001570  22DD               	addwfc	postdec2,f,c
  1709  001572  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1710  001576  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1711  00157A  CFDE F0D5          	movff	postinc2,_prec
  1712  00157E  CFDD F0D6          	movff	postdec2,_prec+1
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1715  001582  EF06  F00B         	goto	l4627
  1716  001586                     l4617:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1720  001586  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721  00158A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722  00158E  CFDE F008          	movff	postinc2,atoi@s
  1723  001592  CFDD F009          	movff	postdec2,atoi@s+1
  1724  001596  EC52  F01A         	call	_atoi	;wreg free
  1725  00159A  C008  F0D5         	movff	?_atoi,_prec
  1726  00159E  C009  F0D6         	movff	?_atoi+1,_prec+1
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1729  0015A2  EFDA  F00A         	goto	l4621
  1730  0015A6                     l4619:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1733  0015A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1734  0015AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1735  0015AE  2ADE               	incf	postinc2,f,c
  1736  0015B0  0E00               	movlw	0
  1737  0015B2  22DD               	addwfc	postdec2,f,c
  1738  0015B4                     l4621:
  1739  0015B4  0ED0               	movlw	208
  1740  0015B6  6E46               	movwf	??_vfpfcnvrt^0,c
  1741  0015B8  0EFF               	movlw	255
  1742  0015BA  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1743  0015BC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1744  0015C0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1745  0015C4  CFDE FFF6          	movff	postinc2,tblptrl
  1746  0015C8  CFDD FFF7          	movff	postdec2,tblptrh
  1747  0015CC                     	if	0	;tblptru may be non-zero
  1748  0015CC                     	endif
  1749  0015CC                     	if	0	;tblptru may be non-zero
  1750  0015CC                     	endif
  1751  0015CC  0008               	tblrd		*
  1752  0015CE  50F5               	movf	tablat,w,c
  1753  0015D0  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1754  0015D2  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1755  0015D4  5046               	movf	??_vfpfcnvrt^0,w,c
  1756  0015D6  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1757  0015D8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1758  0015DA  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1759  0015DC  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1760  0015DE  E10A               	bnz	u5820
  1761  0015E0  0E0A               	movlw	10
  1762  0015E2  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1763  0015E4  A0D8               	btfss	status,0,c
  1764  0015E6  EFF7  F00A         	goto	u5821
  1765  0015EA  EFFA  F00A         	goto	u5820
  1766  0015EE                     u5821:
  1767  0015EE  0E01               	movlw	1
  1768  0015F0  EFFB  F00A         	goto	u5830
  1769  0015F4                     u5820:
  1770  0015F4  0E00               	movlw	0
  1771  0015F6                     u5830:
  1772  0015F6  6E54               	movwf	_vfpfcnvrt$789^0,c
  1773  0015F8  6A55               	clrf	(_vfpfcnvrt$789+1)^0,c
  1774  0015FA  5054               	movf	_vfpfcnvrt$789^0,w,c
  1775  0015FC  1055               	iorwf	(_vfpfcnvrt$789+1)^0,w,c
  1776  0015FE  A4D8               	btfss	status,2,c
  1777  001600  EF04  F00B         	goto	u5841
  1778  001604  EF06  F00B         	goto	u5840
  1779  001608                     u5841:
  1780  001608  EFD3  F00A         	goto	l4619
  1781  00160C                     u5840:
  1782  00160C                     l4627:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1785  00160C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1786  001610  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1787  001614  CFDE FFF6          	movff	postinc2,tblptrl
  1788  001618  CFDD FFF7          	movff	postdec2,tblptrh
  1789  00161C                     	if	0	;tblptru may be non-zero
  1790  00161C                     	endif
  1791  00161C                     	if	0	;tblptru may be non-zero
  1792  00161C                     	endif
  1793  00161C  0008               	tblrd		*
  1794  00161E  50F5               	movf	tablat,w,c
  1795  001620  6E07               	movwf	tolower@c^0,c
  1796  001622  6A08               	clrf	(tolower@c+1)^0,c
  1797  001624  EC32  F021         	call	_tolower	;wreg free
  1798  001628  5007               	movf	?_tolower^0,w,c
  1799  00162A  6E5C               	movwf	vfpfcnvrt@ct^0,c
  1800  00162C                     
  1801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1802  00162C  505C               	movf	vfpfcnvrt@ct^0,w,c
  1803  00162E  B4D8               	btfsc	status,2,c
  1804  001630  EF1C  F00B         	goto	u5851
  1805  001634  EF1E  F00B         	goto	u5850
  1806  001638                     u5851:
  1807  001638  EF56  F00B         	goto	l4637
  1808  00163C                     u5850:
  1809  00163C                     
  1810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1811  00163C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1812  001640  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1813  001644  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1814  001648  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1815  00164C  0E01               	movlw	1
  1816  00164E  2646               	addwf	??_vfpfcnvrt^0,f,c
  1817  001650  0E00               	movlw	0
  1818  001652  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1819  001654  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1820  001658  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1821  00165C                     	if	0	;tblptru may be non-zero
  1822  00165C                     	endif
  1823  00165C                     	if	0	;tblptru may be non-zero
  1824  00165C                     	endif
  1825  00165C  0008               	tblrd		*
  1826  00165E  50F5               	movf	tablat,w,c
  1827  001660  6E07               	movwf	tolower@c^0,c
  1828  001662  6A08               	clrf	(tolower@c+1)^0,c
  1829  001664  EC32  F021         	call	_tolower	;wreg free
  1830  001668  5007               	movf	?_tolower^0,w,c
  1831  00166A  6E5D               	movwf	(vfpfcnvrt@ct+1)^0,c
  1832  00166C                     
  1833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1834  00166C  505D               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1835  00166E  B4D8               	btfsc	status,2,c
  1836  001670  EF3C  F00B         	goto	u5861
  1837  001674  EF3E  F00B         	goto	u5860
  1838  001678                     u5861:
  1839  001678  EF56  F00B         	goto	l4637
  1840  00167C                     u5860:
  1841  00167C                     
  1842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1843  00167C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1844  001680  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1845  001684  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1846  001688  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1847  00168C  0E02               	movlw	2
  1848  00168E  2646               	addwf	??_vfpfcnvrt^0,f,c
  1849  001690  0E00               	movlw	0
  1850  001692  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1851  001694  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1852  001698  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1853  00169C                     	if	0	;tblptru may be non-zero
  1854  00169C                     	endif
  1855  00169C                     	if	0	;tblptru may be non-zero
  1856  00169C                     	endif
  1857  00169C  0008               	tblrd		*
  1858  00169E  50F5               	movf	tablat,w,c
  1859  0016A0  6E07               	movwf	tolower@c^0,c
  1860  0016A2  6A08               	clrf	(tolower@c+1)^0,c
  1861  0016A4  EC32  F021         	call	_tolower	;wreg free
  1862  0016A8  5007               	movf	?_tolower^0,w,c
  1863  0016AA  6E5E               	movwf	(vfpfcnvrt@ct+2)^0,c
  1864  0016AC                     l4637:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1867  0016AC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1868  0016B0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1869  0016B4  CFDE FFF6          	movff	postinc2,tblptrl
  1870  0016B8  CFDD FFF7          	movff	postdec2,tblptrh
  1871  0016BC                     	if	0	;tblptru may be non-zero
  1872  0016BC                     	endif
  1873  0016BC                     	if	0	;tblptru may be non-zero
  1874  0016BC                     	endif
  1875  0016BC  0008               	tblrd		*
  1876  0016BE  50F5               	movf	tablat,w,c
  1877  0016C0  0A64               	xorlw	100
  1878  0016C2  B4D8               	btfsc	status,2,c
  1879  0016C4  EF66  F00B         	goto	u5871
  1880  0016C8  EF68  F00B         	goto	u5870
  1881  0016CC                     u5871:
  1882  0016CC  EF7A  F00B         	goto	l4641
  1883  0016D0                     u5870:
  1884  0016D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1885  0016D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1886  0016D8  CFDE FFF6          	movff	postinc2,tblptrl
  1887  0016DC  CFDD FFF7          	movff	postdec2,tblptrh
  1888  0016E0                     	if	0	;tblptru may be non-zero
  1889  0016E0                     	endif
  1890  0016E0                     	if	0	;tblptru may be non-zero
  1891  0016E0                     	endif
  1892  0016E0  0008               	tblrd		*
  1893  0016E2  50F5               	movf	tablat,w,c
  1894  0016E4  0A69               	xorlw	105
  1895  0016E6  A4D8               	btfss	status,2,c
  1896  0016E8  EF78  F00B         	goto	u5881
  1897  0016EC  EF7A  F00B         	goto	u5880
  1898  0016F0                     u5881:
  1899  0016F0  EFBA  F00B         	goto	l4647
  1900  0016F4                     u5880:
  1901  0016F4                     l4641:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  1904  0016F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1905  0016F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1906  0016FC  2ADE               	incf	postinc2,f,c
  1907  0016FE  0E00               	movlw	0
  1908  001700  22DD               	addwfc	postdec2,f,c
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1911  001702  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1912  001706  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1913  00170A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1914  00170E  0E02               	movlw	2
  1915  001710  26DE               	addwf	postinc2,f,c
  1916  001712  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1917  001716  0E00               	movlw	0
  1918  001718  22DD               	addwfc	postdec2,f,c
  1919  00171A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1920  00171E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1921  001722  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  1922  001726  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  1923  00172A  0E00               	movlw	0
  1924  00172C  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1925  00172E  0EFF               	movlw	-1
  1926  001730  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  1927  001732  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  1928  001734  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  1929  001736  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  1930  001738  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  1931  00173A  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  1932  00173C                     
  1933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  1934  00173C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1935  001740  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1936  001744  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1937  001748  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1938  00174C  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1939  001750  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1940  001754  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1941  001758  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1942  00175C  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1943  001760  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1944  001764  EC29  F013         	call	_dtoa	;wreg free
  1945  001768  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1946  00176C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1947  001770  EFE6  F00C         	goto	l1061
  1948  001774                     l4647:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  1951  001774  0E66               	movlw	102
  1952  001776  185C               	xorwf	vfpfcnvrt@ct^0,w,c
  1953  001778  A4D8               	btfss	status,2,c
  1954  00177A  EFC1  F00B         	goto	u5891
  1955  00177E  EFC3  F00B         	goto	u5890
  1956  001782                     u5891:
  1957  001782  EF03  F00C         	goto	l4659
  1958  001786                     u5890:
  1959  001786                     
  1960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  1961  001786  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1962  00178A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1963  00178E  CFDE FFF6          	movff	postinc2,tblptrl
  1964  001792  CFDD FFF7          	movff	postdec2,tblptrh
  1965  001796                     	if	0	;tblptru may be non-zero
  1966  001796                     	endif
  1967  001796                     	if	0	;tblptru may be non-zero
  1968  001796                     	endif
  1969  001796  0008               	tblrd		*
  1970  001798  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  1971  00179C                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  1973  00179C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1974  0017A0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1975  0017A4  2ADE               	incf	postinc2,f,c
  1976  0017A6  0E00               	movlw	0
  1977  0017A8  22DD               	addwfc	postdec2,f,c
  1978  0017AA                     
  1979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1980  0017AA  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1981  0017AE  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1982  0017B2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1983  0017B6  0E04               	movlw	4
  1984  0017B8  26DE               	addwf	postinc2,f,c
  1985  0017BA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1986  0017BE  0E00               	movlw	0
  1987  0017C0  22DD               	addwfc	postdec2,f,c
  1988  0017C2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1989  0017C6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1990  0017CA  CFDE F058          	movff	postinc2,vfpfcnvrt@f
  1991  0017CE  CFDE F059          	movff	postinc2,vfpfcnvrt@f+1
  1992  0017D2  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+2
  1993  0017D6  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+3
  1994  0017DA                     l4655:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  1997  0017DA  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1998  0017DE  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1999  0017E2  C058  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2000  0017E6  C059  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2001  0017EA  C05A  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2002  0017EE  C05B  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2003  0017F2  C05F  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2004  0017F6  EC18  F004         	call	_efgtoa	;wreg free
  2005  0017FA  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  2006  0017FE  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2007  001802  EFE6  F00C         	goto	l1061
  2008  001806                     l4659:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2011  001806  0E5C               	movlw	low vfpfcnvrt@ct
  2012  001808  6E01               	movwf	strncmp@_l^0,c
  2013  00180A  0E00               	movlw	high vfpfcnvrt@ct
  2014  00180C  6E02               	movwf	(strncmp@_l+1)^0,c
  2015  00180E  0E29               	movlw	low STR_12
  2016  001810  6E03               	movwf	strncmp@_r^0,c
  2017  001812  0E08               	movlw	high STR_12
  2018  001814  6E04               	movwf	(strncmp@_r+1)^0,c
  2019  001816  0E00               	movlw	0
  2020  001818  6E06               	movwf	(strncmp@n+1)^0,c
  2021  00181A  0E02               	movlw	2
  2022  00181C  6E05               	movwf	strncmp@n^0,c
  2023  00181E  ECBF  F01E         	call	_strncmp	;wreg free
  2024  001822  5001               	movf	?_strncmp^0,w,c
  2025  001824  1002               	iorwf	(?_strncmp+1)^0,w,c
  2026  001826  A4D8               	btfss	status,2,c
  2027  001828  EF18  F00C         	goto	u5901
  2028  00182C  EF1A  F00C         	goto	u5900
  2029  001830                     u5901:
  2030  001830  EF95  F00C         	goto	l4675
  2031  001834                     u5900:
  2032  001834                     
  2033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2034  001834  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2035  001838  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2036  00183C  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  2037  001840  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  2038  001844  0E01               	movlw	1
  2039  001846  2646               	addwf	??_vfpfcnvrt^0,f,c
  2040  001848  0E00               	movlw	0
  2041  00184A  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2042  00184C  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2043  001850  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2044  001854                     	if	0	;tblptru may be non-zero
  2045  001854                     	endif
  2046  001854                     	if	0	;tblptru may be non-zero
  2047  001854                     	endif
  2048  001854  0008               	tblrd		*
  2049  001856  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  2050  00185A  0EBF               	movlw	191
  2051  00185C  6E46               	movwf	??_vfpfcnvrt^0,c
  2052  00185E  0EFF               	movlw	255
  2053  001860  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2054  001862  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2055  001866  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2056  00186A  CFDE FFF6          	movff	postinc2,tblptrl
  2057  00186E  CFDD FFF7          	movff	postdec2,tblptrh
  2058  001872                     	if	0	;tblptru may be non-zero
  2059  001872                     	endif
  2060  001872                     	if	0	;tblptru may be non-zero
  2061  001872                     	endif
  2062  001872  0008               	tblrd		*
  2063  001874  50F5               	movf	tablat,w,c
  2064  001876  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  2065  001878  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  2066  00187A  5046               	movf	??_vfpfcnvrt^0,w,c
  2067  00187C  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2068  00187E  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  2069  001880  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2070  001882  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  2071  001884  E10A               	bnz	u5910
  2072  001886  0E1A               	movlw	26
  2073  001888  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2074  00188A  A0D8               	btfss	status,0,c
  2075  00188C  EF4A  F00C         	goto	u5911
  2076  001890  EF4D  F00C         	goto	u5910
  2077  001894                     u5911:
  2078  001894  0E01               	movlw	1
  2079  001896  EF4E  F00C         	goto	u5920
  2080  00189A                     u5910:
  2081  00189A  0E00               	movlw	0
  2082  00189C                     u5920:
  2083  00189C  6E56               	movwf	_vfpfcnvrt$794^0,c
  2084  00189E  6A57               	clrf	(_vfpfcnvrt$794+1)^0,c
  2085  0018A0  5056               	movf	_vfpfcnvrt$794^0,w,c
  2086  0018A2  1057               	iorwf	(_vfpfcnvrt$794+1)^0,w,c
  2087  0018A4  B4D8               	btfsc	status,2,c
  2088  0018A6  EF57  F00C         	goto	u5931
  2089  0018AA  EF59  F00C         	goto	u5930
  2090  0018AE                     u5931:
  2091  0018AE  EF73  F00C         	goto	l4669
  2092  0018B2                     u5930:
  2093  0018B2                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2095  0018B2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2096  0018B6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2097  0018BA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2098  0018BE  0E04               	movlw	4
  2099  0018C0  26DE               	addwf	postinc2,f,c
  2100  0018C2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2101  0018C6  0E00               	movlw	0
  2102  0018C8  22DD               	addwfc	postdec2,f,c
  2103  0018CA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2104  0018CE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2105  0018D2  CFDE F058          	movff	postinc2,vfpfcnvrt@f
  2106  0018D6  CFDE F059          	movff	postinc2,vfpfcnvrt@f+1
  2107  0018DA  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+2
  2108  0018DE  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+3
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2111  0018E2  EF8B  F00C         	goto	l1069
  2112  0018E6                     l4669:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2115  0018E6  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2116  0018EA  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2117  0018EE  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2118  0018F2  0E04               	movlw	4
  2119  0018F4  26DE               	addwf	postinc2,f,c
  2120  0018F6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2121  0018FA  0E00               	movlw	0
  2122  0018FC  22DD               	addwfc	postdec2,f,c
  2123  0018FE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2124  001902  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2125  001906  CFDE F058          	movff	postinc2,vfpfcnvrt@f
  2126  00190A  CFDE F059          	movff	postinc2,vfpfcnvrt@f+1
  2127  00190E  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+2
  2128  001912  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+3
  2129  001916                     l1069:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2132  001916  0E02               	movlw	2
  2133  001918  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2134  00191C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2135  001920  26DE               	addwf	postinc2,f,c
  2136  001922  0E00               	movlw	0
  2137  001924  22DD               	addwfc	postdec2,f,c
  2138  001926  EFED  F00B         	goto	l4655
  2139  00192A                     l4675:
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2142  00192A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2143  00192E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2144  001932  CFDE FFF6          	movff	postinc2,tblptrl
  2145  001936  CFDD FFF7          	movff	postdec2,tblptrh
  2146  00193A                     	if	0	;tblptru may be non-zero
  2147  00193A                     	endif
  2148  00193A                     	if	0	;tblptru may be non-zero
  2149  00193A                     	endif
  2150  00193A  0008               	tblrd		*
  2151  00193C  50F5               	movf	tablat,w,c
  2152  00193E  0A25               	xorlw	37
  2153  001940  A4D8               	btfss	status,2,c
  2154  001942  EFA5  F00C         	goto	u5941
  2155  001946  EFA7  F00C         	goto	u5940
  2156  00194A                     u5941:
  2157  00194A  EFBE  F00C         	goto	l4685
  2158  00194E                     u5940:
  2159  00194E                     
  2160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2161  00194E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  001952  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  001956  2ADE               	incf	postinc2,f,c
  2164  001958  0E00               	movlw	0
  2165  00195A  22DD               	addwfc	postdec2,f,c
  2166  00195C                     
  2167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2168  00195C  0E00               	movlw	0
  2169  00195E  6E02               	movwf	(fputc@c+1)^0,c
  2170  001960  0E25               	movlw	37
  2171  001962  6E01               	movwf	fputc@c^0,c
  2172  001964  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2173  001968  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2174  00196C  EC2A  F01F         	call	_fputc	;wreg free
  2175  001970                     l4681:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2178  001970  0E00               	movlw	0
  2179  001972  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2180  001974  0E01               	movlw	1
  2181  001976  6E40               	movwf	?_vfpfcnvrt^0,c
  2182  001978  EFE6  F00C         	goto	l1061
  2183  00197C                     l4685:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2186  00197C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2187  001980  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2188  001984  2ADE               	incf	postinc2,f,c
  2189  001986  0E00               	movlw	0
  2190  001988  22DD               	addwfc	postdec2,f,c
  2191  00198A                     
  2192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2193  00198A  0E00               	movlw	0
  2194  00198C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2195  00198E  0E00               	movlw	0
  2196  001990  6E40               	movwf	?_vfpfcnvrt^0,c
  2197  001992  EFE6  F00C         	goto	l1061
  2198  001996                     l4691:
  2199                           
  2200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2201  001996  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2202  00199A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2203  00199E  CFDE FFF6          	movff	postinc2,tblptrl
  2204  0019A2  CFDD FFF7          	movff	postdec2,tblptrh
  2205  0019A6                     	if	0	;tblptru may be non-zero
  2206  0019A6                     	endif
  2207  0019A6                     	if	0	;tblptru may be non-zero
  2208  0019A6                     	endif
  2209  0019A6  0008               	tblrd		*
  2210  0019A8  50F5               	movf	tablat,w,c
  2211  0019AA  6E01               	movwf	fputc@c^0,c
  2212  0019AC  6A02               	clrf	(fputc@c+1)^0,c
  2213  0019AE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2214  0019B2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2215  0019B6  EC2A  F01F         	call	_fputc	;wreg free
  2216  0019BA                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2218  0019BA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2219  0019BE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2220  0019C2  2ADE               	incf	postinc2,f,c
  2221  0019C4  0E00               	movlw	0
  2222  0019C6  22DD               	addwfc	postdec2,f,c
  2223  0019C8  EFB8  F00C         	goto	l4681
  2224  0019CC                     l1061:
  2225  0019CC  0012               	return		;funcret
  2226  0019CE                     __end_of_vfpfcnvrt:
  2227                           	callstack 0
  2228                           
  2229 ;; *************** function _strncmp *****************
  2230 ;; Defined at:
  2231 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2234 ;;		 -> vfpfcnvrt@ct(3), 
  2235 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2236 ;;		 -> STR_14(3), 
  2237 ;;  n               2    4[COMRAM] unsigned int 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2240 ;;		 -> STR_14(3), 
  2241 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2242 ;;		 -> vfpfcnvrt@ct(3), 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  2    0[COMRAM] int 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2252 ;;      Params:         6       0       0       0       0       0       0       0       0
  2253 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2254 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2255 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2256 ;;Total ram usage:       11 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_vfpfcnvrt
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text4
  2266  003D7E                     __ptext4:
  2267                           	callstack 0
  2268  003D7E                     _strncmp:
  2269                           	callstack 27
  2270  003D7E  C001  F008         	movff	strncmp@_l,strncmp@l
  2271  003D82  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2272  003D86  C003  F00A         	movff	strncmp@_r,strncmp@r
  2273  003D8A  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2274  003D8E  0605               	decf	strncmp@n^0,f,c
  2275  003D90  A0D8               	btfss	status,0,c
  2276  003D92  0606               	decf	(strncmp@n+1)^0,f,c
  2277  003D94  2805               	incf	strncmp@n^0,w,c
  2278  003D96  E106               	bnz	u5721
  2279  003D98  2806               	incf	(strncmp@n+1)^0,w,c
  2280  003D9A  A4D8               	btfss	status,2,c
  2281  003D9C  EFD2  F01E         	goto	u5721
  2282  003DA0  EFD4  F01E         	goto	u5720
  2283  003DA4                     u5721:
  2284  003DA4  EFE1  F01E         	goto	l4515
  2285  003DA8                     u5720:
  2286  003DA8  0E00               	movlw	0
  2287  003DAA  6E02               	movwf	(?_strncmp+1)^0,c
  2288  003DAC  0E00               	movlw	0
  2289  003DAE  6E01               	movwf	?_strncmp^0,c
  2290  003DB0  EF29  F01F         	goto	l1197
  2291  003DB4                     l4513:
  2292  003DB4  4A08               	infsnz	strncmp@l^0,f,c
  2293  003DB6  2A09               	incf	(strncmp@l+1)^0,f,c
  2294  003DB8  4A0A               	infsnz	strncmp@r^0,f,c
  2295  003DBA  2A0B               	incf	(strncmp@r+1)^0,f,c
  2296  003DBC  0605               	decf	strncmp@n^0,f,c
  2297  003DBE  A0D8               	btfss	status,0,c
  2298  003DC0  0606               	decf	(strncmp@n+1)^0,f,c
  2299  003DC2                     l4515:
  2300  003DC2  C008  FFD9         	movff	strncmp@l,fsr2l
  2301  003DC6  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2302  003DCA  50DF               	movf	indf2,w,c
  2303  003DCC  B4D8               	btfsc	status,2,c
  2304  003DCE  EFEB  F01E         	goto	u5731
  2305  003DD2  EFED  F01E         	goto	u5730
  2306  003DD6                     u5731:
  2307  003DD6  EF18  F01F         	goto	l4523
  2308  003DDA                     u5730:
  2309  003DDA  C00A  FFF6         	movff	strncmp@r,tblptrl
  2310  003DDE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2311  003DE2                     	if	0	;tblptru may be non-zero
  2312  003DE2                     	endif
  2313  003DE2                     	if	0	;tblptru may be non-zero
  2314  003DE2                     	endif
  2315  003DE2  0008               	tblrd		*
  2316  003DE4  50F5               	movf	tablat,w,c
  2317  003DE6  0900               	iorlw	0
  2318  003DE8  B4D8               	btfsc	status,2,c
  2319  003DEA  EFF9  F01E         	goto	u5741
  2320  003DEE  EFFB  F01E         	goto	u5740
  2321  003DF2                     u5741:
  2322  003DF2  EF18  F01F         	goto	l4523
  2323  003DF6                     u5740:
  2324  003DF6  5005               	movf	strncmp@n^0,w,c
  2325  003DF8  1006               	iorwf	(strncmp@n+1)^0,w,c
  2326  003DFA  B4D8               	btfsc	status,2,c
  2327  003DFC  EF02  F01F         	goto	u5751
  2328  003E00  EF04  F01F         	goto	u5750
  2329  003E04                     u5751:
  2330  003E04  EF18  F01F         	goto	l4523
  2331  003E08                     u5750:
  2332  003E08  C008  FFD9         	movff	strncmp@l,fsr2l
  2333  003E0C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2334  003E10  50DF               	movf	indf2,w,c
  2335  003E12  6E07               	movwf	??_strncmp^0,c
  2336  003E14  C00A  FFF6         	movff	strncmp@r,tblptrl
  2337  003E18  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2338  003E1C                     	if	0	;tblptru may be non-zero
  2339  003E1C                     	endif
  2340  003E1C                     	if	0	;tblptru may be non-zero
  2341  003E1C                     	endif
  2342  003E1C  0008               	tblrd		*
  2343  003E1E  50F5               	movf	tablat,w,c
  2344  003E20  1807               	xorwf	??_strncmp^0,w,c
  2345  003E22  B4D8               	btfsc	status,2,c
  2346  003E24  EF16  F01F         	goto	u5761
  2347  003E28  EF18  F01F         	goto	u5760
  2348  003E2C                     u5761:
  2349  003E2C  EFDA  F01E         	goto	l4513
  2350  003E30                     u5760:
  2351  003E30                     l4523:
  2352  003E30  C008  FFD9         	movff	strncmp@l,fsr2l
  2353  003E34  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2354  003E38  50DF               	movf	indf2,w,c
  2355  003E3A  6E07               	movwf	??_strncmp^0,c
  2356  003E3C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2357  003E40  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2358  003E44                     	if	0	;tblptru may be non-zero
  2359  003E44                     	endif
  2360  003E44                     	if	0	;tblptru may be non-zero
  2361  003E44                     	endif
  2362  003E44  0008               	tblrd		*
  2363  003E46  50F5               	movf	tablat,w,c
  2364  003E48  5C07               	subwf	??_strncmp^0,w,c
  2365  003E4A  6E01               	movwf	?_strncmp^0,c
  2366  003E4C  6A02               	clrf	(?_strncmp+1)^0,c
  2367  003E4E  A0D8               	btfss	status,0,c
  2368  003E50  0602               	decf	(?_strncmp+1)^0,f,c
  2369  003E52                     l1197:
  2370  003E52  0012               	return		;funcret
  2371  003E54                     __end_of_strncmp:
  2372                           	callstack 0
  2373                           
  2374 ;; *************** function _efgtoa *****************
  2375 ;; Defined at:
  2376 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2379 ;;		 -> sprintf@f(6), 
  2380 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2381 ;;  c               1   51[COMRAM] unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  u               4   52[BANK0 ] unsigned char 
  2384 ;;  g               4   44[BANK0 ] unsigned char 
  2385 ;;  l               4   38[BANK0 ] unsigned char 
  2386 ;;  h               4   34[BANK0 ] unsigned char 
  2387 ;;  ou              4    0[BANK0 ] unsigned char 
  2388 ;;  n               2   50[BANK0 ] int 
  2389 ;;  e               2   48[BANK0 ] int 
  2390 ;;  i               2   42[BANK0 ] int 
  2391 ;;  w               2   31[BANK0 ] int 
  2392 ;;  p               2   28[BANK0 ] int 
  2393 ;;  sign            2   26[BANK0 ] int 
  2394 ;;  d               2   24[BANK0 ] int 
  2395 ;;  ne              2   22[BANK0 ] int 
  2396 ;;  m               2   20[BANK0 ] int 
  2397 ;;  pp              2   18[BANK0 ] int 
  2398 ;;  t               2   16[BANK0 ] int 
  2399 ;;  mode            1   33[BANK0 ] unsigned char 
  2400 ;;  nmode           1   30[BANK0 ] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  2   45[COMRAM] int 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2410 ;;      Params:         7       0       0       0       0       0       0       0       0
  2411 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2412 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2413 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2414 ;;Total ram usage:       68 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    4
  2417 ;; This function calls:
  2418 ;;		___awdiv
  2419 ;;		___awmod
  2420 ;;		___fladd
  2421 ;;		___fldiv
  2422 ;;		___fleq
  2423 ;;		___flge
  2424 ;;		___flmul
  2425 ;;		___flneg
  2426 ;;		___flsub
  2427 ;;		___fltol
  2428 ;;		___fpclassifyf
  2429 ;;		_floorf
  2430 ;;		_isupper
  2431 ;;		_pad
  2432 ;;		_strcpy
  2433 ;;		_tolower
  2434 ;; This function is called by:
  2435 ;;		_vfpfcnvrt
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text5
  2440  000830                     __ptext5:
  2441                           	callstack 0
  2442  000830                     _efgtoa:
  2443                           	callstack 23
  2444  000830                     
  2445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2446  000830  0E00               	movlw	0
  2447  000832  0100               	movlb	0	; () banked
  2448  000834  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2449  000836  0E00               	movlw	0
  2450  000838  6F7A               	movwf	efgtoa@sign& (0+255),b
  2451  00083A                     
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2454  00083A  C030  F08C         	movff	efgtoa@f,efgtoa@g
  2455  00083E  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2456  000842  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2457  000846  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2458  00084A                     
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2461  00084A  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2462  00084C  EF2C  F004         	goto	u5130
  2463  000850  EF2A  F004         	goto	u5131
  2464  000854                     u5131:
  2465  000854  EF42  F004         	goto	l4177
  2466  000858                     u5130:
  2467  000858                     
  2468                           ; BSR set to: 0
  2469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2470  000858  0E00               	movlw	0
  2471  00085A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2472  00085C  0E01               	movlw	1
  2473  00085E  6F7A               	movwf	efgtoa@sign& (0+255),b
  2474  000860                     
  2475                           ; BSR set to: 0
  2476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2477  000860  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2478  000864  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2479  000868  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2480  00086C  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2481  000870  EC44  F023         	call	___flneg	;wreg free
  2482  000874  C001  F08C         	movff	?___flneg,efgtoa@g
  2483  000878  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2484  00087C  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2485  000880  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2486  000884                     l4177:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2489  000884  0E00               	movlw	0
  2490  000886  0100               	movlb	0	; () banked
  2491  000888  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2492  00088A  0E00               	movlw	0
  2493  00088C  6F92               	movwf	efgtoa@n& (0+255),b
  2494  00088E                     
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2497  00088E  C0D3  F07F         	movff	_width,efgtoa@w
  2498  000892  C0D4  F080         	movff	_width+1,efgtoa@w+1
  2499  000896                     
  2500                           ; BSR set to: 0
  2501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2502  000896  517A               	movf	efgtoa@sign& (0+255),w,b
  2503  000898  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2504  00089A  A4D8               	btfss	status,2,c
  2505  00089C  EF52  F004         	goto	u5141
  2506  0008A0  EF54  F004         	goto	u5140
  2507  0008A4                     u5141:
  2508  0008A4  EF5B  F004         	goto	l4185
  2509  0008A8                     u5140:
  2510  0008A8                     
  2511                           ; BSR set to: 0
  2512  0008A8  A5D7               	btfss	_flags& (0+255),2,b
  2513  0008AA  EF59  F004         	goto	u5151
  2514  0008AE  EF5B  F004         	goto	u5150
  2515  0008B2                     u5151:
  2516  0008B2  EF75  F004         	goto	l4197
  2517  0008B6                     u5150:
  2518  0008B6                     l4185:
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2522  0008B6  517A               	movf	efgtoa@sign& (0+255),w,b
  2523  0008B8  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2524  0008BA  A4D8               	btfss	status,2,c
  2525  0008BC  EF62  F004         	goto	u5161
  2526  0008C0  EF64  F004         	goto	u5160
  2527  0008C4                     u5161:
  2528  0008C4  EF6A  F004         	goto	l4189
  2529  0008C8                     u5160:
  2530  0008C8                     
  2531                           ; BSR set to: 0
  2532  0008C8  0E00               	movlw	0
  2533  0008CA  6F65               	movwf	(_efgtoa$764+1)& (0+255),b
  2534  0008CC  0E2B               	movlw	43
  2535  0008CE  6F64               	movwf	_efgtoa$764& (0+255),b
  2536  0008D0  EF6E  F004         	goto	l4191
  2537  0008D4                     l4189:
  2538                           
  2539                           ; BSR set to: 0
  2540  0008D4  0E00               	movlw	0
  2541  0008D6  6F65               	movwf	(_efgtoa$764+1)& (0+255),b
  2542  0008D8  0E2D               	movlw	45
  2543  0008DA  6F64               	movwf	_efgtoa$764& (0+255),b
  2544  0008DC                     l4191:
  2545                           
  2546                           ; BSR set to: 0
  2547  0008DC  C064  F100         	movff	_efgtoa$764,_dbuf
  2548  0008E0                     
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2551  0008E0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2552  0008E2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2553  0008E4                     
  2554                           ; BSR set to: 0
  2555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2556  0008E4  077F               	decf	efgtoa@w& (0+255),f,b
  2557  0008E6  A0D8               	btfss	status,0,c
  2558  0008E8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2559  0008EA                     l4197:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2563  0008EA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2564  0008EE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2565  0008F2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2566  0008F6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2567  0008FA  EC40  F01E         	call	___fpclassifyf	;wreg free
  2568  0008FE  0401               	decf	?___fpclassifyf^0,w,c
  2569  000900  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2570  000902  A4D8               	btfss	status,2,c
  2571  000904  EF86  F004         	goto	u5171
  2572  000908  EF88  F004         	goto	u5170
  2573  00090C                     u5171:
  2574  00090C  EFDF  F004         	goto	l4215
  2575  000910                     u5170:
  2576  000910  0EBF               	movlw	191
  2577  000912  6E35               	movwf	??_efgtoa^0,c
  2578  000914  0EFF               	movlw	255
  2579  000916  6E36               	movwf	(??_efgtoa+1)^0,c
  2580  000918  5034               	movf	efgtoa@c^0,w,c
  2581  00091A  6E37               	movwf	(??_efgtoa+2)^0,c
  2582  00091C  6A38               	clrf	(??_efgtoa+3)^0,c
  2583  00091E  5035               	movf	??_efgtoa^0,w,c
  2584  000920  2637               	addwf	(??_efgtoa+2)^0,f,c
  2585  000922  5036               	movf	(??_efgtoa+1)^0,w,c
  2586  000924  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2587  000926  5038               	movf	(??_efgtoa+3)^0,w,c
  2588  000928  E10A               	bnz	u5180
  2589  00092A  0E1A               	movlw	26
  2590  00092C  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2591  00092E  A0D8               	btfss	status,0,c
  2592  000930  EF9C  F004         	goto	u5181
  2593  000934  EF9F  F004         	goto	u5180
  2594  000938                     u5181:
  2595  000938  0E01               	movlw	1
  2596  00093A  EFA0  F004         	goto	u5190
  2597  00093E                     u5180:
  2598  00093E  0E00               	movlw	0
  2599  000940                     u5190:
  2600  000940  0100               	movlb	0	; () banked
  2601  000942  6F66               	movwf	_efgtoa$765& (0+255),b
  2602  000944  6B67               	clrf	(_efgtoa$765+1)& (0+255),b
  2603  000946                     
  2604                           ; BSR set to: 0
  2605  000946  5166               	movf	_efgtoa$765& (0+255),w,b
  2606  000948  1167               	iorwf	(_efgtoa$765+1)& (0+255),w,b
  2607  00094A  B4D8               	btfsc	status,2,c
  2608  00094C  EFAA  F004         	goto	u5201
  2609  000950  EFAC  F004         	goto	u5200
  2610  000954                     u5201:
  2611  000954  EFBA  F004         	goto	l4207
  2612  000958                     u5200:
  2613  000958                     
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2616  000958  0E00               	movlw	low _dbuf
  2617  00095A  2592               	addwf	efgtoa@n& (0+255),w,b
  2618  00095C  6E01               	movwf	strcpy@dest^0,c
  2619  00095E  0E01               	movlw	high _dbuf
  2620  000960  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2621  000962  6E02               	movwf	(strcpy@dest+1)^0,c
  2622  000964  0E19               	movlw	low STR_4
  2623  000966  6E03               	movwf	strcpy@src^0,c
  2624  000968  0E08               	movlw	high STR_4
  2625  00096A  6E04               	movwf	(strcpy@src+1)^0,c
  2626  00096C  EC91  F021         	call	_strcpy	;wreg free
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2629  000970  EFC6  F004         	goto	l4209
  2630  000974                     l4207:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2634  000974  0E00               	movlw	low _dbuf
  2635  000976  2592               	addwf	efgtoa@n& (0+255),w,b
  2636  000978  6E01               	movwf	strcpy@dest^0,c
  2637  00097A  0E01               	movlw	high _dbuf
  2638  00097C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2639  00097E  6E02               	movwf	(strcpy@dest+1)^0,c
  2640  000980  0E21               	movlw	low STR_5
  2641  000982  6E03               	movwf	strcpy@src^0,c
  2642  000984  0E08               	movlw	high STR_5
  2643  000986  6E04               	movwf	(strcpy@src+1)^0,c
  2644  000988  EC91  F021         	call	_strcpy	;wreg free
  2645  00098C                     l4209:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2648  00098C  0100               	movlb	0	; () banked
  2649  00098E  0EFD               	movlw	253
  2650  000990  277F               	addwf	efgtoa@w& (0+255),f,b
  2651  000992  0EFF               	movlw	255
  2652  000994  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2653  000996                     l4211:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2656  000996  C02E  F011         	movff	efgtoa@fp,pad@fp
  2657  00099A  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2658  00099E  0E00               	movlw	low _dbuf
  2659  0009A0  6E13               	movwf	pad@buf^0,c
  2660  0009A2  0E01               	movlw	high _dbuf
  2661  0009A4  6E14               	movwf	(pad@buf+1)^0,c
  2662  0009A6  C07F  F015         	movff	efgtoa@w,pad@p
  2663  0009AA  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2664  0009AE  EC8F  F01F         	call	_pad	;wreg free
  2665  0009B2  C011  F02E         	movff	?_pad,?_efgtoa
  2666  0009B6  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2667  0009BA  EFEF  F009         	goto	l957
  2668  0009BE                     l4215:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2671  0009BE  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2672  0009C2  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2673  0009C6  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2674  0009CA  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2675  0009CE  EC40  F01E         	call	___fpclassifyf	;wreg free
  2676  0009D2  5001               	movf	?___fpclassifyf^0,w,c
  2677  0009D4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2678  0009D6  A4D8               	btfss	status,2,c
  2679  0009D8  EFF0  F004         	goto	u5211
  2680  0009DC  EFF2  F004         	goto	u5210
  2681  0009E0                     u5211:
  2682  0009E0  EF32  F005         	goto	l4233
  2683  0009E4                     u5210:
  2684  0009E4  0EBF               	movlw	191
  2685  0009E6  6E35               	movwf	??_efgtoa^0,c
  2686  0009E8  0EFF               	movlw	255
  2687  0009EA  6E36               	movwf	(??_efgtoa+1)^0,c
  2688  0009EC  5034               	movf	efgtoa@c^0,w,c
  2689  0009EE  6E37               	movwf	(??_efgtoa+2)^0,c
  2690  0009F0  6A38               	clrf	(??_efgtoa+3)^0,c
  2691  0009F2  5035               	movf	??_efgtoa^0,w,c
  2692  0009F4  2637               	addwf	(??_efgtoa+2)^0,f,c
  2693  0009F6  5036               	movf	(??_efgtoa+1)^0,w,c
  2694  0009F8  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2695  0009FA  5038               	movf	(??_efgtoa+3)^0,w,c
  2696  0009FC  E10A               	bnz	u5220
  2697  0009FE  0E1A               	movlw	26
  2698  000A00  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2699  000A02  A0D8               	btfss	status,0,c
  2700  000A04  EF06  F005         	goto	u5221
  2701  000A08  EF09  F005         	goto	u5220
  2702  000A0C                     u5221:
  2703  000A0C  0E01               	movlw	1
  2704  000A0E  EF0A  F005         	goto	u5230
  2705  000A12                     u5220:
  2706  000A12  0E00               	movlw	0
  2707  000A14                     u5230:
  2708  000A14  0100               	movlb	0	; () banked
  2709  000A16  6F68               	movwf	_efgtoa$769& (0+255),b
  2710  000A18  6B69               	clrf	(_efgtoa$769+1)& (0+255),b
  2711  000A1A                     
  2712                           ; BSR set to: 0
  2713  000A1A  5168               	movf	_efgtoa$769& (0+255),w,b
  2714  000A1C  1169               	iorwf	(_efgtoa$769+1)& (0+255),w,b
  2715  000A1E  B4D8               	btfsc	status,2,c
  2716  000A20  EF14  F005         	goto	u5241
  2717  000A24  EF16  F005         	goto	u5240
  2718  000A28                     u5241:
  2719  000A28  EF24  F005         	goto	l4225
  2720  000A2C                     u5240:
  2721  000A2C                     
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2724  000A2C  0E00               	movlw	low _dbuf
  2725  000A2E  2592               	addwf	efgtoa@n& (0+255),w,b
  2726  000A30  6E01               	movwf	strcpy@dest^0,c
  2727  000A32  0E01               	movlw	high _dbuf
  2728  000A34  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2729  000A36  6E02               	movwf	(strcpy@dest+1)^0,c
  2730  000A38  0E1D               	movlw	low STR_8
  2731  000A3A  6E03               	movwf	strcpy@src^0,c
  2732  000A3C  0E08               	movlw	high STR_8
  2733  000A3E  6E04               	movwf	(strcpy@src+1)^0,c
  2734  000A40  EC91  F021         	call	_strcpy	;wreg free
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2737  000A44  EFC6  F004         	goto	l4209
  2738  000A48                     l4225:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2742  000A48  0E00               	movlw	low _dbuf
  2743  000A4A  2592               	addwf	efgtoa@n& (0+255),w,b
  2744  000A4C  6E01               	movwf	strcpy@dest^0,c
  2745  000A4E  0E01               	movlw	high _dbuf
  2746  000A50  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2747  000A52  6E02               	movwf	(strcpy@dest+1)^0,c
  2748  000A54  0E25               	movlw	low STR_9
  2749  000A56  6E03               	movwf	strcpy@src^0,c
  2750  000A58  0E08               	movlw	high STR_9
  2751  000A5A  6E04               	movwf	(strcpy@src+1)^0,c
  2752  000A5C  EC91  F021         	call	_strcpy	;wreg free
  2753  000A60  EFC6  F004         	goto	l4209
  2754  000A64                     l4233:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2757  000A64  0E00               	movlw	0
  2758  000A66  0100               	movlb	0	; () banked
  2759  000A68  6F94               	movwf	efgtoa@u& (0+255),b
  2760  000A6A  0E00               	movlw	0
  2761  000A6C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2762  000A6E  0E80               	movlw	128
  2763  000A70  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2764  000A72  0E3F               	movlw	63
  2765  000A74  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2768  000A76  0E00               	movlw	0
  2769  000A78  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2770  000A7A  0E00               	movlw	0
  2771  000A7C  6F90               	movwf	efgtoa@e& (0+255),b
  2772  000A7E                     
  2773                           ; BSR set to: 0
  2774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2775  000A7E  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2776  000A82  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2777  000A86  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2778  000A8A  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2779  000A8E  0E00               	movlw	0
  2780  000A90  6E05               	movwf	___fleq@ff2^0,c
  2781  000A92  0E00               	movlw	0
  2782  000A94  6E06               	movwf	(___fleq@ff2+1)^0,c
  2783  000A96  0E00               	movlw	0
  2784  000A98  6E07               	movwf	(___fleq@ff2+2)^0,c
  2785  000A9A  0E00               	movlw	0
  2786  000A9C  6E08               	movwf	(___fleq@ff2+3)^0,c
  2787  000A9E  ECAC  F020         	call	___fleq	;wreg free
  2788  000AA2  B0D8               	btfsc	status,0,c
  2789  000AA4  EF56  F005         	goto	u5251
  2790  000AA8  EF58  F005         	goto	u5250
  2791  000AAC                     u5251:
  2792  000AAC  EFDB  F005         	goto	l4251
  2793  000AB0                     u5250:
  2794  000AB0  EF77  F005         	goto	l4243
  2795  000AB4                     l4239:
  2796                           
  2797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2798  000AB4  C094  F001         	movff	efgtoa@u,___flmul@b
  2799  000AB8  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2800  000ABC  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2801  000AC0  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2802  000AC4  0E00               	movlw	0
  2803  000AC6  6E05               	movwf	___flmul@a^0,c
  2804  000AC8  0E00               	movlw	0
  2805  000ACA  6E06               	movwf	(___flmul@a+1)^0,c
  2806  000ACC  0E20               	movlw	32
  2807  000ACE  6E07               	movwf	(___flmul@a+2)^0,c
  2808  000AD0  0E41               	movlw	65
  2809  000AD2  6E08               	movwf	(___flmul@a+3)^0,c
  2810  000AD4  EC47  F00F         	call	___flmul	;wreg free
  2811  000AD8  C001  F094         	movff	?___flmul,efgtoa@u
  2812  000ADC  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2813  000AE0  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2814  000AE4  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2815  000AE8                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2817  000AE8  0100               	movlb	0	; () banked
  2818  000AEA  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2819  000AEC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2820  000AEE                     l4243:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2823  000AEE  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2824  000AF2  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2825  000AF6  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2826  000AFA  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2827  000AFE  0E00               	movlw	0
  2828  000B00  6E05               	movwf	___flmul@a^0,c
  2829  000B02  0E00               	movlw	0
  2830  000B04  6E06               	movwf	(___flmul@a+1)^0,c
  2831  000B06  0E20               	movlw	32
  2832  000B08  6E07               	movwf	(___flmul@a+2)^0,c
  2833  000B0A  0E41               	movlw	65
  2834  000B0C  6E08               	movwf	(___flmul@a+3)^0,c
  2835  000B0E  C094  F001         	movff	efgtoa@u,___flmul@b
  2836  000B12  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2837  000B16  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2838  000B1A  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2839  000B1E  EC47  F00F         	call	___flmul	;wreg free
  2840  000B22  C001  F01E         	movff	?___flmul,___flge@ff2
  2841  000B26  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2842  000B2A  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2843  000B2E  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2844  000B32  ECBE  F01D         	call	___flge	;wreg free
  2845  000B36  B0D8               	btfsc	status,0,c
  2846  000B38  EFA0  F005         	goto	u5261
  2847  000B3C  EFA2  F005         	goto	u5260
  2848  000B40                     u5261:
  2849  000B40  EF5A  F005         	goto	l4239
  2850  000B44                     u5260:
  2851  000B44  EFC2  F005         	goto	l4249
  2852  000B48                     l4245:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  2855  000B48  C094  F001         	movff	efgtoa@u,___fldiv@b
  2856  000B4C  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2857  000B50  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2858  000B54  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2859  000B58  0E00               	movlw	0
  2860  000B5A  6E05               	movwf	___fldiv@a^0,c
  2861  000B5C  0E00               	movlw	0
  2862  000B5E  6E06               	movwf	(___fldiv@a+1)^0,c
  2863  000B60  0E20               	movlw	32
  2864  000B62  6E07               	movwf	(___fldiv@a+2)^0,c
  2865  000B64  0E41               	movlw	65
  2866  000B66  6E08               	movwf	(___fldiv@a+3)^0,c
  2867  000B68  EC5C  F011         	call	___fldiv	;wreg free
  2868  000B6C  C001  F094         	movff	?___fldiv,efgtoa@u
  2869  000B70  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2870  000B74  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2871  000B78  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2872  000B7C                     
  2873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  2874  000B7C  0100               	movlb	0	; () banked
  2875  000B7E  0790               	decf	efgtoa@e& (0+255),f,b
  2876  000B80  A0D8               	btfss	status,0,c
  2877  000B82  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2878  000B84                     l4249:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  2881  000B84  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2882  000B88  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2883  000B8C  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2884  000B90  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2885  000B94  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2886  000B98  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2887  000B9C  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2888  000BA0  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2889  000BA4  ECBE  F01D         	call	___flge	;wreg free
  2890  000BA8  A0D8               	btfss	status,0,c
  2891  000BAA  EFD9  F005         	goto	u5271
  2892  000BAE  EFDB  F005         	goto	u5270
  2893  000BB2                     u5271:
  2894  000BB2  EFA4  F005         	goto	l4245
  2895  000BB6                     u5270:
  2896  000BB6                     l4251:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  2899  000BB6  C034  F007         	movff	efgtoa@c,tolower@c
  2900  000BBA  6A08               	clrf	(tolower@c+1)^0,c
  2901  000BBC  EC32  F021         	call	_tolower	;wreg free
  2902  000BC0  5007               	movf	?_tolower^0,w,c
  2903  000BC2  0100               	movlb	0	; () banked
  2904  000BC4  6F81               	movwf	efgtoa@mode& (0+255),b
  2905  000BC6                     
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  2908  000BC6  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2909  000BCA                     
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  2912  000BCA  0E67               	movlw	103
  2913  000BCC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2914  000BCE  A4D8               	btfss	status,2,c
  2915  000BD0  EFEC  F005         	goto	u5281
  2916  000BD4  EFEE  F005         	goto	u5280
  2917  000BD8                     u5281:
  2918  000BD8  EF14  F006         	goto	l4265
  2919  000BDC                     u5280:
  2920  000BDC                     
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  2923  000BDC  51D5               	movf	_prec& (0+255),w,b
  2924  000BDE  11D6               	iorwf	(_prec+1)& (0+255),w,b
  2925  000BE0  A4D8               	btfss	status,2,c
  2926  000BE2  EFF5  F005         	goto	u5291
  2927  000BE6  EFF7  F005         	goto	u5290
  2928  000BEA                     u5291:
  2929  000BEA  EFFB  F005         	goto	l4261
  2930  000BEE                     u5290:
  2931  000BEE                     
  2932                           ; BSR set to: 0
  2933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  2934  000BEE  0E00               	movlw	0
  2935  000BF0  6FD6               	movwf	(_prec+1)& (0+255),b
  2936  000BF2  0E01               	movlw	1
  2937  000BF4  6FD5               	movwf	_prec& (0+255),b
  2938  000BF6                     l4261:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  2942  000BF6  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  2943  000BF8  EF08  F006         	goto	u5300
  2944  000BFC  51D6               	movf	(_prec+1)& (0+255),w,b
  2945  000BFE  E106               	bnz	u5301
  2946  000C00  05D5               	decf	_prec& (0+255),w,b
  2947  000C02  B0D8               	btfsc	status,0,c
  2948  000C04  EF06  F006         	goto	u5301
  2949  000C08  EF08  F006         	goto	u5300
  2950  000C0C                     u5301:
  2951  000C0C  EF0E  F006         	goto	l975
  2952  000C10                     u5300:
  2953  000C10                     l4263:
  2954                           
  2955                           ; BSR set to: 0
  2956  000C10  0E00               	movlw	0
  2957  000C12  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2958  000C14  0E06               	movlw	6
  2959  000C16  6F7C               	movwf	efgtoa@p& (0+255),b
  2960  000C18  EF1D  F006         	goto	l4271
  2961  000C1C                     l975:
  2962                           
  2963                           ; BSR set to: 0
  2964  000C1C  C0D5  F07C         	movff	_prec,efgtoa@p
  2965  000C20  C0D6  F07D         	movff	_prec+1,efgtoa@p+1
  2966  000C24  EF1D  F006         	goto	l4271
  2967  000C28                     l4265:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  2971  000C28  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  2972  000C2A  EF19  F006         	goto	u5311
  2973  000C2E  EF1B  F006         	goto	u5310
  2974  000C32                     u5311:
  2975  000C32  EF08  F006         	goto	l4263
  2976  000C36                     u5310:
  2977  000C36  EF0E  F006         	goto	l975
  2978  000C3A                     l4271:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  2982  000C3A  0E67               	movlw	103
  2983  000C3C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2984  000C3E  A4D8               	btfss	status,2,c
  2985  000C40  EF24  F006         	goto	u5321
  2986  000C44  EF26  F006         	goto	u5320
  2987  000C48                     u5321:
  2988  000C48  EF55  F006         	goto	l4281
  2989  000C4C                     u5320:
  2990  000C4C                     
  2991                           ; BSR set to: 0
  2992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2993  000C4C  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2994  000C4E  EF34  F006         	goto	u5330
  2995  000C52  0EFC               	movlw	252
  2996  000C54  5D90               	subwf	efgtoa@e& (0+255),w,b
  2997  000C56  0EFF               	movlw	255
  2998  000C58  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2999  000C5A  A0D8               	btfss	status,0,c
  3000  000C5C  EF32  F006         	goto	u5331
  3001  000C60  EF34  F006         	goto	u5330
  3002  000C64                     u5331:
  3003  000C64  EF53  F006         	goto	l4279
  3004  000C68                     u5330:
  3005  000C68                     
  3006                           ; BSR set to: 0
  3007  000C68  0EFF               	movlw	255
  3008  000C6A  6E35               	movwf	??_efgtoa^0,c
  3009  000C6C  0EFF               	movlw	255
  3010  000C6E  6E36               	movwf	(??_efgtoa+1)^0,c
  3011  000C70  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  3012  000C74  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  3013  000C78  5035               	movf	??_efgtoa^0,w,c
  3014  000C7A  2637               	addwf	(??_efgtoa+2)^0,f,c
  3015  000C7C  5036               	movf	(??_efgtoa+1)^0,w,c
  3016  000C7E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3017  000C80  5190               	movf	efgtoa@e& (0+255),w,b
  3018  000C82  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3019  000C84  5038               	movf	(??_efgtoa+3)^0,w,c
  3020  000C86  0A80               	xorlw	128
  3021  000C88  6E39               	movwf	(??_efgtoa+4)^0,c
  3022  000C8A  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3023  000C8C  0A80               	xorlw	128
  3024  000C8E  5839               	subwfb	(??_efgtoa+4)^0,w,c
  3025  000C90  A0D8               	btfss	status,0,c
  3026  000C92  EF4D  F006         	goto	u5341
  3027  000C96  EF4F  F006         	goto	u5340
  3028  000C9A                     u5341:
  3029  000C9A  EF53  F006         	goto	l4279
  3030  000C9E                     u5340:
  3031  000C9E                     
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3034  000C9E  0E66               	movlw	102
  3035  000CA0  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3038  000CA2  EF55  F006         	goto	l4281
  3039  000CA6                     l4279:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3043  000CA6  0E65               	movlw	101
  3044  000CA8  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3045  000CAA                     l4281:
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3049  000CAA  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3050  000CAE  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3051  000CB2                     
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3054  000CB2  0E67               	movlw	103
  3055  000CB4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3056  000CB6  A4D8               	btfss	status,2,c
  3057  000CB8  EF60  F006         	goto	u5351
  3058  000CBC  EF62  F006         	goto	u5350
  3059  000CC0                     u5351:
  3060  000CC0  EF72  F006         	goto	l4289
  3061  000CC4                     u5350:
  3062  000CC4                     
  3063                           ; BSR set to: 0
  3064  000CC4  0E66               	movlw	102
  3065  000CC6  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3066  000CC8  A4D8               	btfss	status,2,c
  3067  000CCA  EF69  F006         	goto	u5361
  3068  000CCE  EF6B  F006         	goto	u5360
  3069  000CD2                     u5361:
  3070  000CD2  EF74  F006         	goto	l4291
  3071  000CD6                     u5360:
  3072  000CD6                     
  3073                           ; BSR set to: 0
  3074  000CD6  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3075  000CD8  EF72  F006         	goto	u5370
  3076  000CDC  EF70  F006         	goto	u5371
  3077  000CE0                     u5371:
  3078  000CE0  EF74  F006         	goto	l4291
  3079  000CE4                     u5370:
  3080  000CE4                     l4289:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3084  000CE4  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3085  000CE6  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3086  000CE8                     l4291:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3090  000CE8  0E66               	movlw	102
  3091  000CEA  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3092  000CEC  A4D8               	btfss	status,2,c
  3093  000CEE  EF7B  F006         	goto	u5381
  3094  000CF2  EF7D  F006         	goto	u5380
  3095  000CF6                     u5381:
  3096  000CF6  EF9D  F006         	goto	l4301
  3097  000CFA                     u5380:
  3098  000CFA                     
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3101  000CFA  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3102  000CFC  EF84  F006         	goto	u5390
  3103  000D00  EF82  F006         	goto	u5391
  3104  000D04                     u5391:
  3105  000D04  EF90  F006         	goto	l4297
  3106  000D08                     u5390:
  3107  000D08                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3110  000D08  0E00               	movlw	0
  3111  000D0A  6F94               	movwf	efgtoa@u& (0+255),b
  3112  000D0C  0E00               	movlw	0
  3113  000D0E  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3114  000D10  0E80               	movlw	128
  3115  000D12  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3116  000D14  0E3F               	movlw	63
  3117  000D16  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3120  000D18  0E00               	movlw	0
  3121  000D1A  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3122  000D1C  0E00               	movlw	0
  3123  000D1E  6F90               	movwf	efgtoa@e& (0+255),b
  3124  000D20                     l4297:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3128  000D20  0E67               	movlw	103
  3129  000D22  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3130  000D24  B4D8               	btfsc	status,2,c
  3131  000D26  EF97  F006         	goto	u5401
  3132  000D2A  EF99  F006         	goto	u5400
  3133  000D2E                     u5401:
  3134  000D2E  EF9D  F006         	goto	l4301
  3135  000D32                     u5400:
  3136  000D32                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3139  000D32  5190               	movf	efgtoa@e& (0+255),w,b
  3140  000D34  2774               	addwf	efgtoa@m& (0+255),f,b
  3141  000D36  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3142  000D38  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3143  000D3A                     l4301:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3147  000D3A  0E00               	movlw	0
  3148  000D3C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3149  000D3E  0E00               	movlw	0
  3150  000D40  6F8A               	movwf	efgtoa@i& (0+255),b
  3151  000D42                     
  3152                           ; BSR set to: 0
  3153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3154  000D42  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3155  000D46  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3156  000D4A  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3157  000D4E  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3158  000D52                     
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3161  000D52  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3162  000D56  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3163  000D5A  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3164  000D5E  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3167  000D62  EF2E  F007         	goto	l4315
  3168  000D66                     l4307:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3172  000D66  C082  F001         	movff	efgtoa@h,___fldiv@b
  3173  000D6A  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3174  000D6E  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3175  000D72  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3176  000D76  C094  F005         	movff	efgtoa@u,___fldiv@a
  3177  000D7A  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3178  000D7E  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3179  000D82  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3180  000D86  EC5C  F011         	call	___fldiv	;wreg free
  3181  000D8A  C001  F01A         	movff	?___fldiv,floorf@x
  3182  000D8E  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3183  000D92  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3184  000D96  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3185  000D9A  EC49  F019         	call	_floorf	;wreg free
  3186  000D9E  C01A  F086         	movff	?_floorf,efgtoa@l
  3187  000DA2  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3188  000DA6  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3189  000DAA  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3192  000DAE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3193  000DB2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3194  000DB6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3195  000DBA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3196  000DBE  EC3B  F01D         	call	___fltol	;wreg free
  3197  000DC2  C001  F078         	movff	?___fltol,efgtoa@d
  3198  000DC6  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3199  000DCA                     
  3200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3201  000DCA  C082  F01A         	movff	efgtoa@h,___flsub@b
  3202  000DCE  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3203  000DD2  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3204  000DD6  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3205  000DDA  C094  F005         	movff	efgtoa@u,___flmul@a
  3206  000DDE  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3207  000DE2  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3208  000DE6  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3209  000DEA  C086  F001         	movff	efgtoa@l,___flmul@b
  3210  000DEE  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3211  000DF2  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3212  000DF6  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3213  000DFA  EC47  F00F         	call	___flmul	;wreg free
  3214  000DFE  C001  F01E         	movff	?___flmul,___flsub@a
  3215  000E02  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3216  000E06  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3217  000E0A  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3218  000E0E  EC82  F022         	call	___flsub	;wreg free
  3219  000E12  C01A  F082         	movff	?___flsub,efgtoa@h
  3220  000E16  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3221  000E1A  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3222  000E1E  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3223  000E22                     
  3224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3225  000E22  C094  F001         	movff	efgtoa@u,___fldiv@b
  3226  000E26  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3227  000E2A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3228  000E2E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3229  000E32  0E00               	movlw	0
  3230  000E34  6E05               	movwf	___fldiv@a^0,c
  3231  000E36  0E00               	movlw	0
  3232  000E38  6E06               	movwf	(___fldiv@a+1)^0,c
  3233  000E3A  0E20               	movlw	32
  3234  000E3C  6E07               	movwf	(___fldiv@a+2)^0,c
  3235  000E3E  0E41               	movlw	65
  3236  000E40  6E08               	movwf	(___fldiv@a+3)^0,c
  3237  000E42  EC5C  F011         	call	___fldiv	;wreg free
  3238  000E46  C001  F094         	movff	?___fldiv,efgtoa@u
  3239  000E4A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3240  000E4E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3241  000E52  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3242  000E56                     
  3243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3244  000E56  0100               	movlb	0	; () banked
  3245  000E58  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3246  000E5A  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3247  000E5C                     l4315:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3251  000E5C  5174               	movf	efgtoa@m& (0+255),w,b
  3252  000E5E  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3253  000E60  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3254  000E62  0A80               	xorlw	128
  3255  000E64  6E35               	movwf	??_efgtoa^0,c
  3256  000E66  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3257  000E68  0A80               	xorlw	128
  3258  000E6A  5835               	subwfb	??_efgtoa^0,w,c
  3259  000E6C  A0D8               	btfss	status,0,c
  3260  000E6E  EF3B  F007         	goto	u5411
  3261  000E72  EF3D  F007         	goto	u5410
  3262  000E76                     u5411:
  3263  000E76  EFB3  F006         	goto	l4307
  3264  000E7A                     u5410:
  3265  000E7A                     
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3268  000E7A  C094  F001         	movff	efgtoa@u,___flmul@b
  3269  000E7E  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  3270  000E82  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  3271  000E86  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  3272  000E8A  0E00               	movlw	0
  3273  000E8C  6E05               	movwf	___flmul@a^0,c
  3274  000E8E  0E00               	movlw	0
  3275  000E90  6E06               	movwf	(___flmul@a+1)^0,c
  3276  000E92  0EA0               	movlw	160
  3277  000E94  6E07               	movwf	(___flmul@a+2)^0,c
  3278  000E96  0E40               	movlw	64
  3279  000E98  6E08               	movwf	(___flmul@a+3)^0,c
  3280  000E9A  EC47  F00F         	call	___flmul	;wreg free
  3281  000E9E  C001  F086         	movff	?___flmul,efgtoa@l
  3282  000EA2  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  3283  000EA6  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  3284  000EAA  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  3285  000EAE                     
  3286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3287  000EAE  C082  F01A         	movff	efgtoa@h,___flge@ff1
  3288  000EB2  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3289  000EB6  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3290  000EBA  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3291  000EBE  C086  F01E         	movff	efgtoa@l,___flge@ff2
  3292  000EC2  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3293  000EC6  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3294  000ECA  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3295  000ECE  ECBE  F01D         	call	___flge	;wreg free
  3296  000ED2  B0D8               	btfsc	status,0,c
  3297  000ED4  EF6E  F007         	goto	u5421
  3298  000ED8  EF70  F007         	goto	u5420
  3299  000EDC                     u5421:
  3300  000EDC  EF7B  F007         	goto	l4323
  3301  000EE0                     u5420:
  3302  000EE0                     
  3303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3304  000EE0  0E00               	movlw	0
  3305  000EE2  0100               	movlb	0	; () banked
  3306  000EE4  6F86               	movwf	efgtoa@l& (0+255),b
  3307  000EE6  0E00               	movlw	0
  3308  000EE8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3309  000EEA  0E00               	movlw	0
  3310  000EEC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3311  000EEE  0E00               	movlw	0
  3312  000EF0  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3315  000EF2  EFA4  F007         	goto	l4329
  3316  000EF6                     l4323:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3319  000EF6  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3320  000EFA  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3321  000EFE  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3322  000F02  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3323  000F06  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3324  000F0A  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3325  000F0E  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3326  000F12  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3327  000F16  ECAC  F020         	call	___fleq	;wreg free
  3328  000F1A  A0D8               	btfss	status,0,c
  3329  000F1C  EF92  F007         	goto	u5431
  3330  000F20  EF94  F007         	goto	u5430
  3331  000F24                     u5431:
  3332  000F24  EFA4  F007         	goto	l4329
  3333  000F28                     u5430:
  3334  000F28  0100               	movlb	0	; () banked
  3335  000F2A  B178               	btfsc	efgtoa@d& (0+255),0,b
  3336  000F2C  EF9A  F007         	goto	u5441
  3337  000F30  EF9C  F007         	goto	u5440
  3338  000F34                     u5441:
  3339  000F34  EFA4  F007         	goto	l4329
  3340  000F38                     u5440:
  3341  000F38                     
  3342                           ; BSR set to: 0
  3343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3344  000F38  0E00               	movlw	0
  3345  000F3A  6F86               	movwf	efgtoa@l& (0+255),b
  3346  000F3C  0E00               	movlw	0
  3347  000F3E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3348  000F40  0E00               	movlw	0
  3349  000F42  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3350  000F44  0E00               	movlw	0
  3351  000F46  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3352  000F48                     l4329:
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3355  000F48  C08C  F001         	movff	efgtoa@g,___fladd@b
  3356  000F4C  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3357  000F50  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3358  000F54  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3359  000F58  C086  F005         	movff	efgtoa@l,___fladd@a
  3360  000F5C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3361  000F60  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3362  000F64  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3363  000F68  ECE7  F00C         	call	___fladd	;wreg free
  3364  000F6C  C001  F082         	movff	?___fladd,efgtoa@h
  3365  000F70  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3366  000F74  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3367  000F78  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3368  000F7C                     
  3369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3370  000F7C  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3371  000F80  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3372  000F84  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3373  000F88  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3374  000F8C                     
  3375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3376  000F8C  0E65               	movlw	101
  3377  000F8E  0100               	movlb	0	; () banked
  3378  000F90  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3379  000F92  B4D8               	btfsc	status,2,c
  3380  000F94  EFCE  F007         	goto	u5451
  3381  000F98  EFD0  F007         	goto	u5450
  3382  000F9C                     u5451:
  3383  000F9C  EFD6  F007         	goto	l4337
  3384  000FA0                     u5450:
  3385  000FA0                     
  3386                           ; BSR set to: 0
  3387  000FA0  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3388  000FA4  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3389  000FA8  EFDA  F007         	goto	l1001
  3390  000FAC                     l4337:
  3391                           
  3392                           ; BSR set to: 0
  3393  000FAC  0E00               	movlw	0
  3394  000FAE  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3395  000FB0  0E00               	movlw	0
  3396  000FB2  6F76               	movwf	efgtoa@ne& (0+255),b
  3397  000FB4                     l1001:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3401  000FB4  0E00               	movlw	0
  3402  000FB6  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3403  000FB8  0E00               	movlw	0
  3404  000FBA  6F72               	movwf	efgtoa@pp& (0+255),b
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3407  000FBC  0E00               	movlw	0
  3408  000FBE  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3409  000FC0  0E00               	movlw	0
  3410  000FC2  6F70               	movwf	efgtoa@t& (0+255),b
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3413  000FC4  0E00               	movlw	0
  3414  000FC6  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3415  000FC8  0E00               	movlw	0
  3416  000FCA  6F8A               	movwf	efgtoa@i& (0+255),b
  3417                           
  3418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3419  000FCC  EFD5  F008         	goto	l4387
  3420  000FD0                     l4339:
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3424  000FD0  C082  F001         	movff	efgtoa@h,___fldiv@b
  3425  000FD4  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3426  000FD8  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3427  000FDC  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3428  000FE0  C094  F005         	movff	efgtoa@u,___fldiv@a
  3429  000FE4  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3430  000FE8  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3431  000FEC  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3432  000FF0  EC5C  F011         	call	___fldiv	;wreg free
  3433  000FF4  C001  F01A         	movff	?___fldiv,floorf@x
  3434  000FF8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3435  000FFC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3436  001000  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3437  001004  EC49  F019         	call	_floorf	;wreg free
  3438  001008  C01A  F086         	movff	?_floorf,efgtoa@l
  3439  00100C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3440  001010  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3441  001014  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3444  001018  C086  F001         	movff	efgtoa@l,___fltol@f1
  3445  00101C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3446  001020  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3447  001024  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3448  001028  EC3B  F01D         	call	___fltol	;wreg free
  3449  00102C  C001  F078         	movff	?___fltol,efgtoa@d
  3450  001030  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3451  001034                     
  3452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3453  001034  0100               	movlb	0	; () banked
  3454  001036  B9D7               	btfsc	_flags& (0+255),4,b
  3455  001038  EF20  F008         	goto	u5461
  3456  00103C  EF22  F008         	goto	u5460
  3457  001040                     u5461:
  3458  001040  EF3F  F008         	goto	l4351
  3459  001044                     u5460:
  3460  001044                     
  3461                           ; BSR set to: 0
  3462  001044  5178               	movf	efgtoa@d& (0+255),w,b
  3463  001046  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3464  001048  A4D8               	btfss	status,2,c
  3465  00104A  EF29  F008         	goto	u5471
  3466  00104E  EF2B  F008         	goto	u5470
  3467  001052                     u5471:
  3468  001052  EF3F  F008         	goto	l4351
  3469  001056                     u5470:
  3470  001056                     
  3471                           ; BSR set to: 0
  3472  001056  0E67               	movlw	103
  3473  001058  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3474  00105A  A4D8               	btfss	status,2,c
  3475  00105C  EF32  F008         	goto	u5481
  3476  001060  EF34  F008         	goto	u5480
  3477  001064                     u5481:
  3478  001064  EF3F  F008         	goto	l4351
  3479  001068                     u5480:
  3480  001068                     
  3481                           ; BSR set to: 0
  3482  001068  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3483  00106A  EF3B  F008         	goto	u5490
  3484  00106E  EF39  F008         	goto	u5491
  3485  001072                     u5491:
  3486  001072  EF3F  F008         	goto	l4351
  3487  001076                     u5490:
  3488  001076                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3491  001076  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3492  001078  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3495  00107A  EF89  F008         	goto	l4379
  3496  00107E                     l4351:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3500  00107E  5172               	movf	efgtoa@pp& (0+255),w,b
  3501  001080  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3502  001082  A4D8               	btfss	status,2,c
  3503  001084  EF46  F008         	goto	u5501
  3504  001088  EF48  F008         	goto	u5500
  3505  00108C                     u5501:
  3506  00108C  EF72  F008         	goto	l4371
  3507  001090                     u5500:
  3508  001090                     
  3509                           ; BSR set to: 0
  3510  001090  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3511  001092  EF4F  F008         	goto	u5510
  3512  001096  EF4D  F008         	goto	u5511
  3513  00109A                     u5511:
  3514  00109A  EF72  F008         	goto	l4371
  3515  00109E                     u5510:
  3516  00109E                     
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3519  00109E  0E00               	movlw	low _dbuf
  3520  0010A0  2592               	addwf	efgtoa@n& (0+255),w,b
  3521  0010A2  6ED9               	movwf	fsr2l,c
  3522  0010A4  0E01               	movlw	high _dbuf
  3523  0010A6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3524  0010A8  6EDA               	movwf	fsr2h,c
  3525  0010AA  0E2E               	movlw	46
  3526  0010AC  6EDF               	movwf	indf2,c
  3527  0010AE                     
  3528                           ; BSR set to: 0
  3529  0010AE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3530  0010B0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3531  0010B2                     
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3534  0010B2  077F               	decf	efgtoa@w& (0+255),f,b
  3535  0010B4  A0D8               	btfss	status,0,c
  3536  0010B6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3537  0010B8                     
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3540  0010B8  0E00               	movlw	0
  3541  0010BA  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3542  0010BC  0E01               	movlw	1
  3543  0010BE  6F72               	movwf	efgtoa@pp& (0+255),b
  3544  0010C0  EF72  F008         	goto	l4371
  3545  0010C4                     l4363:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3549  0010C4  0E00               	movlw	low _dbuf
  3550  0010C6  2592               	addwf	efgtoa@n& (0+255),w,b
  3551  0010C8  6ED9               	movwf	fsr2l,c
  3552  0010CA  0E01               	movlw	high _dbuf
  3553  0010CC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3554  0010CE  6EDA               	movwf	fsr2h,c
  3555  0010D0  0E30               	movlw	48
  3556  0010D2  6EDF               	movwf	indf2,c
  3557  0010D4                     
  3558                           ; BSR set to: 0
  3559  0010D4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3560  0010D6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3561  0010D8                     
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3564  0010D8  077F               	decf	efgtoa@w& (0+255),f,b
  3565  0010DA  A0D8               	btfss	status,0,c
  3566  0010DC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3567  0010DE                     
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3570  0010DE  0770               	decf	efgtoa@t& (0+255),f,b
  3571  0010E0  A0D8               	btfss	status,0,c
  3572  0010E2  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3573  0010E4                     l4371:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3577  0010E4  5170               	movf	efgtoa@t& (0+255),w,b
  3578  0010E6  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3579  0010E8  A4D8               	btfss	status,2,c
  3580  0010EA  EF79  F008         	goto	u5521
  3581  0010EE  EF7B  F008         	goto	u5520
  3582  0010F2                     u5521:
  3583  0010F2  EF62  F008         	goto	l4363
  3584  0010F6                     u5520:
  3585  0010F6                     
  3586                           ; BSR set to: 0
  3587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3588  0010F6  0E00               	movlw	low _dbuf
  3589  0010F8  2592               	addwf	efgtoa@n& (0+255),w,b
  3590  0010FA  6ED9               	movwf	fsr2l,c
  3591  0010FC  0E01               	movlw	high _dbuf
  3592  0010FE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3593  001100  6EDA               	movwf	fsr2h,c
  3594  001102  5178               	movf	efgtoa@d& (0+255),w,b
  3595  001104  0F30               	addlw	48
  3596  001106  6EDF               	movwf	indf2,c
  3597  001108                     
  3598                           ; BSR set to: 0
  3599  001108  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3600  00110A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3601  00110C                     
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3604  00110C  077F               	decf	efgtoa@w& (0+255),f,b
  3605  00110E  A0D8               	btfss	status,0,c
  3606  001110  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3607  001112                     l4379:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3611  001112  C082  F01A         	movff	efgtoa@h,___flsub@b
  3612  001116  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3613  00111A  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3614  00111E  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3615  001122  C094  F005         	movff	efgtoa@u,___flmul@a
  3616  001126  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3617  00112A  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3618  00112E  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3619  001132  C086  F001         	movff	efgtoa@l,___flmul@b
  3620  001136  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3621  00113A  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3622  00113E  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3623  001142  EC47  F00F         	call	___flmul	;wreg free
  3624  001146  C001  F01E         	movff	?___flmul,___flsub@a
  3625  00114A  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3626  00114E  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3627  001152  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3628  001156  EC82  F022         	call	___flsub	;wreg free
  3629  00115A  C01A  F082         	movff	?___flsub,efgtoa@h
  3630  00115E  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3631  001162  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3632  001166  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3633  00116A                     
  3634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3635  00116A  C094  F001         	movff	efgtoa@u,___fldiv@b
  3636  00116E  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3637  001172  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3638  001176  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3639  00117A  0E00               	movlw	0
  3640  00117C  6E05               	movwf	___fldiv@a^0,c
  3641  00117E  0E00               	movlw	0
  3642  001180  6E06               	movwf	(___fldiv@a+1)^0,c
  3643  001182  0E20               	movlw	32
  3644  001184  6E07               	movwf	(___fldiv@a+2)^0,c
  3645  001186  0E41               	movlw	65
  3646  001188  6E08               	movwf	(___fldiv@a+3)^0,c
  3647  00118A  EC5C  F011         	call	___fldiv	;wreg free
  3648  00118E  C001  F094         	movff	?___fldiv,efgtoa@u
  3649  001192  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3650  001196  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3651  00119A  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3652  00119E                     
  3653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3654  00119E  0100               	movlb	0	; () banked
  3655  0011A0  0776               	decf	efgtoa@ne& (0+255),f,b
  3656  0011A2  A0D8               	btfss	status,0,c
  3657  0011A4  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3658  0011A6                     
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3661  0011A6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3662  0011A8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3663  0011AA                     l4387:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3667  0011AA  5174               	movf	efgtoa@m& (0+255),w,b
  3668  0011AC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3669  0011AE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3670  0011B0  0A80               	xorlw	128
  3671  0011B2  6E35               	movwf	??_efgtoa^0,c
  3672  0011B4  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3673  0011B6  0A80               	xorlw	128
  3674  0011B8  5835               	subwfb	??_efgtoa^0,w,c
  3675  0011BA  B0D8               	btfsc	status,0,c
  3676  0011BC  EFE2  F008         	goto	u5531
  3677  0011C0  EFE4  F008         	goto	u5530
  3678  0011C4                     u5531:
  3679  0011C4  EFF2  F008         	goto	l4391
  3680  0011C8                     u5530:
  3681  0011C8                     
  3682                           ; BSR set to: 0
  3683  0011C8  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3684  0011CA  EFF0  F008         	goto	u5541
  3685  0011CE  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3686  0011D0  E109               	bnz	u5540
  3687  0011D2  0E4B               	movlw	75
  3688  0011D4  5D92               	subwf	efgtoa@n& (0+255),w,b
  3689  0011D6  A0D8               	btfss	status,0,c
  3690  0011D8  EFF0  F008         	goto	u5541
  3691  0011DC  EFF2  F008         	goto	u5540
  3692  0011E0                     u5541:
  3693  0011E0  EFE8  F007         	goto	l4339
  3694  0011E4                     u5540:
  3695  0011E4                     l4391:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3699  0011E4  5172               	movf	efgtoa@pp& (0+255),w,b
  3700  0011E6  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3701  0011E8  A4D8               	btfss	status,2,c
  3702  0011EA  EFF9  F008         	goto	u5551
  3703  0011EE  EFFB  F008         	goto	u5550
  3704  0011F2                     u5551:
  3705  0011F2  EF0C  F009         	goto	l4399
  3706  0011F6                     u5550:
  3707  0011F6                     
  3708                           ; BSR set to: 0
  3709  0011F6  A9D7               	btfss	_flags& (0+255),4,b
  3710  0011F8  EF00  F009         	goto	u5561
  3711  0011FC  EF02  F009         	goto	u5560
  3712  001200                     u5561:
  3713  001200  EF0C  F009         	goto	l4399
  3714  001204                     u5560:
  3715  001204                     
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3718  001204  0E00               	movlw	low _dbuf
  3719  001206  2592               	addwf	efgtoa@n& (0+255),w,b
  3720  001208  6ED9               	movwf	fsr2l,c
  3721  00120A  0E01               	movlw	high _dbuf
  3722  00120C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3723  00120E  6EDA               	movwf	fsr2h,c
  3724  001210  0E2E               	movlw	46
  3725  001212  6EDF               	movwf	indf2,c
  3726  001214                     
  3727                           ; BSR set to: 0
  3728  001214  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3729  001216  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3730  001218                     l4399:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3734  001218  0E00               	movlw	low _dbuf
  3735  00121A  2592               	addwf	efgtoa@n& (0+255),w,b
  3736  00121C  6ED9               	movwf	fsr2l,c
  3737  00121E  0E01               	movlw	high _dbuf
  3738  001220  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3739  001222  6EDA               	movwf	fsr2h,c
  3740  001224  0E00               	movlw	0
  3741  001226  6EDF               	movwf	indf2,c
  3742  001228                     
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3745  001228  0E65               	movlw	101
  3746  00122A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3747  00122C  A4D8               	btfss	status,2,c
  3748  00122E  EF1B  F009         	goto	u5571
  3749  001232  EF1D  F009         	goto	u5570
  3750  001236                     u5571:
  3751  001236  EFCB  F004         	goto	l4211
  3752  00123A                     u5570:
  3753  00123A                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3756  00123A  0E00               	movlw	0
  3757  00123C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3758  00123E  0E4F               	movlw	79
  3759  001240  6F8A               	movwf	efgtoa@i& (0+255),b
  3760  001242                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3763  001242  0E00               	movlw	low _dbuf
  3764  001244  258A               	addwf	efgtoa@i& (0+255),w,b
  3765  001246  6ED9               	movwf	fsr2l,c
  3766  001248  0E01               	movlw	high _dbuf
  3767  00124A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3768  00124C  6EDA               	movwf	fsr2h,c
  3769  00124E  0E00               	movlw	0
  3770  001250  6EDF               	movwf	indf2,c
  3771  001252                     
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3774  001252  0E00               	movlw	0
  3775  001254  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3776  001256  0E00               	movlw	0
  3777  001258  6F7A               	movwf	efgtoa@sign& (0+255),b
  3778  00125A                     
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3781  00125A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3782  00125C  EF34  F009         	goto	u5580
  3783  001260  EF32  F009         	goto	u5581
  3784  001264                     u5581:
  3785  001264  EF3C  F009         	goto	l4415
  3786  001268                     u5580:
  3787  001268                     
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3790  001268  0E00               	movlw	0
  3791  00126A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3792  00126C  0E01               	movlw	1
  3793  00126E  6F7A               	movwf	efgtoa@sign& (0+255),b
  3794  001270                     
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3797  001270  6D90               	negf	efgtoa@e& (0+255),b
  3798  001272  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3799  001274  B0D8               	btfsc	status,0,c
  3800  001276  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3801  001278                     l4415:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3805  001278  0E00               	movlw	0
  3806  00127A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3807  00127C  0E02               	movlw	2
  3808  00127E  6F7C               	movwf	efgtoa@p& (0+255),b
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3811  001280  EF6D  F009         	goto	l4427
  3812  001284                     l4417:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3816  001284  078A               	decf	efgtoa@i& (0+255),f,b
  3817  001286  A0D8               	btfss	status,0,c
  3818  001288  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3819  00128A                     
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3822  00128A  0E00               	movlw	low _dbuf
  3823  00128C  258A               	addwf	efgtoa@i& (0+255),w,b
  3824  00128E  6ED9               	movwf	fsr2l,c
  3825  001290  0E01               	movlw	high _dbuf
  3826  001292  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3827  001294  6EDA               	movwf	fsr2h,c
  3828  001296  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3829  00129A  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3830  00129E  0E00               	movlw	0
  3831  0012A0  6E04               	movwf	(___awmod@divisor+1)^0,c
  3832  0012A2  0E0A               	movlw	10
  3833  0012A4  6E03               	movwf	___awmod@divisor^0,c
  3834  0012A6  EC54  F020         	call	___awmod	;wreg free
  3835  0012AA  5001               	movf	?___awmod^0,w,c
  3836  0012AC  0F30               	addlw	48
  3837  0012AE  6EDF               	movwf	indf2,c
  3838  0012B0                     
  3839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3840  0012B0  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3841  0012B4  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3842  0012B8  0E00               	movlw	0
  3843  0012BA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3844  0012BC  0E0A               	movlw	10
  3845  0012BE  6E03               	movwf	___awdiv@divisor^0,c
  3846  0012C0  ECF2  F01F         	call	___awdiv	;wreg free
  3847  0012C4  C001  F090         	movff	?___awdiv,efgtoa@e
  3848  0012C8  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3849  0012CC                     
  3850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  3851  0012CC  0100               	movlb	0	; () banked
  3852  0012CE  077C               	decf	efgtoa@p& (0+255),f,b
  3853  0012D0  A0D8               	btfss	status,0,c
  3854  0012D2  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3855  0012D4                     
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  3858  0012D4  077F               	decf	efgtoa@w& (0+255),f,b
  3859  0012D6  A0D8               	btfss	status,0,c
  3860  0012D8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3861  0012DA                     l4427:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3865  0012DA  5190               	movf	efgtoa@e& (0+255),w,b
  3866  0012DC  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3867  0012DE  A4D8               	btfss	status,2,c
  3868  0012E0  EF74  F009         	goto	u5591
  3869  0012E4  EF76  F009         	goto	u5590
  3870  0012E8                     u5591:
  3871  0012E8  EF42  F009         	goto	l4417
  3872  0012EC                     u5590:
  3873  0012EC                     
  3874                           ; BSR set to: 0
  3875  0012EC  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3876  0012EE  EF83  F009         	goto	u5600
  3877  0012F2  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3878  0012F4  E106               	bnz	u5601
  3879  0012F6  057C               	decf	efgtoa@p& (0+255),w,b
  3880  0012F8  B0D8               	btfsc	status,0,c
  3881  0012FA  EF81  F009         	goto	u5601
  3882  0012FE  EF83  F009         	goto	u5600
  3883  001302                     u5601:
  3884  001302  EF42  F009         	goto	l4417
  3885  001306                     u5600:
  3886  001306                     
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  3889  001306  078A               	decf	efgtoa@i& (0+255),f,b
  3890  001308  A0D8               	btfss	status,0,c
  3891  00130A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3892  00130C                     
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  3895  00130C  517A               	movf	efgtoa@sign& (0+255),w,b
  3896  00130E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3897  001310  A4D8               	btfss	status,2,c
  3898  001312  EF8D  F009         	goto	u5611
  3899  001316  EF8F  F009         	goto	u5610
  3900  00131A                     u5611:
  3901  00131A  EF95  F009         	goto	l4437
  3902  00131E                     u5610:
  3903  00131E                     
  3904                           ; BSR set to: 0
  3905  00131E  0E00               	movlw	0
  3906  001320  6F6B               	movwf	(_efgtoa$773+1)& (0+255),b
  3907  001322  0E2B               	movlw	43
  3908  001324  6F6A               	movwf	_efgtoa$773& (0+255),b
  3909  001326  EF99  F009         	goto	l4439
  3910  00132A                     l4437:
  3911                           
  3912                           ; BSR set to: 0
  3913  00132A  0E00               	movlw	0
  3914  00132C  6F6B               	movwf	(_efgtoa$773+1)& (0+255),b
  3915  00132E  0E2D               	movlw	45
  3916  001330  6F6A               	movwf	_efgtoa$773& (0+255),b
  3917  001332                     l4439:
  3918                           
  3919                           ; BSR set to: 0
  3920  001332  0E00               	movlw	low _dbuf
  3921  001334  258A               	addwf	efgtoa@i& (0+255),w,b
  3922  001336  6ED9               	movwf	fsr2l,c
  3923  001338  0E01               	movlw	high _dbuf
  3924  00133A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3925  00133C  6EDA               	movwf	fsr2h,c
  3926  00133E  C06A  FFDF         	movff	_efgtoa$773,indf2
  3927  001342                     
  3928                           ; BSR set to: 0
  3929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  3930  001342  077F               	decf	efgtoa@w& (0+255),f,b
  3931  001344  A0D8               	btfss	status,0,c
  3932  001346  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3933  001348                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3936  001348  078A               	decf	efgtoa@i& (0+255),f,b
  3937  00134A  A0D8               	btfss	status,0,c
  3938  00134C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3939  00134E                     
  3940                           ; BSR set to: 0
  3941  00134E  0EBF               	movlw	191
  3942  001350  6E35               	movwf	??_efgtoa^0,c
  3943  001352  0EFF               	movlw	255
  3944  001354  6E36               	movwf	(??_efgtoa+1)^0,c
  3945  001356  5034               	movf	efgtoa@c^0,w,c
  3946  001358  6E37               	movwf	(??_efgtoa+2)^0,c
  3947  00135A  6A38               	clrf	(??_efgtoa+3)^0,c
  3948  00135C  5035               	movf	??_efgtoa^0,w,c
  3949  00135E  2637               	addwf	(??_efgtoa+2)^0,f,c
  3950  001360  5036               	movf	(??_efgtoa+1)^0,w,c
  3951  001362  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3952  001364  5038               	movf	(??_efgtoa+3)^0,w,c
  3953  001366  E10A               	bnz	u5620
  3954  001368  0E1A               	movlw	26
  3955  00136A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3956  00136C  A0D8               	btfss	status,0,c
  3957  00136E  EFBB  F009         	goto	u5621
  3958  001372  EFBE  F009         	goto	u5620
  3959  001376                     u5621:
  3960  001376  0E01               	movlw	1
  3961  001378  EFBF  F009         	goto	u5630
  3962  00137C                     u5620:
  3963  00137C  0E00               	movlw	0
  3964  00137E                     u5630:
  3965  00137E  6F6E               	movwf	_efgtoa$775& (0+255),b
  3966  001380  6B6F               	clrf	(_efgtoa$775+1)& (0+255),b
  3967  001382                     
  3968                           ; BSR set to: 0
  3969  001382  516E               	movf	_efgtoa$775& (0+255),w,b
  3970  001384  116F               	iorwf	(_efgtoa$775+1)& (0+255),w,b
  3971  001386  A4D8               	btfss	status,2,c
  3972  001388  EFC8  F009         	goto	u5641
  3973  00138C  EFCA  F009         	goto	u5640
  3974  001390                     u5641:
  3975  001390  EFD0  F009         	goto	l4453
  3976  001394                     u5640:
  3977  001394                     
  3978                           ; BSR set to: 0
  3979  001394  0E00               	movlw	0
  3980  001396  6F6D               	movwf	(_efgtoa$774+1)& (0+255),b
  3981  001398  0E65               	movlw	101
  3982  00139A  6F6C               	movwf	_efgtoa$774& (0+255),b
  3983  00139C  EFD4  F009         	goto	l4455
  3984  0013A0                     l4453:
  3985                           
  3986                           ; BSR set to: 0
  3987  0013A0  0E00               	movlw	0
  3988  0013A2  6F6D               	movwf	(_efgtoa$774+1)& (0+255),b
  3989  0013A4  0E45               	movlw	69
  3990  0013A6  6F6C               	movwf	_efgtoa$774& (0+255),b
  3991  0013A8                     l4455:
  3992                           
  3993                           ; BSR set to: 0
  3994  0013A8  0E00               	movlw	low _dbuf
  3995  0013AA  258A               	addwf	efgtoa@i& (0+255),w,b
  3996  0013AC  6ED9               	movwf	fsr2l,c
  3997  0013AE  0E01               	movlw	high _dbuf
  3998  0013B0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3999  0013B2  6EDA               	movwf	fsr2h,c
  4000  0013B4  C06C  FFDF         	movff	_efgtoa$774,indf2
  4001  0013B8                     
  4002                           ; BSR set to: 0
  4003                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4004  0013B8  077F               	decf	efgtoa@w& (0+255),f,b
  4005  0013BA  A0D8               	btfss	status,0,c
  4006  0013BC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4007  0013BE                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4010  0013BE  0E00               	movlw	low _dbuf
  4011  0013C0  2592               	addwf	efgtoa@n& (0+255),w,b
  4012  0013C2  6E01               	movwf	strcpy@dest^0,c
  4013  0013C4  0E01               	movlw	high _dbuf
  4014  0013C6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4015  0013C8  6E02               	movwf	(strcpy@dest+1)^0,c
  4016  0013CA  0E00               	movlw	low _dbuf
  4017  0013CC  258A               	addwf	efgtoa@i& (0+255),w,b
  4018  0013CE  6E03               	movwf	strcpy@src^0,c
  4019  0013D0  0E01               	movlw	high _dbuf
  4020  0013D2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4021  0013D4  6E04               	movwf	(strcpy@src+1)^0,c
  4022  0013D6  EC91  F021         	call	_strcpy	;wreg free
  4023  0013DA  EFCB  F004         	goto	l4211
  4024  0013DE                     l957:
  4025  0013DE  0012               	return		;funcret
  4026  0013E0                     __end_of_efgtoa:
  4027                           	callstack 0
  4028                           
  4029 ;; *************** function _tolower *****************
  4030 ;; Defined at:
  4031 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  c               2    6[COMRAM] int 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  2    6[COMRAM] int 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4045 ;;      Params:         2       0       0       0       0       0       0       0       0
  4046 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4047 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4048 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4049 ;;Total ram usage:        8 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    1
  4052 ;; This function calls:
  4053 ;;		_isupper
  4054 ;; This function is called by:
  4055 ;;		_efgtoa
  4056 ;;		_vfpfcnvrt
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text6
  4061  004264                     __ptext6:
  4062                           	callstack 0
  4063  004264                     _tolower:
  4064                           	callstack 26
  4065  004264  0EBF               	movlw	191
  4066  004266  6E09               	movwf	??_tolower^0,c
  4067  004268  0EFF               	movlw	255
  4068  00426A  6E0A               	movwf	(??_tolower+1)^0,c
  4069  00426C  C007  F00B         	movff	tolower@c,??_tolower+2
  4070  004270  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4071  004274  5009               	movf	??_tolower^0,w,c
  4072  004276  260B               	addwf	(??_tolower+2)^0,f,c
  4073  004278  500A               	movf	(??_tolower+1)^0,w,c
  4074  00427A  220C               	addwfc	(??_tolower+3)^0,f,c
  4075  00427C  500C               	movf	(??_tolower+3)^0,w,c
  4076  00427E  E10A               	bnz	u4790
  4077  004280  0E1A               	movlw	26
  4078  004282  5C0B               	subwf	(??_tolower+2)^0,w,c
  4079  004284  A0D8               	btfss	status,0,c
  4080  004286  EF47  F021         	goto	u4791
  4081  00428A  EF4A  F021         	goto	u4790
  4082  00428E                     u4791:
  4083  00428E  0E01               	movlw	1
  4084  004290  EF4B  F021         	goto	u4800
  4085  004294                     u4790:
  4086  004294  0E00               	movlw	0
  4087  004296                     u4800:
  4088  004296  6E0D               	movwf	_tolower$925^0,c
  4089  004298  6A0E               	clrf	(_tolower$925+1)^0,c
  4090  00429A  500D               	movf	_tolower$925^0,w,c
  4091  00429C  100E               	iorwf	(_tolower$925+1)^0,w,c
  4092  00429E  B4D8               	btfsc	status,2,c
  4093  0042A0  EF54  F021         	goto	u4811
  4094  0042A4  EF56  F021         	goto	u4810
  4095  0042A8                     u4811:
  4096  0042A8  EF5D  F021         	goto	l1207
  4097  0042AC                     u4810:
  4098  0042AC  0E20               	movlw	32
  4099  0042AE  1007               	iorwf	tolower@c^0,w,c
  4100  0042B0  6E07               	movwf	?_tolower^0,c
  4101  0042B2  5008               	movf	(tolower@c+1)^0,w,c
  4102  0042B4  6E08               	movwf	(?_tolower+1)^0,c
  4103  0042B6  EF61  F021         	goto	l1212
  4104  0042BA                     l1207:
  4105  0042BA  C007  F007         	movff	tolower@c,?_tolower
  4106  0042BE  C008  F008         	movff	tolower@c+1,?_tolower+1
  4107  0042C2                     l1212:
  4108  0042C2  0012               	return		;funcret
  4109  0042C4                     __end_of_tolower:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _isupper *****************
  4113 ;; Defined at:
  4114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  c               2    0[COMRAM] int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2    0[COMRAM] int 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4128 ;;      Params:         2       0       0       0       0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4130 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4131 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4132 ;;Total ram usage:        6 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_efgtoa
  4138 ;;		_vfpfcnvrt
  4139 ;;		_tolower
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text7
  4144  004650                     __ptext7:
  4145                           	callstack 0
  4146  004650                     _isupper:
  4147                           	callstack 26
  4148  004650  0EBF               	movlw	191
  4149  004652  6E03               	movwf	??_isupper^0,c
  4150  004654  0EFF               	movlw	255
  4151  004656  6E04               	movwf	(??_isupper+1)^0,c
  4152  004658  C001  F005         	movff	isupper@c,??_isupper+2
  4153  00465C  C002  F006         	movff	isupper@c+1,??_isupper+3
  4154  004660  5003               	movf	??_isupper^0,w,c
  4155  004662  2605               	addwf	(??_isupper+2)^0,f,c
  4156  004664  5004               	movf	(??_isupper+1)^0,w,c
  4157  004666  2206               	addwfc	(??_isupper+3)^0,f,c
  4158  004668  5006               	movf	(??_isupper+3)^0,w,c
  4159  00466A  E10A               	bnz	u3800
  4160  00466C  0E1A               	movlw	26
  4161  00466E  5C05               	subwf	(??_isupper+2)^0,w,c
  4162  004670  A0D8               	btfss	status,0,c
  4163  004672  EF3D  F023         	goto	u3801
  4164  004676  EF40  F023         	goto	u3800
  4165  00467A                     u3801:
  4166  00467A  0E01               	movlw	1
  4167  00467C  EF41  F023         	goto	u3810
  4168  004680                     u3800:
  4169  004680  0E00               	movlw	0
  4170  004682                     u3810:
  4171  004682  6E01               	movwf	?_isupper^0,c
  4172  004684  6A02               	clrf	(?_isupper+1)^0,c
  4173  004686  0012               	return		;funcret
  4174  004688                     __end_of_isupper:
  4175                           	callstack 0
  4176                           
  4177 ;; *************** function _strcpy *****************
  4178 ;; Defined at:
  4179 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4182 ;;		 -> dbuf(80), 
  4183 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4184 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4185 ;;		 -> dbuf(80), 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  d               2    8[COMRAM] PTR unsigned char 
  4188 ;;		 -> dbuf(80), 
  4189 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4190 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4191 ;;		 -> dbuf(80), 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  2    0[COMRAM] PTR unsigned char 
  4194 ;; Registers used:
  4195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4201 ;;      Params:         4       0       0       0       0       0       0       0       0
  4202 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4203 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4204 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4205 ;;Total ram usage:       10 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_efgtoa
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text8
  4215  004322                     __ptext8:
  4216                           	callstack 0
  4217  004322                     _strcpy:
  4218                           	callstack 26
  4219  004322  C003  F007         	movff	strcpy@src,strcpy@s
  4220  004326  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4221  00432A  C001  F009         	movff	strcpy@dest,strcpy@d
  4222  00432E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4223  004332                     l4033:
  4224  004332  5007               	movf	strcpy@s^0,w,c
  4225  004334  6E05               	movwf	??_strcpy^0,c
  4226  004336  5008               	movf	(strcpy@s+1)^0,w,c
  4227  004338  6E06               	movwf	(??_strcpy+1)^0,c
  4228  00433A  4A07               	infsnz	strcpy@s^0,f,c
  4229  00433C  2A08               	incf	(strcpy@s+1)^0,f,c
  4230  00433E  C005  FFF6         	movff	??_strcpy,tblptrl
  4231  004342  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4232  004346  6AF8               	clrf	tblptru,c
  4233  004348  C009  FFD9         	movff	strcpy@d,fsr2l
  4234  00434C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4235  004350  4A09               	infsnz	strcpy@d^0,f,c
  4236  004352  2A0A               	incf	(strcpy@d+1)^0,f,c
  4237  004354  0E07               	movlw	(high __ramtop+-1)
  4238  004356  64F7               	cpfsgt	tblptrh,c
  4239  004358  D003               	bra	u4777
  4240  00435A  0008               	tblrd		*
  4241  00435C  50F5               	movf	tablat,w,c
  4242  00435E  D005               	bra	u4770
  4243  004360                     u4777:
  4244  004360  CFF6 FFE1          	movff	tblptrl,fsr1l
  4245  004364  CFF7 FFE2          	movff	tblptrh,fsr1h
  4246  004368  50E7               	movf	indf1,w,c
  4247  00436A                     u4770:
  4248  00436A  6EDF               	movwf	indf2,c
  4249  00436C  50DF               	movf	indf2,w,c
  4250  00436E  A4D8               	btfss	status,2,c
  4251  004370  EFBC  F021         	goto	u4781
  4252  004374  EFBE  F021         	goto	u4780
  4253  004378                     u4781:
  4254  004378  EF99  F021         	goto	l4033
  4255  00437C                     u4780:
  4256  00437C  0012               	return		;funcret
  4257  00437E                     __end_of_strcpy:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _floorf *****************
  4261 ;; Defined at:
  4262 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  x               4   25[COMRAM] float 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  u               4   41[COMRAM] struct .
  4267 ;;  m               4   35[COMRAM] unsigned long 
  4268 ;;  e               2   39[COMRAM] int 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  4   25[COMRAM] float 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4278 ;;      Params:         4       0       0       0       0       0       0       0       0
  4279 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4280 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4281 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4282 ;;Total ram usage:       20 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_efgtoa
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text9
  4292  003292                     __ptext9:
  4293                           	callstack 0
  4294  003292                     _floorf:
  4295                           	callstack 26
  4296  003292  C0C9  F02A         	movff	floorf@F524,floorf@u
  4297  003296  C0CA  F02B         	movff	floorf@F524+1,floorf@u+1
  4298  00329A  C0CB  F02C         	movff	floorf@F524+2,floorf@u+2
  4299  00329E  C0CC  F02D         	movff	floorf@F524+3,floorf@u+3
  4300  0032A2  C01A  F02A         	movff	floorf@x,floorf@u
  4301  0032A6  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4302  0032AA  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4303  0032AE  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4304  0032B2  0E81               	movlw	129
  4305  0032B4  6E1E               	movwf	??_floorf^0,c
  4306  0032B6  0EFF               	movlw	255
  4307  0032B8  6E1F               	movwf	(??_floorf+1)^0,c
  4308  0032BA  C02A  F020         	movff	floorf@u,??_floorf+2
  4309  0032BE  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4310  0032C2  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4311  0032C6  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4312  0032CA  0E18               	movlw	24
  4313  0032CC  EF6D  F019         	goto	u4820
  4314  0032D0                     u4825:
  4315  0032D0  90D8               	bcf	status,0,c
  4316  0032D2  3223               	rrcf	(??_floorf+5)^0,f,c
  4317  0032D4  3222               	rrcf	(??_floorf+4)^0,f,c
  4318  0032D6  3221               	rrcf	(??_floorf+3)^0,f,c
  4319  0032D8  3220               	rrcf	(??_floorf+2)^0,f,c
  4320  0032DA                     u4820:
  4321  0032DA  2EE8               	decfsz	wreg,f,c
  4322  0032DC  EF68  F019         	goto	u4825
  4323  0032E0  5020               	movf	(??_floorf+2)^0,w,c
  4324  0032E2  241E               	addwf	??_floorf^0,w,c
  4325  0032E4  6E28               	movwf	floorf@e^0,c
  4326  0032E6  0E00               	movlw	0
  4327  0032E8  201F               	addwfc	(??_floorf+1)^0,w,c
  4328  0032EA  6E29               	movwf	(floorf@e+1)^0,c
  4329  0032EC  BE29               	btfsc	(floorf@e+1)^0,7,c
  4330  0032EE  EF82  F019         	goto	u4831
  4331  0032F2  5029               	movf	(floorf@e+1)^0,w,c
  4332  0032F4  E109               	bnz	u4830
  4333  0032F6  0E17               	movlw	23
  4334  0032F8  5C28               	subwf	floorf@e^0,w,c
  4335  0032FA  A0D8               	btfss	status,0,c
  4336  0032FC  EF82  F019         	goto	u4831
  4337  003300  EF84  F019         	goto	u4830
  4338  003304                     u4831:
  4339  003304  EF8E  F019         	goto	l4051
  4340  003308                     u4830:
  4341  003308                     l4049:
  4342  003308  C01A  F01A         	movff	floorf@x,?_floorf
  4343  00330C  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4344  003310  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4345  003314  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4346  003318  EF51  F01A         	goto	l1131
  4347  00331C                     l4051:
  4348  00331C  BE29               	btfsc	(floorf@e+1)^0,7,c
  4349  00331E  EF93  F019         	goto	u4841
  4350  003322  EF95  F019         	goto	u4840
  4351  003326                     u4841:
  4352  003326  EF05  F01A         	goto	l4061
  4353  00332A                     u4840:
  4354  00332A  C028  F01E         	movff	floorf@e,??_floorf
  4355  00332E  0EFF               	movlw	255
  4356  003330  6E1F               	movwf	(??_floorf+1)^0,c
  4357  003332  0EFF               	movlw	255
  4358  003334  6E20               	movwf	(??_floorf+2)^0,c
  4359  003336  0E7F               	movlw	127
  4360  003338  6E21               	movwf	(??_floorf+3)^0,c
  4361  00333A  0E00               	movlw	0
  4362  00333C  6E22               	movwf	(??_floorf+4)^0,c
  4363  00333E                     u4855:
  4364  00333E  661E               	tstfsz	??_floorf^0,c
  4365  003340  EFA4  F019         	goto	u4856
  4366  003344  EFAC  F019         	goto	u4857
  4367  003348                     u4856:
  4368  003348  3422               	rlcf	(??_floorf+4)^0,w,c
  4369  00334A  3222               	rrcf	(??_floorf+4)^0,f,c
  4370  00334C  3221               	rrcf	(??_floorf+3)^0,f,c
  4371  00334E  3220               	rrcf	(??_floorf+2)^0,f,c
  4372  003350  321F               	rrcf	(??_floorf+1)^0,f,c
  4373  003352  2E1E               	decfsz	??_floorf^0,f,c
  4374  003354  EF9F  F019         	goto	u4855
  4375  003358                     u4857:
  4376  003358  C01F  F024         	movff	??_floorf+1,floorf@m
  4377  00335C  C020  F025         	movff	??_floorf+2,floorf@m+1
  4378  003360  C021  F026         	movff	??_floorf+3,floorf@m+2
  4379  003364  C022  F027         	movff	??_floorf+4,floorf@m+3
  4380  003368  5024               	movf	floorf@m^0,w,c
  4381  00336A  142A               	andwf	floorf@u^0,w,c
  4382  00336C  6E1E               	movwf	??_floorf^0,c
  4383  00336E  5025               	movf	(floorf@m+1)^0,w,c
  4384  003370  142B               	andwf	(floorf@u+1)^0,w,c
  4385  003372  6E1F               	movwf	(??_floorf+1)^0,c
  4386  003374  5026               	movf	(floorf@m+2)^0,w,c
  4387  003376  142C               	andwf	(floorf@u+2)^0,w,c
  4388  003378  6E20               	movwf	(??_floorf+2)^0,c
  4389  00337A  5027               	movf	(floorf@m+3)^0,w,c
  4390  00337C  142D               	andwf	(floorf@u+3)^0,w,c
  4391  00337E  6E21               	movwf	(??_floorf+3)^0,c
  4392  003380  501E               	movf	??_floorf^0,w,c
  4393  003382  101F               	iorwf	(??_floorf+1)^0,w,c
  4394  003384  1020               	iorwf	(??_floorf+2)^0,w,c
  4395  003386  1021               	iorwf	(??_floorf+3)^0,w,c
  4396  003388  A4D8               	btfss	status,2,c
  4397  00338A  EFC9  F019         	goto	u4861
  4398  00338E  EFCB  F019         	goto	u4860
  4399  003392                     u4861:
  4400  003392  EFCD  F019         	goto	l4057
  4401  003396                     u4860:
  4402  003396  EF84  F019         	goto	l4049
  4403  00339A                     l4057:
  4404  00339A  C02A  F01E         	movff	floorf@u,??_floorf
  4405  00339E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4406  0033A2  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4407  0033A6  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4408  0033AA  0E20               	movlw	32
  4409  0033AC  EFDD  F019         	goto	u4870
  4410  0033B0                     u4875:
  4411  0033B0  90D8               	bcf	status,0,c
  4412  0033B2  3221               	rrcf	(??_floorf+3)^0,f,c
  4413  0033B4  3220               	rrcf	(??_floorf+2)^0,f,c
  4414  0033B6  321F               	rrcf	(??_floorf+1)^0,f,c
  4415  0033B8  321E               	rrcf	??_floorf^0,f,c
  4416  0033BA                     u4870:
  4417  0033BA  2EE8               	decfsz	wreg,f,c
  4418  0033BC  EFD8  F019         	goto	u4875
  4419  0033C0  501E               	movf	??_floorf^0,w,c
  4420  0033C2  101F               	iorwf	(??_floorf+1)^0,w,c
  4421  0033C4  1020               	iorwf	(??_floorf+2)^0,w,c
  4422  0033C6  1021               	iorwf	(??_floorf+3)^0,w,c
  4423  0033C8  B4D8               	btfsc	status,2,c
  4424  0033CA  EFE9  F019         	goto	u4881
  4425  0033CE  EFEB  F019         	goto	u4880
  4426  0033D2                     u4881:
  4427  0033D2  EFF3  F019         	goto	l1134
  4428  0033D6                     u4880:
  4429  0033D6  5024               	movf	floorf@m^0,w,c
  4430  0033D8  262A               	addwf	floorf@u^0,f,c
  4431  0033DA  5025               	movf	(floorf@m+1)^0,w,c
  4432  0033DC  222B               	addwfc	(floorf@u+1)^0,f,c
  4433  0033DE  5026               	movf	(floorf@m+2)^0,w,c
  4434  0033E0  222C               	addwfc	(floorf@u+2)^0,f,c
  4435  0033E2  5027               	movf	(floorf@m+3)^0,w,c
  4436  0033E4  222D               	addwfc	(floorf@u+3)^0,f,c
  4437  0033E6                     l1134:
  4438  0033E6  1C24               	comf	floorf@m^0,w,c
  4439  0033E8  6E1E               	movwf	??_floorf^0,c
  4440  0033EA  1C25               	comf	(floorf@m+1)^0,w,c
  4441  0033EC  6E1F               	movwf	(??_floorf+1)^0,c
  4442  0033EE  1C26               	comf	(floorf@m+2)^0,w,c
  4443  0033F0  6E20               	movwf	(??_floorf+2)^0,c
  4444  0033F2  1C27               	comf	(floorf@m+3)^0,w,c
  4445  0033F4  6E21               	movwf	(??_floorf+3)^0,c
  4446  0033F6  501E               	movf	??_floorf^0,w,c
  4447  0033F8  162A               	andwf	floorf@u^0,f,c
  4448  0033FA  501F               	movf	(??_floorf+1)^0,w,c
  4449  0033FC  162B               	andwf	(floorf@u+1)^0,f,c
  4450  0033FE  5020               	movf	(??_floorf+2)^0,w,c
  4451  003400  162C               	andwf	(floorf@u+2)^0,f,c
  4452  003402  5021               	movf	(??_floorf+3)^0,w,c
  4453  003404  162D               	andwf	(floorf@u+3)^0,f,c
  4454  003406  EF49  F01A         	goto	l4069
  4455  00340A                     l4061:
  4456  00340A  C02A  F01E         	movff	floorf@u,??_floorf
  4457  00340E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4458  003412  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4459  003416  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4460  00341A  0E20               	movlw	32
  4461  00341C  EF15  F01A         	goto	u4890
  4462  003420                     u4895:
  4463  003420  90D8               	bcf	status,0,c
  4464  003422  3221               	rrcf	(??_floorf+3)^0,f,c
  4465  003424  3220               	rrcf	(??_floorf+2)^0,f,c
  4466  003426  321F               	rrcf	(??_floorf+1)^0,f,c
  4467  003428  321E               	rrcf	??_floorf^0,f,c
  4468  00342A                     u4890:
  4469  00342A  2EE8               	decfsz	wreg,f,c
  4470  00342C  EF10  F01A         	goto	u4895
  4471  003430  501E               	movf	??_floorf^0,w,c
  4472  003432  101F               	iorwf	(??_floorf+1)^0,w,c
  4473  003434  1020               	iorwf	(??_floorf+2)^0,w,c
  4474  003436  1021               	iorwf	(??_floorf+3)^0,w,c
  4475  003438  A4D8               	btfss	status,2,c
  4476  00343A  EF21  F01A         	goto	u4901
  4477  00343E  EF23  F01A         	goto	u4900
  4478  003442                     u4901:
  4479  003442  EF2D  F01A         	goto	l4065
  4480  003446                     u4900:
  4481  003446  0E00               	movlw	0
  4482  003448  6E2A               	movwf	floorf@u^0,c
  4483  00344A  0E00               	movlw	0
  4484  00344C  6E2B               	movwf	(floorf@u+1)^0,c
  4485  00344E  0E00               	movlw	0
  4486  003450  6E2C               	movwf	(floorf@u+2)^0,c
  4487  003452  0E00               	movlw	0
  4488  003454  6E2D               	movwf	(floorf@u+3)^0,c
  4489  003456  EF49  F01A         	goto	l4069
  4490  00345A                     l4065:
  4491  00345A  90D8               	bcf	status,0,c
  4492  00345C  342A               	rlcf	floorf@u^0,w,c
  4493  00345E  6E1E               	movwf	??_floorf^0,c
  4494  003460  342B               	rlcf	(floorf@u+1)^0,w,c
  4495  003462  6E1F               	movwf	(??_floorf+1)^0,c
  4496  003464  342C               	rlcf	(floorf@u+2)^0,w,c
  4497  003466  6E20               	movwf	(??_floorf+2)^0,c
  4498  003468  342D               	rlcf	(floorf@u+3)^0,w,c
  4499  00346A  6E21               	movwf	(??_floorf+3)^0,c
  4500  00346C  501E               	movf	??_floorf^0,w,c
  4501  00346E  101F               	iorwf	(??_floorf+1)^0,w,c
  4502  003470  1020               	iorwf	(??_floorf+2)^0,w,c
  4503  003472  1021               	iorwf	(??_floorf+3)^0,w,c
  4504  003474  B4D8               	btfsc	status,2,c
  4505  003476  EF3F  F01A         	goto	u4911
  4506  00347A  EF41  F01A         	goto	u4910
  4507  00347E                     u4911:
  4508  00347E  EF49  F01A         	goto	l4069
  4509  003482                     u4910:
  4510  003482  0E00               	movlw	0
  4511  003484  6E2A               	movwf	floorf@u^0,c
  4512  003486  0E00               	movlw	0
  4513  003488  6E2B               	movwf	(floorf@u+1)^0,c
  4514  00348A  0E80               	movlw	128
  4515  00348C  6E2C               	movwf	(floorf@u+2)^0,c
  4516  00348E  0EBF               	movlw	191
  4517  003490  6E2D               	movwf	(floorf@u+3)^0,c
  4518  003492                     l4069:
  4519  003492  C02A  F01A         	movff	floorf@u,?_floorf
  4520  003496  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4521  00349A  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4522  00349E  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4523  0034A2                     l1131:
  4524  0034A2  0012               	return		;funcret
  4525  0034A4                     __end_of_floorf:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function ___fpclassifyf *****************
  4529 ;; Defined at:
  4530 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  x               4    0[COMRAM] float 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  u               4   10[COMRAM] struct .
  4535 ;;  e               2    8[COMRAM] int 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  2    0[COMRAM] int 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4545 ;;      Params:         4       0       0       0       0       0       0       0       0
  4546 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4547 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4548 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4549 ;;Total ram usage:       14 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_efgtoa
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text10
  4559  003C80                     __ptext10:
  4560                           	callstack 0
  4561  003C80                     ___fpclassifyf:
  4562                           	callstack 26
  4563  003C80  C0CD  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4564  003C84  C0CE  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4565  003C88  C0CF  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4566  003C8C  C0D0  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4567  003C90  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4568  003C94  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4569  003C98  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4570  003C9C  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4571  003CA0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4572  003CA4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4573  003CA8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4574  003CAC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4575  003CB0  0E18               	movlw	24
  4576  003CB2  EF60  F01E         	goto	u4700
  4577  003CB6                     u4705:
  4578  003CB6  90D8               	bcf	status,0,c
  4579  003CB8  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4580  003CBA  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4581  003CBC  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4582  003CBE  3205               	rrcf	??___fpclassifyf^0,f,c
  4583  003CC0                     u4700:
  4584  003CC0  2EE8               	decfsz	wreg,f,c
  4585  003CC2  EF5B  F01E         	goto	u4705
  4586  003CC6  5005               	movf	??___fpclassifyf^0,w,c
  4587  003CC8  6E09               	movwf	___fpclassifyf@e^0,c
  4588  003CCA  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4589  003CCC  5009               	movf	___fpclassifyf@e^0,w,c
  4590  003CCE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4591  003CD0  A4D8               	btfss	status,2,c
  4592  003CD2  EF6D  F01E         	goto	u4711
  4593  003CD6  EF6F  F01E         	goto	u4710
  4594  003CDA                     u4711:
  4595  003CDA  EF8F  F01E         	goto	l4021
  4596  003CDE                     u4710:
  4597  003CDE  90D8               	bcf	status,0,c
  4598  003CE0  340B               	rlcf	___fpclassifyf@u^0,w,c
  4599  003CE2  6E05               	movwf	??___fpclassifyf^0,c
  4600  003CE4  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4601  003CE6  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4602  003CE8  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4603  003CEA  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4604  003CEC  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4605  003CEE  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4606  003CF0  5005               	movf	??___fpclassifyf^0,w,c
  4607  003CF2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4608  003CF4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4609  003CF6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4610  003CF8  A4D8               	btfss	status,2,c
  4611  003CFA  EF81  F01E         	goto	u4721
  4612  003CFE  EF83  F01E         	goto	u4720
  4613  003D02                     u4721:
  4614  003D02  EF89  F01E         	goto	l4017
  4615  003D06                     u4720:
  4616  003D06  0E00               	movlw	0
  4617  003D08  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4618  003D0A  0E02               	movlw	2
  4619  003D0C  6E01               	movwf	?___fpclassifyf^0,c
  4620  003D0E  EFBE  F01E         	goto	l1086
  4621  003D12                     l4017:
  4622  003D12  0E00               	movlw	0
  4623  003D14  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4624  003D16  0E03               	movlw	3
  4625  003D18  6E01               	movwf	?___fpclassifyf^0,c
  4626  003D1A  EFBE  F01E         	goto	l1086
  4627  003D1E                     l4021:
  4628  003D1E  2809               	incf	___fpclassifyf@e^0,w,c
  4629  003D20  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4630  003D22  A4D8               	btfss	status,2,c
  4631  003D24  EF96  F01E         	goto	u4731
  4632  003D28  EF98  F01E         	goto	u4730
  4633  003D2C                     u4731:
  4634  003D2C  EFBA  F01E         	goto	l4027
  4635  003D30                     u4730:
  4636  003D30  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4637  003D34  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4638  003D38  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4639  003D3C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4640  003D40  0E09               	movlw	9
  4641  003D42                     u4745:
  4642  003D42  90D8               	bcf	status,0,c
  4643  003D44  3605               	rlcf	??___fpclassifyf^0,f,c
  4644  003D46  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4645  003D48  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4646  003D4A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4647  003D4C  2EE8               	decfsz	wreg,f,c
  4648  003D4E  EFA1  F01E         	goto	u4745
  4649  003D52  5005               	movf	??___fpclassifyf^0,w,c
  4650  003D54  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4651  003D56  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4652  003D58  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4653  003D5A  B4D8               	btfsc	status,2,c
  4654  003D5C  EFB2  F01E         	goto	u4751
  4655  003D60  EFB5  F01E         	goto	u4750
  4656  003D64                     u4751:
  4657  003D64  0E01               	movlw	1
  4658  003D66  EFB6  F01E         	goto	u4760
  4659  003D6A                     u4750:
  4660  003D6A  0E00               	movlw	0
  4661  003D6C                     u4760:
  4662  003D6C  6E01               	movwf	?___fpclassifyf^0,c
  4663  003D6E  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4664  003D70  EFBE  F01E         	goto	l1086
  4665  003D74                     l4027:
  4666  003D74  0E00               	movlw	0
  4667  003D76  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4668  003D78  0E04               	movlw	4
  4669  003D7A  6E01               	movwf	?___fpclassifyf^0,c
  4670  003D7C                     l1086:
  4671  003D7C  0012               	return		;funcret
  4672  003D7E                     __end_of___fpclassifyf:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function ___fltol *****************
  4676 ;; Defined at:
  4677 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  f1              4    0[COMRAM] int 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  exp1            1    9[COMRAM] unsigned char 
  4682 ;;  sign1           1    8[COMRAM] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  4    0[COMRAM] long 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4692 ;;      Params:         4       0       0       0       0       0       0       0       0
  4693 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4694 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4695 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4696 ;;Total ram usage:       10 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_efgtoa
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text11
  4706  003A76                     __ptext11:
  4707                           	callstack 0
  4708  003A76                     ___fltol:
  4709                           	callstack 26
  4710  003A76  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4711  003A78  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4712  003A7A  6E0A               	movwf	___fltol@exp1^0,c
  4713  003A7C  500A               	movf	___fltol@exp1^0,w,c
  4714  003A7E  A4D8               	btfss	status,2,c
  4715  003A80  EF44  F01D         	goto	u4581
  4716  003A84  EF46  F01D         	goto	u4580
  4717  003A88                     u4581:
  4718  003A88  EF50  F01D         	goto	l3945
  4719  003A8C                     u4580:
  4720  003A8C                     l3941:
  4721  003A8C  0E00               	movlw	0
  4722  003A8E  6E01               	movwf	?___fltol^0,c
  4723  003A90  0E00               	movlw	0
  4724  003A92  6E02               	movwf	(?___fltol+1)^0,c
  4725  003A94  0E00               	movlw	0
  4726  003A96  6E03               	movwf	(?___fltol+2)^0,c
  4727  003A98  0E00               	movlw	0
  4728  003A9A  6E04               	movwf	(?___fltol+3)^0,c
  4729  003A9C  EFBD  F01D         	goto	l484
  4730  003AA0                     l3945:
  4731  003AA0  C001  F005         	movff	___fltol@f1,??___fltol
  4732  003AA4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4733  003AA8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4734  003AAC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4735  003AB0  0E20               	movlw	32
  4736  003AB2  EF60  F01D         	goto	u4590
  4737  003AB6                     u4595:
  4738  003AB6  90D8               	bcf	status,0,c
  4739  003AB8  3208               	rrcf	(??___fltol+3)^0,f,c
  4740  003ABA  3207               	rrcf	(??___fltol+2)^0,f,c
  4741  003ABC  3206               	rrcf	(??___fltol+1)^0,f,c
  4742  003ABE  3205               	rrcf	??___fltol^0,f,c
  4743  003AC0                     u4590:
  4744  003AC0  2EE8               	decfsz	wreg,f,c
  4745  003AC2  EF5B  F01D         	goto	u4595
  4746  003AC6  5005               	movf	??___fltol^0,w,c
  4747  003AC8  6E09               	movwf	___fltol@sign1^0,c
  4748  003ACA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4749  003ACC  0EFF               	movlw	255
  4750  003ACE  1601               	andwf	___fltol@f1^0,f,c
  4751  003AD0  0EFF               	movlw	255
  4752  003AD2  1602               	andwf	(___fltol@f1+1)^0,f,c
  4753  003AD4  0EFF               	movlw	255
  4754  003AD6  1603               	andwf	(___fltol@f1+2)^0,f,c
  4755  003AD8  0E00               	movlw	0
  4756  003ADA  1604               	andwf	(___fltol@f1+3)^0,f,c
  4757  003ADC  0E96               	movlw	150
  4758  003ADE  5E0A               	subwf	___fltol@exp1^0,f,c
  4759  003AE0  BE0A               	btfsc	___fltol@exp1^0,7,c
  4760  003AE2  EF77  F01D         	goto	u4600
  4761  003AE6  EF75  F01D         	goto	u4601
  4762  003AEA                     u4601:
  4763  003AEA  EF8D  F01D         	goto	l3965
  4764  003AEE                     u4600:
  4765  003AEE  500A               	movf	___fltol@exp1^0,w,c
  4766  003AF0  0A80               	xorlw	128
  4767  003AF2  0F97               	addlw	151
  4768  003AF4  B0D8               	btfsc	status,0,c
  4769  003AF6  EF7F  F01D         	goto	u4611
  4770  003AFA  EF81  F01D         	goto	u4610
  4771  003AFE                     u4611:
  4772  003AFE  EF83  F01D         	goto	l3961
  4773  003B02                     u4610:
  4774  003B02  EF46  F01D         	goto	l3941
  4775  003B06                     l3961:
  4776  003B06  90D8               	bcf	status,0,c
  4777  003B08  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4778  003B0A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4779  003B0C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4780  003B0E  3201               	rrcf	___fltol@f1^0,f,c
  4781  003B10  3E0A               	incfsz	___fltol@exp1^0,f,c
  4782  003B12  EF83  F01D         	goto	l3961
  4783  003B16  EFA5  F01D         	goto	l3975
  4784  003B1A                     l3965:
  4785  003B1A  0E1F               	movlw	31
  4786  003B1C  640A               	cpfsgt	___fltol@exp1^0,c
  4787  003B1E  EF93  F01D         	goto	u4621
  4788  003B22  EF95  F01D         	goto	u4620
  4789  003B26                     u4621:
  4790  003B26  EF9D  F01D         	goto	l3973
  4791  003B2A                     u4620:
  4792  003B2A  EF46  F01D         	goto	l3941
  4793  003B2E                     l3971:
  4794  003B2E  90D8               	bcf	status,0,c
  4795  003B30  3601               	rlcf	___fltol@f1^0,f,c
  4796  003B32  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4797  003B34  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4798  003B36  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4799  003B38  060A               	decf	___fltol@exp1^0,f,c
  4800  003B3A                     l3973:
  4801  003B3A  500A               	movf	___fltol@exp1^0,w,c
  4802  003B3C  A4D8               	btfss	status,2,c
  4803  003B3E  EFA3  F01D         	goto	u4631
  4804  003B42  EFA5  F01D         	goto	u4630
  4805  003B46                     u4631:
  4806  003B46  EF97  F01D         	goto	l3971
  4807  003B4A                     u4630:
  4808  003B4A                     l3975:
  4809  003B4A  5009               	movf	___fltol@sign1^0,w,c
  4810  003B4C  B4D8               	btfsc	status,2,c
  4811  003B4E  EFAB  F01D         	goto	u4641
  4812  003B52  EFAD  F01D         	goto	u4640
  4813  003B56                     u4641:
  4814  003B56  EFB5  F01D         	goto	l3979
  4815  003B5A                     u4640:
  4816  003B5A  1E04               	comf	(___fltol@f1+3)^0,f,c
  4817  003B5C  1E03               	comf	(___fltol@f1+2)^0,f,c
  4818  003B5E  1E02               	comf	(___fltol@f1+1)^0,f,c
  4819  003B60  6C01               	negf	___fltol@f1^0,c
  4820  003B62  0E00               	movlw	0
  4821  003B64  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4822  003B66  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4823  003B68  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4824  003B6A                     l3979:
  4825  003B6A  C001  F001         	movff	___fltol@f1,?___fltol
  4826  003B6E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4827  003B72  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4828  003B76  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4829  003B7A                     l484:
  4830  003B7A  0012               	return		;funcret
  4831  003B7C                     __end_of___fltol:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function ___flsub *****************
  4835 ;; Defined at:
  4836 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  b               4   25[COMRAM] long 
  4839 ;;  a               4   29[COMRAM] long 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  4   25[COMRAM] long 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4851 ;;      Params:         8       0       0       0       0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4854 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4855 ;;Total ram usage:        8 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    1
  4858 ;; This function calls:
  4859 ;;		___fladd
  4860 ;; This function is called by:
  4861 ;;		_efgtoa
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text12
  4866  004504                     __ptext12:
  4867                           	callstack 0
  4868  004504                     ___flsub:
  4869                           	callstack 25
  4870  004504  0E00               	movlw	0
  4871  004506  1A1E               	xorwf	___flsub@a^0,f,c
  4872  004508  0E00               	movlw	0
  4873  00450A  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4874  00450C  0E00               	movlw	0
  4875  00450E  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4876  004510  0E80               	movlw	128
  4877  004512  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4878  004514  C01A  F001         	movff	___flsub@b,___fladd@b
  4879  004518  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4880  00451C  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4881  004520  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4882  004524  C01E  F005         	movff	___flsub@a,___fladd@a
  4883  004528  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4884  00452C  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4885  004530  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4886  004534  ECE7  F00C         	call	___fladd	;wreg free
  4887  004538  C001  F01A         	movff	?___fladd,?___flsub
  4888  00453C  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4889  004540  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4890  004544  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4891  004548  0012               	return		;funcret
  4892  00454A                     __end_of___flsub:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function ___fladd *****************
  4896 ;; Defined at:
  4897 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  b               4    0[COMRAM] long 
  4900 ;;  a               4    4[COMRAM] long 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  grs             1   15[COMRAM] unsigned char 
  4903 ;;  bexp            1   14[COMRAM] unsigned char 
  4904 ;;  aexp            1   13[COMRAM] unsigned char 
  4905 ;;  signs           1   12[COMRAM] unsigned char 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  4    0[COMRAM] unsigned char 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, status,0
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4915 ;;      Params:         8       0       0       0       0       0       0       0       0
  4916 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4917 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4918 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4919 ;;Total ram usage:       16 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		___flsub
  4925 ;;		_efgtoa
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text13
  4930  0019CE                     __ptext13:
  4931                           	callstack 0
  4932  0019CE                     ___fladd:
  4933                           	callstack 25
  4934  0019CE  5004               	movf	(___fladd@b+3)^0,w,c
  4935  0019D0  0B80               	andlw	128
  4936  0019D2  6E0D               	movwf	___fladd@signs^0,c
  4937  0019D4  5004               	movf	(___fladd@b+3)^0,w,c
  4938  0019D6  2404               	addwf	(___fladd@b+3)^0,w,c
  4939  0019D8  6E0F               	movwf	___fladd@bexp^0,c
  4940  0019DA  AE03               	btfss	(___fladd@b+2)^0,7,c
  4941  0019DC  EFF2  F00C         	goto	u3391
  4942  0019E0  EFF4  F00C         	goto	u3390
  4943  0019E4                     u3391:
  4944  0019E4  EFF5  F00C         	goto	l3235
  4945  0019E8                     u3390:
  4946  0019E8  800F               	bsf	___fladd@bexp^0,0,c
  4947  0019EA                     l3235:
  4948  0019EA  500F               	movf	___fladd@bexp^0,w,c
  4949  0019EC  B4D8               	btfsc	status,2,c
  4950  0019EE  EFFB  F00C         	goto	u3401
  4951  0019F2  EFFD  F00C         	goto	u3400
  4952  0019F6                     u3401:
  4953  0019F6  EF12  F00D         	goto	l3245
  4954  0019FA                     u3400:
  4955  0019FA  280F               	incf	___fladd@bexp^0,w,c
  4956  0019FC  A4D8               	btfss	status,2,c
  4957  0019FE  EF03  F00D         	goto	u3411
  4958  001A02  EF05  F00D         	goto	u3410
  4959  001A06                     u3411:
  4960  001A06  EF0D  F00D         	goto	l3241
  4961  001A0A                     u3410:
  4962  001A0A  0E00               	movlw	0
  4963  001A0C  6E01               	movwf	___fladd@b^0,c
  4964  001A0E  0E00               	movlw	0
  4965  001A10  6E02               	movwf	(___fladd@b+1)^0,c
  4966  001A12  0E00               	movlw	0
  4967  001A14  6E03               	movwf	(___fladd@b+2)^0,c
  4968  001A16  0E00               	movlw	0
  4969  001A18  6E04               	movwf	(___fladd@b+3)^0,c
  4970  001A1A                     l3241:
  4971  001A1A  8E03               	bsf	(___fladd@b+2)^0,7,c
  4972  001A1C  0E00               	movlw	0
  4973  001A1E  6E04               	movwf	(___fladd@b+3)^0,c
  4974  001A20  EF1A  F00D         	goto	l3247
  4975  001A24                     l3245:
  4976  001A24  0E00               	movlw	0
  4977  001A26  6E01               	movwf	___fladd@b^0,c
  4978  001A28  0E00               	movlw	0
  4979  001A2A  6E02               	movwf	(___fladd@b+1)^0,c
  4980  001A2C  0E00               	movlw	0
  4981  001A2E  6E03               	movwf	(___fladd@b+2)^0,c
  4982  001A30  0E00               	movlw	0
  4983  001A32  6E04               	movwf	(___fladd@b+3)^0,c
  4984  001A34                     l3247:
  4985  001A34  5008               	movf	(___fladd@a+3)^0,w,c
  4986  001A36  0B80               	andlw	128
  4987  001A38  6E0E               	movwf	___fladd@aexp^0,c
  4988  001A3A  500D               	movf	___fladd@signs^0,w,c
  4989  001A3C  180E               	xorwf	___fladd@aexp^0,w,c
  4990  001A3E  B4D8               	btfsc	status,2,c
  4991  001A40  EF24  F00D         	goto	u3421
  4992  001A44  EF26  F00D         	goto	u3420
  4993  001A48                     u3421:
  4994  001A48  EF27  F00D         	goto	l3253
  4995  001A4C                     u3420:
  4996  001A4C  8C0D               	bsf	___fladd@signs^0,6,c
  4997  001A4E                     l3253:
  4998  001A4E  5008               	movf	(___fladd@a+3)^0,w,c
  4999  001A50  2408               	addwf	(___fladd@a+3)^0,w,c
  5000  001A52  6E0E               	movwf	___fladd@aexp^0,c
  5001  001A54  AE07               	btfss	(___fladd@a+2)^0,7,c
  5002  001A56  EF2F  F00D         	goto	u3431
  5003  001A5A  EF31  F00D         	goto	u3430
  5004  001A5E                     u3431:
  5005  001A5E  EF32  F00D         	goto	l3259
  5006  001A62                     u3430:
  5007  001A62  800E               	bsf	___fladd@aexp^0,0,c
  5008  001A64                     l3259:
  5009  001A64  500E               	movf	___fladd@aexp^0,w,c
  5010  001A66  B4D8               	btfsc	status,2,c
  5011  001A68  EF38  F00D         	goto	u3441
  5012  001A6C  EF3A  F00D         	goto	u3440
  5013  001A70                     u3441:
  5014  001A70  EF4F  F00D         	goto	l3269
  5015  001A74                     u3440:
  5016  001A74  280E               	incf	___fladd@aexp^0,w,c
  5017  001A76  A4D8               	btfss	status,2,c
  5018  001A78  EF40  F00D         	goto	u3451
  5019  001A7C  EF42  F00D         	goto	u3450
  5020  001A80                     u3451:
  5021  001A80  EF4A  F00D         	goto	l3265
  5022  001A84                     u3450:
  5023  001A84  0E00               	movlw	0
  5024  001A86  6E05               	movwf	___fladd@a^0,c
  5025  001A88  0E00               	movlw	0
  5026  001A8A  6E06               	movwf	(___fladd@a+1)^0,c
  5027  001A8C  0E00               	movlw	0
  5028  001A8E  6E07               	movwf	(___fladd@a+2)^0,c
  5029  001A90  0E00               	movlw	0
  5030  001A92  6E08               	movwf	(___fladd@a+3)^0,c
  5031  001A94                     l3265:
  5032  001A94  8E07               	bsf	(___fladd@a+2)^0,7,c
  5033  001A96  0E00               	movlw	0
  5034  001A98  6E08               	movwf	(___fladd@a+3)^0,c
  5035  001A9A  EF57  F00D         	goto	l3271
  5036  001A9E                     l3269:
  5037  001A9E  0E00               	movlw	0
  5038  001AA0  6E05               	movwf	___fladd@a^0,c
  5039  001AA2  0E00               	movlw	0
  5040  001AA4  6E06               	movwf	(___fladd@a+1)^0,c
  5041  001AA6  0E00               	movlw	0
  5042  001AA8  6E07               	movwf	(___fladd@a+2)^0,c
  5043  001AAA  0E00               	movlw	0
  5044  001AAC  6E08               	movwf	(___fladd@a+3)^0,c
  5045  001AAE                     l3271:
  5046  001AAE  500F               	movf	___fladd@bexp^0,w,c
  5047  001AB0  5C0E               	subwf	___fladd@aexp^0,w,c
  5048  001AB2  B0D8               	btfsc	status,0,c
  5049  001AB4  EF5E  F00D         	goto	u3461
  5050  001AB8  EF60  F00D         	goto	u3460
  5051  001ABC                     u3461:
  5052  001ABC  EF87  F00D         	goto	l3307
  5053  001AC0                     u3460:
  5054  001AC0  AC0D               	btfss	___fladd@signs^0,6,c
  5055  001AC2  EF65  F00D         	goto	u3471
  5056  001AC6  EF67  F00D         	goto	u3470
  5057  001ACA                     u3471:
  5058  001ACA  EF69  F00D         	goto	l3277
  5059  001ACE                     u3470:
  5060  001ACE  0E80               	movlw	128
  5061  001AD0  1A0D               	xorwf	___fladd@signs^0,f,c
  5062  001AD2                     l3277:
  5063  001AD2  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5064  001AD6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5065  001ADA  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5066  001ADE  C001  F010         	movff	___fladd@b,___fladd@grs
  5067  001AE2  C005  F001         	movff	___fladd@a,___fladd@b
  5068  001AE6  C010  F005         	movff	___fladd@grs,___fladd@a
  5069  001AEA  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5070  001AEE  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5071  001AF2  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5072  001AF6  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5073  001AFA  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5074  001AFE  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5075  001B02  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5076  001B06  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5077  001B0A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5078  001B0E                     l3307:
  5079  001B0E  0E00               	movlw	0
  5080  001B10  6E10               	movwf	___fladd@grs^0,c
  5081  001B12  500F               	movf	___fladd@bexp^0,w,c
  5082  001B14  C00E  F009         	movff	___fladd@aexp,??___fladd
  5083  001B18  6A0A               	clrf	(??___fladd+1)^0,c
  5084  001B1A  5E09               	subwf	??___fladd^0,f,c
  5085  001B1C  0E00               	movlw	0
  5086  001B1E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5087  001B20  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5088  001B22  EF9C  F00D         	goto	u3481
  5089  001B26  500A               	movf	(??___fladd+1)^0,w,c
  5090  001B28  E109               	bnz	u3480
  5091  001B2A  0E1A               	movlw	26
  5092  001B2C  5C09               	subwf	??___fladd^0,w,c
  5093  001B2E  A0D8               	btfss	status,0,c
  5094  001B30  EF9C  F00D         	goto	u3481
  5095  001B34  EF9E  F00D         	goto	u3480
  5096  001B38                     u3481:
  5097  001B38  EFD5  F00D         	goto	l716
  5098  001B3C                     u3480:
  5099  001B3C  5001               	movf	___fladd@b^0,w,c
  5100  001B3E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5101  001B40  1003               	iorwf	(___fladd@b+2)^0,w,c
  5102  001B42  1004               	iorwf	(___fladd@b+3)^0,w,c
  5103  001B44  A4D8               	btfss	status,2,c
  5104  001B46  EFA7  F00D         	goto	u3491
  5105  001B4A  EFAA  F00D         	goto	u3490
  5106  001B4E                     u3491:
  5107  001B4E  0E01               	movlw	1
  5108  001B50  EFAB  F00D         	goto	u3500
  5109  001B54                     u3490:
  5110  001B54  0E00               	movlw	0
  5111  001B56                     u3500:
  5112  001B56  6E10               	movwf	___fladd@grs^0,c
  5113  001B58  0E00               	movlw	0
  5114  001B5A  6E01               	movwf	___fladd@b^0,c
  5115  001B5C  0E00               	movlw	0
  5116  001B5E  6E02               	movwf	(___fladd@b+1)^0,c
  5117  001B60  0E00               	movlw	0
  5118  001B62  6E03               	movwf	(___fladd@b+2)^0,c
  5119  001B64  0E00               	movlw	0
  5120  001B66  6E04               	movwf	(___fladd@b+3)^0,c
  5121  001B68  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5122  001B6C  EFDE  F00D         	goto	l715
  5123  001B70                     l717:
  5124  001B70  A010               	btfss	___fladd@grs^0,0,c
  5125  001B72  EFBD  F00D         	goto	u3511
  5126  001B76  EFBF  F00D         	goto	u3510
  5127  001B7A                     u3511:
  5128  001B7A  EFC5  F00D         	goto	l3319
  5129  001B7E                     u3510:
  5130  001B7E  90D8               	bcf	status,0,c
  5131  001B80  3010               	rrcf	___fladd@grs^0,w,c
  5132  001B82  0901               	iorlw	1
  5133  001B84  6E10               	movwf	___fladd@grs^0,c
  5134  001B86  EFC7  F00D         	goto	l3321
  5135  001B8A                     l3319:
  5136  001B8A  90D8               	bcf	status,0,c
  5137  001B8C  3210               	rrcf	___fladd@grs^0,f,c
  5138  001B8E                     l3321:
  5139  001B8E  A001               	btfss	___fladd@b^0,0,c
  5140  001B90  EFCC  F00D         	goto	u3521
  5141  001B94  EFCE  F00D         	goto	u3520
  5142  001B98                     u3521:
  5143  001B98  EFCF  F00D         	goto	l3325
  5144  001B9C                     u3520:
  5145  001B9C  8E10               	bsf	___fladd@grs^0,7,c
  5146  001B9E                     l3325:
  5147  001B9E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5148  001BA0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5149  001BA2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5150  001BA4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5151  001BA6  3201               	rrcf	___fladd@b^0,f,c
  5152  001BA8  2A0F               	incf	___fladd@bexp^0,f,c
  5153  001BAA                     l716:
  5154  001BAA  500E               	movf	___fladd@aexp^0,w,c
  5155  001BAC  5C0F               	subwf	___fladd@bexp^0,w,c
  5156  001BAE  A0D8               	btfss	status,0,c
  5157  001BB0  EFDC  F00D         	goto	u3531
  5158  001BB4  EFDE  F00D         	goto	u3530
  5159  001BB8                     u3531:
  5160  001BB8  EFB8  F00D         	goto	l717
  5161  001BBC                     u3530:
  5162  001BBC                     l715:
  5163  001BBC  BC0D               	btfsc	___fladd@signs^0,6,c
  5164  001BBE  EFE3  F00D         	goto	u3541
  5165  001BC2  EFE5  F00D         	goto	u3540
  5166  001BC6                     u3541:
  5167  001BC6  EF25  F00E         	goto	l3353
  5168  001BCA                     u3540:
  5169  001BCA  500F               	movf	___fladd@bexp^0,w,c
  5170  001BCC  A4D8               	btfss	status,2,c
  5171  001BCE  EFEB  F00D         	goto	u3551
  5172  001BD2  EFED  F00D         	goto	u3550
  5173  001BD6                     u3551:
  5174  001BD6  EFF7  F00D         	goto	l3335
  5175  001BDA                     u3550:
  5176  001BDA  0E00               	movlw	0
  5177  001BDC  6E01               	movwf	?___fladd^0,c
  5178  001BDE  0E00               	movlw	0
  5179  001BE0  6E02               	movwf	(?___fladd+1)^0,c
  5180  001BE2  0E00               	movlw	0
  5181  001BE4  6E03               	movwf	(?___fladd+2)^0,c
  5182  001BE6  0E00               	movlw	0
  5183  001BE8  6E04               	movwf	(?___fladd+3)^0,c
  5184  001BEA  EF46  F00F         	goto	l724
  5185  001BEE                     l3335:
  5186  001BEE  5005               	movf	___fladd@a^0,w,c
  5187  001BF0  2601               	addwf	___fladd@b^0,f,c
  5188  001BF2  5006               	movf	(___fladd@a+1)^0,w,c
  5189  001BF4  2202               	addwfc	(___fladd@b+1)^0,f,c
  5190  001BF6  5007               	movf	(___fladd@a+2)^0,w,c
  5191  001BF8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5192  001BFA  5008               	movf	(___fladd@a+3)^0,w,c
  5193  001BFC  2204               	addwfc	(___fladd@b+3)^0,f,c
  5194  001BFE  A004               	btfss	(___fladd@b+3)^0,0,c
  5195  001C00  EF04  F00E         	goto	u3561
  5196  001C04  EF06  F00E         	goto	u3560
  5197  001C08                     u3561:
  5198  001C08  EFB2  F00E         	goto	l3389
  5199  001C0C                     u3560:
  5200  001C0C  A010               	btfss	___fladd@grs^0,0,c
  5201  001C0E  EF0B  F00E         	goto	u3571
  5202  001C12  EF0D  F00E         	goto	u3570
  5203  001C16                     u3571:
  5204  001C16  EF13  F00E         	goto	l3343
  5205  001C1A                     u3570:
  5206  001C1A  90D8               	bcf	status,0,c
  5207  001C1C  3010               	rrcf	___fladd@grs^0,w,c
  5208  001C1E  0901               	iorlw	1
  5209  001C20  6E10               	movwf	___fladd@grs^0,c
  5210  001C22  EF15  F00E         	goto	l3345
  5211  001C26                     l3343:
  5212  001C26  90D8               	bcf	status,0,c
  5213  001C28  3210               	rrcf	___fladd@grs^0,f,c
  5214  001C2A                     l3345:
  5215  001C2A  A001               	btfss	___fladd@b^0,0,c
  5216  001C2C  EF1A  F00E         	goto	u3581
  5217  001C30  EF1C  F00E         	goto	u3580
  5218  001C34                     u3581:
  5219  001C34  EF1D  F00E         	goto	l3349
  5220  001C38                     u3580:
  5221  001C38  8E10               	bsf	___fladd@grs^0,7,c
  5222  001C3A                     l3349:
  5223  001C3A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5224  001C3C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5225  001C3E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5226  001C40  3202               	rrcf	(___fladd@b+1)^0,f,c
  5227  001C42  3201               	rrcf	___fladd@b^0,f,c
  5228  001C44  2A0F               	incf	___fladd@bexp^0,f,c
  5229  001C46  EFB2  F00E         	goto	l3389
  5230  001C4A                     l3353:
  5231  001C4A  5005               	movf	___fladd@a^0,w,c
  5232  001C4C  5C01               	subwf	___fladd@b^0,w,c
  5233  001C4E  5006               	movf	(___fladd@a+1)^0,w,c
  5234  001C50  5802               	subwfb	(___fladd@b+1)^0,w,c
  5235  001C52  5007               	movf	(___fladd@a+2)^0,w,c
  5236  001C54  5803               	subwfb	(___fladd@b+2)^0,w,c
  5237  001C56  5004               	movf	(___fladd@b+3)^0,w,c
  5238  001C58  0A80               	xorlw	128
  5239  001C5A  6E09               	movwf	??___fladd^0,c
  5240  001C5C  5008               	movf	(___fladd@a+3)^0,w,c
  5241  001C5E  0A80               	xorlw	128
  5242  001C60  5809               	subwfb	??___fladd^0,w,c
  5243  001C62  B0D8               	btfsc	status,0,c
  5244  001C64  EF36  F00E         	goto	u3591
  5245  001C68  EF38  F00E         	goto	u3590
  5246  001C6C                     u3591:
  5247  001C6C  EF63  F00E         	goto	l3363
  5248  001C70                     u3590:
  5249  001C70  5001               	movf	___fladd@b^0,w,c
  5250  001C72  5C05               	subwf	___fladd@a^0,w,c
  5251  001C74  6E09               	movwf	??___fladd^0,c
  5252  001C76  5002               	movf	(___fladd@b+1)^0,w,c
  5253  001C78  5806               	subwfb	(___fladd@a+1)^0,w,c
  5254  001C7A  6E0A               	movwf	(??___fladd+1)^0,c
  5255  001C7C  5003               	movf	(___fladd@b+2)^0,w,c
  5256  001C7E  5807               	subwfb	(___fladd@a+2)^0,w,c
  5257  001C80  6E0B               	movwf	(??___fladd+2)^0,c
  5258  001C82  5004               	movf	(___fladd@b+3)^0,w,c
  5259  001C84  5808               	subwfb	(___fladd@a+3)^0,w,c
  5260  001C86  6E0C               	movwf	(??___fladd+3)^0,c
  5261  001C88  0EFF               	movlw	255
  5262  001C8A  2409               	addwf	??___fladd^0,w,c
  5263  001C8C  6E01               	movwf	___fladd@b^0,c
  5264  001C8E  0EFF               	movlw	255
  5265  001C90  200A               	addwfc	(??___fladd+1)^0,w,c
  5266  001C92  6E02               	movwf	(___fladd@b+1)^0,c
  5267  001C94  0EFF               	movlw	255
  5268  001C96  200B               	addwfc	(??___fladd+2)^0,w,c
  5269  001C98  6E03               	movwf	(___fladd@b+2)^0,c
  5270  001C9A  0EFF               	movlw	255
  5271  001C9C  200C               	addwfc	(??___fladd+3)^0,w,c
  5272  001C9E  6E04               	movwf	(___fladd@b+3)^0,c
  5273  001CA0  0E80               	movlw	128
  5274  001CA2  1A0D               	xorwf	___fladd@signs^0,f,c
  5275  001CA4  6C10               	negf	___fladd@grs^0,c
  5276  001CA6  5010               	movf	___fladd@grs^0,w,c
  5277  001CA8  A4D8               	btfss	status,2,c
  5278  001CAA  EF59  F00E         	goto	u3601
  5279  001CAE  EF5B  F00E         	goto	u3600
  5280  001CB2                     u3601:
  5281  001CB2  EF6B  F00E         	goto	l732
  5282  001CB6                     u3600:
  5283  001CB6  0E01               	movlw	1
  5284  001CB8  2601               	addwf	___fladd@b^0,f,c
  5285  001CBA  0E00               	movlw	0
  5286  001CBC  2202               	addwfc	(___fladd@b+1)^0,f,c
  5287  001CBE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5288  001CC0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5289  001CC2  EF6B  F00E         	goto	l732
  5290  001CC6                     l3363:
  5291  001CC6  5005               	movf	___fladd@a^0,w,c
  5292  001CC8  5E01               	subwf	___fladd@b^0,f,c
  5293  001CCA  5006               	movf	(___fladd@a+1)^0,w,c
  5294  001CCC  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5295  001CCE  5007               	movf	(___fladd@a+2)^0,w,c
  5296  001CD0  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5297  001CD2  5008               	movf	(___fladd@a+3)^0,w,c
  5298  001CD4  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5299  001CD6                     l732:
  5300  001CD6  5001               	movf	___fladd@b^0,w,c
  5301  001CD8  1002               	iorwf	(___fladd@b+1)^0,w,c
  5302  001CDA  1003               	iorwf	(___fladd@b+2)^0,w,c
  5303  001CDC  1004               	iorwf	(___fladd@b+3)^0,w,c
  5304  001CDE  A4D8               	btfss	status,2,c
  5305  001CE0  EF74  F00E         	goto	u3611
  5306  001CE4  EF76  F00E         	goto	u3610
  5307  001CE8                     u3611:
  5308  001CE8  EFAB  F00E         	goto	l3387
  5309  001CEC                     u3610:
  5310  001CEC  5010               	movf	___fladd@grs^0,w,c
  5311  001CEE  A4D8               	btfss	status,2,c
  5312  001CF0  EF7C  F00E         	goto	u3621
  5313  001CF4  EF7E  F00E         	goto	u3620
  5314  001CF8                     u3621:
  5315  001CF8  EFAB  F00E         	goto	l3387
  5316  001CFC                     u3620:
  5317  001CFC  0E00               	movlw	0
  5318  001CFE  6E01               	movwf	?___fladd^0,c
  5319  001D00  0E00               	movlw	0
  5320  001D02  6E02               	movwf	(?___fladd+1)^0,c
  5321  001D04  0E00               	movlw	0
  5322  001D06  6E03               	movwf	(?___fladd+2)^0,c
  5323  001D08  0E00               	movlw	0
  5324  001D0A  6E04               	movwf	(?___fladd+3)^0,c
  5325  001D0C  EF46  F00F         	goto	l724
  5326  001D10                     l3371:
  5327  001D10  90D8               	bcf	status,0,c
  5328  001D12  3601               	rlcf	___fladd@b^0,f,c
  5329  001D14  3602               	rlcf	(___fladd@b+1)^0,f,c
  5330  001D16  3603               	rlcf	(___fladd@b+2)^0,f,c
  5331  001D18  3604               	rlcf	(___fladd@b+3)^0,f,c
  5332  001D1A  AE10               	btfss	___fladd@grs^0,7,c
  5333  001D1C  EF92  F00E         	goto	u3631
  5334  001D20  EF94  F00E         	goto	u3630
  5335  001D24                     u3631:
  5336  001D24  EF95  F00E         	goto	l3377
  5337  001D28                     u3630:
  5338  001D28  8001               	bsf	___fladd@b^0,0,c
  5339  001D2A                     l3377:
  5340  001D2A  A010               	btfss	___fladd@grs^0,0,c
  5341  001D2C  EF9A  F00E         	goto	u3641
  5342  001D30  EF9C  F00E         	goto	u3640
  5343  001D34                     u3641:
  5344  001D34  EFA0  F00E         	goto	l3381
  5345  001D38                     u3640:
  5346  001D38  80D8               	bsf	status,0,c
  5347  001D3A  3610               	rlcf	___fladd@grs^0,f,c
  5348  001D3C  EFA2  F00E         	goto	l3383
  5349  001D40                     l3381:
  5350  001D40  90D8               	bcf	status,0,c
  5351  001D42  3610               	rlcf	___fladd@grs^0,f,c
  5352  001D44                     l3383:
  5353  001D44  500F               	movf	___fladd@bexp^0,w,c
  5354  001D46  B4D8               	btfsc	status,2,c
  5355  001D48  EFA8  F00E         	goto	u3651
  5356  001D4C  EFAA  F00E         	goto	u3650
  5357  001D50                     u3651:
  5358  001D50  EFAB  F00E         	goto	l3387
  5359  001D54                     u3650:
  5360  001D54  060F               	decf	___fladd@bexp^0,f,c
  5361  001D56                     l3387:
  5362  001D56  AE03               	btfss	(___fladd@b+2)^0,7,c
  5363  001D58  EFB0  F00E         	goto	u3661
  5364  001D5C  EFB2  F00E         	goto	u3660
  5365  001D60                     u3661:
  5366  001D60  EF88  F00E         	goto	l3371
  5367  001D64                     u3660:
  5368  001D64                     l3389:
  5369  001D64  0E00               	movlw	0
  5370  001D66  6E0E               	movwf	___fladd@aexp^0,c
  5371  001D68  AE10               	btfss	___fladd@grs^0,7,c
  5372  001D6A  EFB9  F00E         	goto	u3671
  5373  001D6E  EFBB  F00E         	goto	u3670
  5374  001D72                     u3671:
  5375  001D72  EFD3  F00E         	goto	l741
  5376  001D76                     u3670:
  5377  001D76  C010  F009         	movff	___fladd@grs,??___fladd
  5378  001D7A  0E7F               	movlw	127
  5379  001D7C  1609               	andwf	??___fladd^0,f,c
  5380  001D7E  B4D8               	btfsc	status,2,c
  5381  001D80  EFC4  F00E         	goto	u3681
  5382  001D84  EFC6  F00E         	goto	u3680
  5383  001D88                     u3681:
  5384  001D88  EFCA  F00E         	goto	l742
  5385  001D8C                     u3680:
  5386  001D8C                     l3395:
  5387  001D8C  0E01               	movlw	1
  5388  001D8E  6E0E               	movwf	___fladd@aexp^0,c
  5389  001D90  EFD3  F00E         	goto	l741
  5390  001D94                     l742:
  5391  001D94  A001               	btfss	___fladd@b^0,0,c
  5392  001D96  EFCF  F00E         	goto	u3691
  5393  001D9A  EFD1  F00E         	goto	u3690
  5394  001D9E                     u3691:
  5395  001D9E  EFD3  F00E         	goto	l741
  5396  001DA2                     u3690:
  5397  001DA2  EFC6  F00E         	goto	l3395
  5398  001DA6                     l741:
  5399  001DA6  500E               	movf	___fladd@aexp^0,w,c
  5400  001DA8  B4D8               	btfsc	status,2,c
  5401  001DAA  EFD9  F00E         	goto	u3701
  5402  001DAE  EFDB  F00E         	goto	u3700
  5403  001DB2                     u3701:
  5404  001DB2  EF06  F00F         	goto	l3407
  5405  001DB6                     u3700:
  5406  001DB6  0E01               	movlw	1
  5407  001DB8  2601               	addwf	___fladd@b^0,f,c
  5408  001DBA  0E00               	movlw	0
  5409  001DBC  2202               	addwfc	(___fladd@b+1)^0,f,c
  5410  001DBE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5411  001DC0  2204               	addwfc	(___fladd@b+3)^0,f,c
  5412  001DC2  A004               	btfss	(___fladd@b+3)^0,0,c
  5413  001DC4  EFE6  F00E         	goto	u3711
  5414  001DC8  EFE8  F00E         	goto	u3710
  5415  001DCC                     u3711:
  5416  001DCC  EF06  F00F         	goto	l3407
  5417  001DD0                     u3710:
  5418  001DD0  C001  F009         	movff	___fladd@b,??___fladd
  5419  001DD4  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5420  001DD8  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5421  001DDC  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5422  001DE0  340C               	rlcf	(??___fladd+3)^0,w,c
  5423  001DE2  320C               	rrcf	(??___fladd+3)^0,f,c
  5424  001DE4  320B               	rrcf	(??___fladd+2)^0,f,c
  5425  001DE6  320A               	rrcf	(??___fladd+1)^0,f,c
  5426  001DE8  3209               	rrcf	??___fladd^0,f,c
  5427  001DEA  C009  F001         	movff	??___fladd,___fladd@b
  5428  001DEE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5429  001DF2  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5430  001DF6  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5431  001DFA  280F               	incf	___fladd@bexp^0,w,c
  5432  001DFC  B4D8               	btfsc	status,2,c
  5433  001DFE  EF03  F00F         	goto	u3721
  5434  001E02  EF05  F00F         	goto	u3720
  5435  001E06                     u3721:
  5436  001E06  EF06  F00F         	goto	l3407
  5437  001E0A                     u3720:
  5438  001E0A  2A0F               	incf	___fladd@bexp^0,f,c
  5439  001E0C                     l3407:
  5440  001E0C  280F               	incf	___fladd@bexp^0,w,c
  5441  001E0E  B4D8               	btfsc	status,2,c
  5442  001E10  EF0C  F00F         	goto	u3731
  5443  001E14  EF0E  F00F         	goto	u3730
  5444  001E18                     u3731:
  5445  001E18  EF16  F00F         	goto	l3411
  5446  001E1C                     u3730:
  5447  001E1C  500F               	movf	___fladd@bexp^0,w,c
  5448  001E1E  A4D8               	btfss	status,2,c
  5449  001E20  EF14  F00F         	goto	u3741
  5450  001E24  EF16  F00F         	goto	u3740
  5451  001E28                     u3741:
  5452  001E28  EF28  F00F         	goto	l3415
  5453  001E2C                     u3740:
  5454  001E2C                     l3411:
  5455  001E2C  0E00               	movlw	0
  5456  001E2E  6E01               	movwf	___fladd@b^0,c
  5457  001E30  0E00               	movlw	0
  5458  001E32  6E02               	movwf	(___fladd@b+1)^0,c
  5459  001E34  0E00               	movlw	0
  5460  001E36  6E03               	movwf	(___fladd@b+2)^0,c
  5461  001E38  0E00               	movlw	0
  5462  001E3A  6E04               	movwf	(___fladd@b+3)^0,c
  5463  001E3C  500F               	movf	___fladd@bexp^0,w,c
  5464  001E3E  A4D8               	btfss	status,2,c
  5465  001E40  EF24  F00F         	goto	u3751
  5466  001E44  EF26  F00F         	goto	u3750
  5467  001E48                     u3751:
  5468  001E48  EF28  F00F         	goto	l3415
  5469  001E4C                     u3750:
  5470  001E4C  0E00               	movlw	0
  5471  001E4E  6E0D               	movwf	___fladd@signs^0,c
  5472  001E50                     l3415:
  5473  001E50  A00F               	btfss	___fladd@bexp^0,0,c
  5474  001E52  EF2D  F00F         	goto	u3761
  5475  001E56  EF2F  F00F         	goto	u3760
  5476  001E5A                     u3761:
  5477  001E5A  EF32  F00F         	goto	l3419
  5478  001E5E                     u3760:
  5479  001E5E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5480  001E60  EF33  F00F         	goto	l3421
  5481  001E64                     l3419:
  5482  001E64  9E03               	bcf	(___fladd@b+2)^0,7,c
  5483  001E66                     l3421:
  5484  001E66  90D8               	bcf	status,0,c
  5485  001E68  300F               	rrcf	___fladd@bexp^0,w,c
  5486  001E6A  6E04               	movwf	(___fladd@b+3)^0,c
  5487  001E6C  AE0D               	btfss	___fladd@signs^0,7,c
  5488  001E6E  EF3B  F00F         	goto	u3771
  5489  001E72  EF3D  F00F         	goto	u3770
  5490  001E76                     u3771:
  5491  001E76  EF3E  F00F         	goto	l3427
  5492  001E7A                     u3770:
  5493  001E7A  8E04               	bsf	(___fladd@b+3)^0,7,c
  5494  001E7C                     l3427:
  5495  001E7C  C001  F001         	movff	___fladd@b,?___fladd
  5496  001E80  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5497  001E84  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5498  001E88  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5499  001E8C                     l724:
  5500  001E8C  0012               	return		;funcret
  5501  001E8E                     __end_of___fladd:
  5502                           	callstack 0
  5503                           
  5504 ;; *************** function ___flneg *****************
  5505 ;; Defined at:
  5506 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  f1              4    0[COMRAM] unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;		None
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  4    0[COMRAM] unsigned char 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5520 ;;      Params:         4       0       0       0       0       0       0       0       0
  5521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5523 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5524 ;;Total ram usage:        4 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; This function calls:
  5527 ;;		Nothing
  5528 ;; This function is called by:
  5529 ;;		_efgtoa
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           	psect	text14
  5534  004688                     __ptext14:
  5535                           	callstack 0
  5536  004688                     ___flneg:
  5537                           	callstack 26
  5538  004688  5001               	movf	___flneg@f1^0,w,c
  5539  00468A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5540  00468C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5541  00468E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5542  004690  B4D8               	btfsc	status,2,c
  5543  004692  EF4D  F023         	goto	u4571
  5544  004696  EF4F  F023         	goto	u4570
  5545  00469A                     u4571:
  5546  00469A  EF57  F023         	goto	l3935
  5547  00469E                     u4570:
  5548  00469E  0E00               	movlw	0
  5549  0046A0  1A01               	xorwf	___flneg@f1^0,f,c
  5550  0046A2  0E00               	movlw	0
  5551  0046A4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5552  0046A6  0E00               	movlw	0
  5553  0046A8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5554  0046AA  0E80               	movlw	128
  5555  0046AC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5556  0046AE                     l3935:
  5557  0046AE  C001  F001         	movff	___flneg@f1,?___flneg
  5558  0046B2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5559  0046B6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5560  0046BA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5561  0046BE  0012               	return		;funcret
  5562  0046C0                     __end_of___flneg:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function ___flmul *****************
  5566 ;; Defined at:
  5567 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  b               4    0[COMRAM] unsigned char 
  5570 ;;  a               4    4[COMRAM] unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  prod            4   19[COMRAM] struct .
  5573 ;;  grs             4   13[COMRAM] unsigned long 
  5574 ;;  temp            2   23[COMRAM] struct .
  5575 ;;  bexp            1   18[COMRAM] unsigned char 
  5576 ;;  aexp            1   17[COMRAM] unsigned char 
  5577 ;;  sign            1   12[COMRAM] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  4    0[COMRAM] unsigned char 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0, prodl, prodh
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5587 ;;      Params:         8       0       0       0       0       0       0       0       0
  5588 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5589 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5590 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5591 ;;Total ram usage:       25 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_efgtoa
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text15
  5601  001E8E                     __ptext15:
  5602                           	callstack 0
  5603  001E8E                     ___flmul:
  5604                           	callstack 26
  5605  001E8E  5004               	movf	(___flmul@b+3)^0,w,c
  5606  001E90  0B80               	andlw	128
  5607  001E92  6E0D               	movwf	___flmul@sign^0,c
  5608  001E94  5004               	movf	(___flmul@b+3)^0,w,c
  5609  001E96  2404               	addwf	(___flmul@b+3)^0,w,c
  5610  001E98  6E13               	movwf	___flmul@bexp^0,c
  5611  001E9A  AE03               	btfss	(___flmul@b+2)^0,7,c
  5612  001E9C  EF52  F00F         	goto	u4181
  5613  001EA0  EF54  F00F         	goto	u4180
  5614  001EA4                     u4181:
  5615  001EA4  EF55  F00F         	goto	l3683
  5616  001EA8                     u4180:
  5617  001EA8  8013               	bsf	___flmul@bexp^0,0,c
  5618  001EAA                     l3683:
  5619  001EAA  5013               	movf	___flmul@bexp^0,w,c
  5620  001EAC  B4D8               	btfsc	status,2,c
  5621  001EAE  EF5B  F00F         	goto	u4191
  5622  001EB2  EF5D  F00F         	goto	u4190
  5623  001EB6                     u4191:
  5624  001EB6  EF70  F00F         	goto	l3691
  5625  001EBA                     u4190:
  5626  001EBA  2813               	incf	___flmul@bexp^0,w,c
  5627  001EBC  A4D8               	btfss	status,2,c
  5628  001EBE  EF63  F00F         	goto	u4201
  5629  001EC2  EF65  F00F         	goto	u4200
  5630  001EC6                     u4201:
  5631  001EC6  EF6D  F00F         	goto	l3689
  5632  001ECA                     u4200:
  5633  001ECA  0E00               	movlw	0
  5634  001ECC  6E01               	movwf	___flmul@b^0,c
  5635  001ECE  0E00               	movlw	0
  5636  001ED0  6E02               	movwf	(___flmul@b+1)^0,c
  5637  001ED2  0E00               	movlw	0
  5638  001ED4  6E03               	movwf	(___flmul@b+2)^0,c
  5639  001ED6  0E00               	movlw	0
  5640  001ED8  6E04               	movwf	(___flmul@b+3)^0,c
  5641  001EDA                     l3689:
  5642  001EDA  8E03               	bsf	(___flmul@b+2)^0,7,c
  5643  001EDC  EF78  F00F         	goto	l3693
  5644  001EE0                     l3691:
  5645  001EE0  0E00               	movlw	0
  5646  001EE2  6E01               	movwf	___flmul@b^0,c
  5647  001EE4  0E00               	movlw	0
  5648  001EE6  6E02               	movwf	(___flmul@b+1)^0,c
  5649  001EE8  0E00               	movlw	0
  5650  001EEA  6E03               	movwf	(___flmul@b+2)^0,c
  5651  001EEC  0E00               	movlw	0
  5652  001EEE  6E04               	movwf	(___flmul@b+3)^0,c
  5653  001EF0                     l3693:
  5654  001EF0  5008               	movf	(___flmul@a+3)^0,w,c
  5655  001EF2  0B80               	andlw	128
  5656  001EF4  1A0D               	xorwf	___flmul@sign^0,f,c
  5657  001EF6  5008               	movf	(___flmul@a+3)^0,w,c
  5658  001EF8  2408               	addwf	(___flmul@a+3)^0,w,c
  5659  001EFA  6E12               	movwf	___flmul@aexp^0,c
  5660  001EFC  AE07               	btfss	(___flmul@a+2)^0,7,c
  5661  001EFE  EF83  F00F         	goto	u4211
  5662  001F02  EF85  F00F         	goto	u4210
  5663  001F06                     u4211:
  5664  001F06  EF86  F00F         	goto	l3701
  5665  001F0A                     u4210:
  5666  001F0A  8012               	bsf	___flmul@aexp^0,0,c
  5667  001F0C                     l3701:
  5668  001F0C  5012               	movf	___flmul@aexp^0,w,c
  5669  001F0E  B4D8               	btfsc	status,2,c
  5670  001F10  EF8C  F00F         	goto	u4221
  5671  001F14  EF8E  F00F         	goto	u4220
  5672  001F18                     u4221:
  5673  001F18  EFA1  F00F         	goto	l3709
  5674  001F1C                     u4220:
  5675  001F1C  2812               	incf	___flmul@aexp^0,w,c
  5676  001F1E  A4D8               	btfss	status,2,c
  5677  001F20  EF94  F00F         	goto	u4231
  5678  001F24  EF96  F00F         	goto	u4230
  5679  001F28                     u4231:
  5680  001F28  EF9E  F00F         	goto	l3707
  5681  001F2C                     u4230:
  5682  001F2C  0E00               	movlw	0
  5683  001F2E  6E05               	movwf	___flmul@a^0,c
  5684  001F30  0E00               	movlw	0
  5685  001F32  6E06               	movwf	(___flmul@a+1)^0,c
  5686  001F34  0E00               	movlw	0
  5687  001F36  6E07               	movwf	(___flmul@a+2)^0,c
  5688  001F38  0E00               	movlw	0
  5689  001F3A  6E08               	movwf	(___flmul@a+3)^0,c
  5690  001F3C                     l3707:
  5691  001F3C  8E07               	bsf	(___flmul@a+2)^0,7,c
  5692  001F3E  EFA9  F00F         	goto	l801
  5693  001F42                     l3709:
  5694  001F42  0E00               	movlw	0
  5695  001F44  6E05               	movwf	___flmul@a^0,c
  5696  001F46  0E00               	movlw	0
  5697  001F48  6E06               	movwf	(___flmul@a+1)^0,c
  5698  001F4A  0E00               	movlw	0
  5699  001F4C  6E07               	movwf	(___flmul@a+2)^0,c
  5700  001F4E  0E00               	movlw	0
  5701  001F50  6E08               	movwf	(___flmul@a+3)^0,c
  5702  001F52                     l801:
  5703  001F52  5012               	movf	___flmul@aexp^0,w,c
  5704  001F54  B4D8               	btfsc	status,2,c
  5705  001F56  EFAF  F00F         	goto	u4241
  5706  001F5A  EFB1  F00F         	goto	u4240
  5707  001F5E                     u4241:
  5708  001F5E  EFB9  F00F         	goto	l3713
  5709  001F62                     u4240:
  5710  001F62  5013               	movf	___flmul@bexp^0,w,c
  5711  001F64  A4D8               	btfss	status,2,c
  5712  001F66  EFB7  F00F         	goto	u4251
  5713  001F6A  EFB9  F00F         	goto	u4250
  5714  001F6E                     u4251:
  5715  001F6E  EFC3  F00F         	goto	l3717
  5716  001F72                     u4250:
  5717  001F72                     l3713:
  5718  001F72  0E00               	movlw	0
  5719  001F74  6E01               	movwf	?___flmul^0,c
  5720  001F76  0E00               	movlw	0
  5721  001F78  6E02               	movwf	(?___flmul+1)^0,c
  5722  001F7A  0E00               	movlw	0
  5723  001F7C  6E03               	movwf	(?___flmul+2)^0,c
  5724  001F7E  0E00               	movlw	0
  5725  001F80  6E04               	movwf	(?___flmul+3)^0,c
  5726  001F82  EF5B  F011         	goto	l805
  5727  001F86                     l3717:
  5728  001F86  5007               	movf	(___flmul@a+2)^0,w,c
  5729  001F88  0201               	mulwf	___flmul@b^0,c
  5730  001F8A  CFF3 F018          	movff	prodl,___flmul@temp
  5731  001F8E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5732  001F92  5018               	movf	___flmul@temp^0,w,c
  5733  001F94  6E0E               	movwf	___flmul@grs^0,c
  5734  001F96  6A0F               	clrf	(___flmul@grs+1)^0,c
  5735  001F98  6A10               	clrf	(___flmul@grs+2)^0,c
  5736  001F9A  6A11               	clrf	(___flmul@grs+3)^0,c
  5737  001F9C  5019               	movf	(___flmul@temp+1)^0,w,c
  5738  001F9E  6E14               	movwf	___flmul@prod^0,c
  5739  001FA0  6A15               	clrf	(___flmul@prod+1)^0,c
  5740  001FA2  6A16               	clrf	(___flmul@prod+2)^0,c
  5741  001FA4  6A17               	clrf	(___flmul@prod+3)^0,c
  5742  001FA6  5006               	movf	(___flmul@a+1)^0,w,c
  5743  001FA8  0202               	mulwf	(___flmul@b+1)^0,c
  5744  001FAA  CFF3 F018          	movff	prodl,___flmul@temp
  5745  001FAE  CFF4 F019          	movff	prodh,___flmul@temp+1
  5746  001FB2  5018               	movf	___flmul@temp^0,w,c
  5747  001FB4  260E               	addwf	___flmul@grs^0,f,c
  5748  001FB6  0E00               	movlw	0
  5749  001FB8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5750  001FBA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5751  001FBC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5752  001FBE  5019               	movf	(___flmul@temp+1)^0,w,c
  5753  001FC0  2614               	addwf	___flmul@prod^0,f,c
  5754  001FC2  0E00               	movlw	0
  5755  001FC4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5756  001FC6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5757  001FC8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5758  001FCA  5005               	movf	___flmul@a^0,w,c
  5759  001FCC  0203               	mulwf	(___flmul@b+2)^0,c
  5760  001FCE  CFF3 F018          	movff	prodl,___flmul@temp
  5761  001FD2  CFF4 F019          	movff	prodh,___flmul@temp+1
  5762  001FD6  5018               	movf	___flmul@temp^0,w,c
  5763  001FD8  260E               	addwf	___flmul@grs^0,f,c
  5764  001FDA  0E00               	movlw	0
  5765  001FDC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5766  001FDE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5767  001FE0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5768  001FE2  5019               	movf	(___flmul@temp+1)^0,w,c
  5769  001FE4  2614               	addwf	___flmul@prod^0,f,c
  5770  001FE6  0E00               	movlw	0
  5771  001FE8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5772  001FEA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5773  001FEC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5774  001FEE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5775  001FF2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5776  001FF6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5777  001FFA  6A0E               	clrf	___flmul@grs^0,c
  5778  001FFC  5005               	movf	___flmul@a^0,w,c
  5779  001FFE  0202               	mulwf	(___flmul@b+1)^0,c
  5780  002000  CFF3 F018          	movff	prodl,___flmul@temp
  5781  002004  CFF4 F019          	movff	prodh,___flmul@temp+1
  5782  002008  5018               	movf	___flmul@temp^0,w,c
  5783  00200A  260E               	addwf	___flmul@grs^0,f,c
  5784  00200C  5019               	movf	(___flmul@temp+1)^0,w,c
  5785  00200E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5786  002010  0E00               	movlw	0
  5787  002012  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5788  002014  0E00               	movlw	0
  5789  002016  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5790  002018  5006               	movf	(___flmul@a+1)^0,w,c
  5791  00201A  0201               	mulwf	___flmul@b^0,c
  5792  00201C  CFF3 F018          	movff	prodl,___flmul@temp
  5793  002020  CFF4 F019          	movff	prodh,___flmul@temp+1
  5794  002024  5018               	movf	___flmul@temp^0,w,c
  5795  002026  260E               	addwf	___flmul@grs^0,f,c
  5796  002028  5019               	movf	(___flmul@temp+1)^0,w,c
  5797  00202A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5798  00202C  0E00               	movlw	0
  5799  00202E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5800  002030  0E00               	movlw	0
  5801  002032  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5802  002034  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5803  002038  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5804  00203C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5805  002040  6A0E               	clrf	___flmul@grs^0,c
  5806  002042  5005               	movf	___flmul@a^0,w,c
  5807  002044  0201               	mulwf	___flmul@b^0,c
  5808  002046  CFF3 F018          	movff	prodl,___flmul@temp
  5809  00204A  CFF4 F019          	movff	prodh,___flmul@temp+1
  5810  00204E  5018               	movf	___flmul@temp^0,w,c
  5811  002050  260E               	addwf	___flmul@grs^0,f,c
  5812  002052  5019               	movf	(___flmul@temp+1)^0,w,c
  5813  002054  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5814  002056  0E00               	movlw	0
  5815  002058  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5816  00205A  0E00               	movlw	0
  5817  00205C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5818  00205E  5007               	movf	(___flmul@a+2)^0,w,c
  5819  002060  0202               	mulwf	(___flmul@b+1)^0,c
  5820  002062  CFF3 F018          	movff	prodl,___flmul@temp
  5821  002066  CFF4 F019          	movff	prodh,___flmul@temp+1
  5822  00206A  5018               	movf	___flmul@temp^0,w,c
  5823  00206C  2614               	addwf	___flmul@prod^0,f,c
  5824  00206E  5019               	movf	(___flmul@temp+1)^0,w,c
  5825  002070  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5826  002072  0E00               	movlw	0
  5827  002074  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5828  002076  0E00               	movlw	0
  5829  002078  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5830  00207A  5006               	movf	(___flmul@a+1)^0,w,c
  5831  00207C  0203               	mulwf	(___flmul@b+2)^0,c
  5832  00207E  CFF3 F018          	movff	prodl,___flmul@temp
  5833  002082  CFF4 F019          	movff	prodh,___flmul@temp+1
  5834  002086  5018               	movf	___flmul@temp^0,w,c
  5835  002088  2614               	addwf	___flmul@prod^0,f,c
  5836  00208A  5019               	movf	(___flmul@temp+1)^0,w,c
  5837  00208C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5838  00208E  0E00               	movlw	0
  5839  002090  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5840  002092  0E00               	movlw	0
  5841  002094  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5842  002096  5007               	movf	(___flmul@a+2)^0,w,c
  5843  002098  0203               	mulwf	(___flmul@b+2)^0,c
  5844  00209A  CFF3 F018          	movff	prodl,___flmul@temp
  5845  00209E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5846  0020A2  5018               	movf	___flmul@temp^0,w,c
  5847  0020A4  6E09               	movwf	??___flmul^0,c
  5848  0020A6  5019               	movf	(___flmul@temp+1)^0,w,c
  5849  0020A8  6E0A               	movwf	(??___flmul+1)^0,c
  5850  0020AA  6A0B               	clrf	(??___flmul+2)^0,c
  5851  0020AC  6A0C               	clrf	(??___flmul+3)^0,c
  5852  0020AE  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5853  0020B2  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5854  0020B6  C009  F00A         	movff	??___flmul,??___flmul+1
  5855  0020BA  6A09               	clrf	??___flmul^0,c
  5856  0020BC  5009               	movf	??___flmul^0,w,c
  5857  0020BE  2614               	addwf	___flmul@prod^0,f,c
  5858  0020C0  500A               	movf	(??___flmul+1)^0,w,c
  5859  0020C2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5860  0020C4  500B               	movf	(??___flmul+2)^0,w,c
  5861  0020C6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5862  0020C8  500C               	movf	(??___flmul+3)^0,w,c
  5863  0020CA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5864  0020CC  C00E  F009         	movff	___flmul@grs,??___flmul
  5865  0020D0  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5866  0020D4  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5867  0020D8  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5868  0020DC  0E19               	movlw	25
  5869  0020DE  EF76  F010         	goto	u4260
  5870  0020E2                     u4265:
  5871  0020E2  90D8               	bcf	status,0,c
  5872  0020E4  320C               	rrcf	(??___flmul+3)^0,f,c
  5873  0020E6  320B               	rrcf	(??___flmul+2)^0,f,c
  5874  0020E8  320A               	rrcf	(??___flmul+1)^0,f,c
  5875  0020EA  3209               	rrcf	??___flmul^0,f,c
  5876  0020EC                     u4260:
  5877  0020EC  2EE8               	decfsz	wreg,f,c
  5878  0020EE  EF71  F010         	goto	u4265
  5879  0020F2  5009               	movf	??___flmul^0,w,c
  5880  0020F4  2614               	addwf	___flmul@prod^0,f,c
  5881  0020F6  500A               	movf	(??___flmul+1)^0,w,c
  5882  0020F8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5883  0020FA  500B               	movf	(??___flmul+2)^0,w,c
  5884  0020FC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5885  0020FE  500C               	movf	(??___flmul+3)^0,w,c
  5886  002100  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5887  002102  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5888  002106  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5889  00210A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5890  00210E  6A0E               	clrf	___flmul@grs^0,c
  5891  002110  5012               	movf	___flmul@aexp^0,w,c
  5892  002112  C013  F009         	movff	___flmul@bexp,??___flmul
  5893  002116  6A0A               	clrf	(??___flmul+1)^0,c
  5894  002118  2609               	addwf	??___flmul^0,f,c
  5895  00211A  0E00               	movlw	0
  5896  00211C  220A               	addwfc	(??___flmul+1)^0,f,c
  5897  00211E  0E82               	movlw	130
  5898  002120  2409               	addwf	??___flmul^0,w,c
  5899  002122  6E18               	movwf	___flmul@temp^0,c
  5900  002124  0EFF               	movlw	255
  5901  002126  200A               	addwfc	(??___flmul+1)^0,w,c
  5902  002128  6E19               	movwf	(___flmul@temp+1)^0,c
  5903  00212A  EFAC  F010         	goto	l3765
  5904  00212E                     l3759:
  5905  00212E  90D8               	bcf	status,0,c
  5906  002130  3614               	rlcf	___flmul@prod^0,f,c
  5907  002132  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5908  002134  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5909  002136  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5910  002138  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5911  00213A  EFA1  F010         	goto	u4271
  5912  00213E  EFA3  F010         	goto	u4270
  5913  002142                     u4271:
  5914  002142  EFA4  F010         	goto	l808
  5915  002146                     u4270:
  5916  002146  8014               	bsf	___flmul@prod^0,0,c
  5917  002148                     l808:
  5918  002148  90D8               	bcf	status,0,c
  5919  00214A  360E               	rlcf	___flmul@grs^0,f,c
  5920  00214C  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5921  00214E  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5922  002150  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5923  002152  0618               	decf	___flmul@temp^0,f,c
  5924  002154  A0D8               	btfss	status,0,c
  5925  002156  0619               	decf	(___flmul@temp+1)^0,f,c
  5926  002158                     l3765:
  5927  002158  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5928  00215A  EFB1  F010         	goto	u4281
  5929  00215E  EFB3  F010         	goto	u4280
  5930  002162                     u4281:
  5931  002162  EF97  F010         	goto	l3759
  5932  002166                     u4280:
  5933  002166  0E00               	movlw	0
  5934  002168  6E12               	movwf	___flmul@aexp^0,c
  5935  00216A  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5936  00216C  EFBA  F010         	goto	u4291
  5937  002170  EFBC  F010         	goto	u4290
  5938  002174                     u4291:
  5939  002174  EFE0  F010         	goto	l810
  5940  002178                     u4290:
  5941  002178  0EFF               	movlw	255
  5942  00217A  140E               	andwf	___flmul@grs^0,w,c
  5943  00217C  6E09               	movwf	??___flmul^0,c
  5944  00217E  0EFF               	movlw	255
  5945  002180  140F               	andwf	(___flmul@grs+1)^0,w,c
  5946  002182  6E0A               	movwf	(??___flmul+1)^0,c
  5947  002184  0EFF               	movlw	255
  5948  002186  1410               	andwf	(___flmul@grs+2)^0,w,c
  5949  002188  6E0B               	movwf	(??___flmul+2)^0,c
  5950  00218A  0E7F               	movlw	127
  5951  00218C  1411               	andwf	(___flmul@grs+3)^0,w,c
  5952  00218E  6E0C               	movwf	(??___flmul+3)^0,c
  5953  002190  5009               	movf	??___flmul^0,w,c
  5954  002192  100A               	iorwf	(??___flmul+1)^0,w,c
  5955  002194  100B               	iorwf	(??___flmul+2)^0,w,c
  5956  002196  100C               	iorwf	(??___flmul+3)^0,w,c
  5957  002198  B4D8               	btfsc	status,2,c
  5958  00219A  EFD1  F010         	goto	u4301
  5959  00219E  EFD3  F010         	goto	u4300
  5960  0021A2                     u4301:
  5961  0021A2  EFD7  F010         	goto	l811
  5962  0021A6                     u4300:
  5963  0021A6                     l3773:
  5964  0021A6  0E01               	movlw	1
  5965  0021A8  6E12               	movwf	___flmul@aexp^0,c
  5966  0021AA  EFE0  F010         	goto	l810
  5967  0021AE                     l811:
  5968  0021AE  A014               	btfss	___flmul@prod^0,0,c
  5969  0021B0  EFDC  F010         	goto	u4311
  5970  0021B4  EFDE  F010         	goto	u4310
  5971  0021B8                     u4311:
  5972  0021B8  EFE0  F010         	goto	l810
  5973  0021BC                     u4310:
  5974  0021BC  EFD3  F010         	goto	l3773
  5975  0021C0                     l810:
  5976  0021C0  5012               	movf	___flmul@aexp^0,w,c
  5977  0021C2  B4D8               	btfsc	status,2,c
  5978  0021C4  EFE6  F010         	goto	u4321
  5979  0021C8  EFE8  F010         	goto	u4320
  5980  0021CC                     u4321:
  5981  0021CC  EF0C  F011         	goto	l3785
  5982  0021D0                     u4320:
  5983  0021D0  0E01               	movlw	1
  5984  0021D2  2614               	addwf	___flmul@prod^0,f,c
  5985  0021D4  0E00               	movlw	0
  5986  0021D6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5987  0021D8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5988  0021DA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5989  0021DC  A017               	btfss	(___flmul@prod+3)^0,0,c
  5990  0021DE  EFF3  F010         	goto	u4331
  5991  0021E2  EFF5  F010         	goto	u4330
  5992  0021E6                     u4331:
  5993  0021E6  EF0C  F011         	goto	l3785
  5994  0021EA                     u4330:
  5995  0021EA  C014  F009         	movff	___flmul@prod,??___flmul
  5996  0021EE  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5997  0021F2  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5998  0021F6  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5999  0021FA  340C               	rlcf	(??___flmul+3)^0,w,c
  6000  0021FC  320C               	rrcf	(??___flmul+3)^0,f,c
  6001  0021FE  320B               	rrcf	(??___flmul+2)^0,f,c
  6002  002200  320A               	rrcf	(??___flmul+1)^0,f,c
  6003  002202  3209               	rrcf	??___flmul^0,f,c
  6004  002204  C009  F014         	movff	??___flmul,___flmul@prod
  6005  002208  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6006  00220C  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6007  002210  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6008  002214  4A18               	infsnz	___flmul@temp^0,f,c
  6009  002216  2A19               	incf	(___flmul@temp+1)^0,f,c
  6010  002218                     l3785:
  6011  002218  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6012  00221A  EF17  F011         	goto	u4341
  6013  00221E  5019               	movf	(___flmul@temp+1)^0,w,c
  6014  002220  E108               	bnz	u4340
  6015  002222  2818               	incf	___flmul@temp^0,w,c
  6016  002224  A0D8               	btfss	status,0,c
  6017  002226  EF17  F011         	goto	u4341
  6018  00222A  EF19  F011         	goto	u4340
  6019  00222E                     u4341:
  6020  00222E  EF23  F011         	goto	l3789
  6021  002232                     u4340:
  6022  002232  0E00               	movlw	0
  6023  002234  6E14               	movwf	___flmul@prod^0,c
  6024  002236  0E00               	movlw	0
  6025  002238  6E15               	movwf	(___flmul@prod+1)^0,c
  6026  00223A  0E80               	movlw	128
  6027  00223C  6E16               	movwf	(___flmul@prod+2)^0,c
  6028  00223E  0E7F               	movlw	127
  6029  002240  6E17               	movwf	(___flmul@prod+3)^0,c
  6030  002242  EF51  F011         	goto	l3801
  6031  002246                     l3789:
  6032  002246  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6033  002248  EF30  F011         	goto	u4350
  6034  00224C  5019               	movf	(___flmul@temp+1)^0,w,c
  6035  00224E  E106               	bnz	u4351
  6036  002250  0418               	decf	___flmul@temp^0,w,c
  6037  002252  B0D8               	btfsc	status,0,c
  6038  002254  EF2E  F011         	goto	u4351
  6039  002258  EF30  F011         	goto	u4350
  6040  00225C                     u4351:
  6041  00225C  EF3C  F011         	goto	l818
  6042  002260                     u4350:
  6043  002260  0E00               	movlw	0
  6044  002262  6E14               	movwf	___flmul@prod^0,c
  6045  002264  0E00               	movlw	0
  6046  002266  6E15               	movwf	(___flmul@prod+1)^0,c
  6047  002268  0E00               	movlw	0
  6048  00226A  6E16               	movwf	(___flmul@prod+2)^0,c
  6049  00226C  0E00               	movlw	0
  6050  00226E  6E17               	movwf	(___flmul@prod+3)^0,c
  6051  002270  0E00               	movlw	0
  6052  002272  6E0D               	movwf	___flmul@sign^0,c
  6053  002274  EF51  F011         	goto	l3801
  6054  002278                     l818:
  6055  002278  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6056  00227C  0EFF               	movlw	255
  6057  00227E  1614               	andwf	___flmul@prod^0,f,c
  6058  002280  0EFF               	movlw	255
  6059  002282  1615               	andwf	(___flmul@prod+1)^0,f,c
  6060  002284  0E7F               	movlw	127
  6061  002286  1616               	andwf	(___flmul@prod+2)^0,f,c
  6062  002288  0E00               	movlw	0
  6063  00228A  1617               	andwf	(___flmul@prod+3)^0,f,c
  6064  00228C  A013               	btfss	___flmul@bexp^0,0,c
  6065  00228E  EF4B  F011         	goto	u4361
  6066  002292  EF4D  F011         	goto	u4360
  6067  002296                     u4361:
  6068  002296  EF4E  F011         	goto	l3799
  6069  00229A                     u4360:
  6070  00229A  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6071  00229C                     l3799:
  6072  00229C  90D8               	bcf	status,0,c
  6073  00229E  3013               	rrcf	___flmul@bexp^0,w,c
  6074  0022A0  6E17               	movwf	(___flmul@prod+3)^0,c
  6075  0022A2                     l3801:
  6076  0022A2  500D               	movf	___flmul@sign^0,w,c
  6077  0022A4  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6078  0022A6  C014  F001         	movff	___flmul@prod,?___flmul
  6079  0022AA  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6080  0022AE  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6081  0022B2  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6082  0022B6                     l805:
  6083  0022B6  0012               	return		;funcret
  6084  0022B8                     __end_of___flmul:
  6085                           	callstack 0
  6086                           
  6087 ;; *************** function ___flge *****************
  6088 ;; Defined at:
  6089 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  ff1             4   25[COMRAM] unsigned char 
  6092 ;;  ff2             4   29[COMRAM] unsigned char 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;		None               void
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6104 ;;      Params:         8       0       0       0       0       0       0       0       0
  6105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6106 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6107 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6108 ;;Total ram usage:       12 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_efgtoa
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text16
  6118  003B7C                     __ptext16:
  6119                           	callstack 0
  6120  003B7C                     ___flge:
  6121                           	callstack 26
  6122  003B7C  0E00               	movlw	0
  6123  003B7E  141A               	andwf	___flge@ff1^0,w,c
  6124  003B80  6E22               	movwf	??___flge^0,c
  6125  003B82  0E00               	movlw	0
  6126  003B84  141B               	andwf	(___flge@ff1+1)^0,w,c
  6127  003B86  6E23               	movwf	(??___flge+1)^0,c
  6128  003B88  0E80               	movlw	128
  6129  003B8A  141C               	andwf	(___flge@ff1+2)^0,w,c
  6130  003B8C  6E24               	movwf	(??___flge+2)^0,c
  6131  003B8E  0E7F               	movlw	127
  6132  003B90  141D               	andwf	(___flge@ff1+3)^0,w,c
  6133  003B92  6E25               	movwf	(??___flge+3)^0,c
  6134  003B94  5022               	movf	??___flge^0,w,c
  6135  003B96  1023               	iorwf	(??___flge+1)^0,w,c
  6136  003B98  1024               	iorwf	(??___flge+2)^0,w,c
  6137  003B9A  1025               	iorwf	(??___flge+3)^0,w,c
  6138  003B9C  A4D8               	btfss	status,2,c
  6139  003B9E  EFD3  F01D         	goto	u4521
  6140  003BA2  EFD5  F01D         	goto	u4520
  6141  003BA6                     u4521:
  6142  003BA6  EFDD  F01D         	goto	l3913
  6143  003BAA                     u4520:
  6144  003BAA  0E00               	movlw	0
  6145  003BAC  6E1A               	movwf	___flge@ff1^0,c
  6146  003BAE  0E00               	movlw	0
  6147  003BB0  6E1B               	movwf	(___flge@ff1+1)^0,c
  6148  003BB2  0E00               	movlw	0
  6149  003BB4  6E1C               	movwf	(___flge@ff1+2)^0,c
  6150  003BB6  0E00               	movlw	0
  6151  003BB8  6E1D               	movwf	(___flge@ff1+3)^0,c
  6152  003BBA                     l3913:
  6153  003BBA  0E00               	movlw	0
  6154  003BBC  141E               	andwf	___flge@ff2^0,w,c
  6155  003BBE  6E22               	movwf	??___flge^0,c
  6156  003BC0  0E00               	movlw	0
  6157  003BC2  141F               	andwf	(___flge@ff2+1)^0,w,c
  6158  003BC4  6E23               	movwf	(??___flge+1)^0,c
  6159  003BC6  0E80               	movlw	128
  6160  003BC8  1420               	andwf	(___flge@ff2+2)^0,w,c
  6161  003BCA  6E24               	movwf	(??___flge+2)^0,c
  6162  003BCC  0E7F               	movlw	127
  6163  003BCE  1421               	andwf	(___flge@ff2+3)^0,w,c
  6164  003BD0  6E25               	movwf	(??___flge+3)^0,c
  6165  003BD2  5022               	movf	??___flge^0,w,c
  6166  003BD4  1023               	iorwf	(??___flge+1)^0,w,c
  6167  003BD6  1024               	iorwf	(??___flge+2)^0,w,c
  6168  003BD8  1025               	iorwf	(??___flge+3)^0,w,c
  6169  003BDA  A4D8               	btfss	status,2,c
  6170  003BDC  EFF2  F01D         	goto	u4531
  6171  003BE0  EFF4  F01D         	goto	u4530
  6172  003BE4                     u4531:
  6173  003BE4  EFFC  F01D         	goto	l3917
  6174  003BE8                     u4530:
  6175  003BE8  0E00               	movlw	0
  6176  003BEA  6E1E               	movwf	___flge@ff2^0,c
  6177  003BEC  0E00               	movlw	0
  6178  003BEE  6E1F               	movwf	(___flge@ff2+1)^0,c
  6179  003BF0  0E00               	movlw	0
  6180  003BF2  6E20               	movwf	(___flge@ff2+2)^0,c
  6181  003BF4  0E00               	movlw	0
  6182  003BF6  6E21               	movwf	(___flge@ff2+3)^0,c
  6183  003BF8                     l3917:
  6184  003BF8  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6185  003BFA  EF01  F01E         	goto	u4541
  6186  003BFE  EF03  F01E         	goto	u4540
  6187  003C02                     u4541:
  6188  003C02  EF0C  F01E         	goto	l3921
  6189  003C06                     u4540:
  6190  003C06  6C1A               	negf	___flge@ff1^0,c
  6191  003C08  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6192  003C0A  B0D8               	btfsc	status,0,c
  6193  003C0C  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6194  003C0E  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6195  003C10  B0D8               	btfsc	status,0,c
  6196  003C12  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6197  003C14  0E80               	movlw	128
  6198  003C16  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6199  003C18                     l3921:
  6200  003C18  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6201  003C1A  EF11  F01E         	goto	u4551
  6202  003C1E  EF13  F01E         	goto	u4550
  6203  003C22                     u4551:
  6204  003C22  EF1C  F01E         	goto	l452
  6205  003C26                     u4550:
  6206  003C26  6C1E               	negf	___flge@ff2^0,c
  6207  003C28  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6208  003C2A  B0D8               	btfsc	status,0,c
  6209  003C2C  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6210  003C2E  1E20               	comf	(___flge@ff2+2)^0,f,c
  6211  003C30  B0D8               	btfsc	status,0,c
  6212  003C32  2A20               	incf	(___flge@ff2+2)^0,f,c
  6213  003C34  0E80               	movlw	128
  6214  003C36  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6215  003C38                     l452:
  6216  003C38  0E00               	movlw	0
  6217  003C3A  1A1A               	xorwf	___flge@ff1^0,f,c
  6218  003C3C  0E00               	movlw	0
  6219  003C3E  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6220  003C40  0E00               	movlw	0
  6221  003C42  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6222  003C44  0E80               	movlw	128
  6223  003C46  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6224  003C48  0E00               	movlw	0
  6225  003C4A  1A1E               	xorwf	___flge@ff2^0,f,c
  6226  003C4C  0E00               	movlw	0
  6227  003C4E  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6228  003C50  0E00               	movlw	0
  6229  003C52  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6230  003C54  0E80               	movlw	128
  6231  003C56  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6232  003C58  501E               	movf	___flge@ff2^0,w,c
  6233  003C5A  5C1A               	subwf	___flge@ff1^0,w,c
  6234  003C5C  501F               	movf	(___flge@ff2+1)^0,w,c
  6235  003C5E  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6236  003C60  5020               	movf	(___flge@ff2+2)^0,w,c
  6237  003C62  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6238  003C64  5021               	movf	(___flge@ff2+3)^0,w,c
  6239  003C66  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6240  003C68  B0D8               	btfsc	status,0,c
  6241  003C6A  EF39  F01E         	goto	u4561
  6242  003C6E  EF3B  F01E         	goto	u4560
  6243  003C72                     u4561:
  6244  003C72  EF3E  F01E         	goto	l3927
  6245  003C76                     u4560:
  6246  003C76  90D8               	bcf	status,0,c
  6247  003C78  EF3F  F01E         	goto	l457
  6248  003C7C                     l3927:
  6249  003C7C  80D8               	bsf	status,0,c
  6250  003C7E                     l457:
  6251  003C7E  0012               	return		;funcret
  6252  003C80                     __end_of___flge:
  6253                           	callstack 0
  6254                           
  6255 ;; *************** function ___fleq *****************
  6256 ;; Defined at:
  6257 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  ff1             4    0[COMRAM] unsigned char 
  6260 ;;  ff2             4    4[COMRAM] unsigned char 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;		None               void
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6272 ;;      Params:         8       0       0       0       0       0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6274 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6275 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6276 ;;Total ram usage:       12 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_efgtoa
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text17
  6286  004158                     __ptext17:
  6287                           	callstack 0
  6288  004158                     ___fleq:
  6289                           	callstack 26
  6290  004158  0E00               	movlw	0
  6291  00415A  1401               	andwf	___fleq@ff1^0,w,c
  6292  00415C  6E09               	movwf	??___fleq^0,c
  6293  00415E  0E00               	movlw	0
  6294  004160  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6295  004162  6E0A               	movwf	(??___fleq+1)^0,c
  6296  004164  0E80               	movlw	128
  6297  004166  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6298  004168  6E0B               	movwf	(??___fleq+2)^0,c
  6299  00416A  0E7F               	movlw	127
  6300  00416C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6301  00416E  6E0C               	movwf	(??___fleq+3)^0,c
  6302  004170  5009               	movf	??___fleq^0,w,c
  6303  004172  100A               	iorwf	(??___fleq+1)^0,w,c
  6304  004174  100B               	iorwf	(??___fleq+2)^0,w,c
  6305  004176  100C               	iorwf	(??___fleq+3)^0,w,c
  6306  004178  A4D8               	btfss	status,2,c
  6307  00417A  EFC1  F020         	goto	u4491
  6308  00417E  EFC3  F020         	goto	u4490
  6309  004182                     u4491:
  6310  004182  EFCB  F020         	goto	l3897
  6311  004186                     u4490:
  6312  004186  0E00               	movlw	0
  6313  004188  6E01               	movwf	___fleq@ff1^0,c
  6314  00418A  0E00               	movlw	0
  6315  00418C  6E02               	movwf	(___fleq@ff1+1)^0,c
  6316  00418E  0E00               	movlw	0
  6317  004190  6E03               	movwf	(___fleq@ff1+2)^0,c
  6318  004192  0E00               	movlw	0
  6319  004194  6E04               	movwf	(___fleq@ff1+3)^0,c
  6320  004196                     l3897:
  6321  004196  0E00               	movlw	0
  6322  004198  1405               	andwf	___fleq@ff2^0,w,c
  6323  00419A  6E09               	movwf	??___fleq^0,c
  6324  00419C  0E00               	movlw	0
  6325  00419E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6326  0041A0  6E0A               	movwf	(??___fleq+1)^0,c
  6327  0041A2  0E80               	movlw	128
  6328  0041A4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6329  0041A6  6E0B               	movwf	(??___fleq+2)^0,c
  6330  0041A8  0E7F               	movlw	127
  6331  0041AA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6332  0041AC  6E0C               	movwf	(??___fleq+3)^0,c
  6333  0041AE  5009               	movf	??___fleq^0,w,c
  6334  0041B0  100A               	iorwf	(??___fleq+1)^0,w,c
  6335  0041B2  100B               	iorwf	(??___fleq+2)^0,w,c
  6336  0041B4  100C               	iorwf	(??___fleq+3)^0,w,c
  6337  0041B6  A4D8               	btfss	status,2,c
  6338  0041B8  EFE0  F020         	goto	u4501
  6339  0041BC  EFE2  F020         	goto	u4500
  6340  0041C0                     u4501:
  6341  0041C0  EFEA  F020         	goto	l3901
  6342  0041C4                     u4500:
  6343  0041C4  0E00               	movlw	0
  6344  0041C6  6E05               	movwf	___fleq@ff2^0,c
  6345  0041C8  0E00               	movlw	0
  6346  0041CA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6347  0041CC  0E00               	movlw	0
  6348  0041CE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6349  0041D0  0E00               	movlw	0
  6350  0041D2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6351  0041D4                     l3901:
  6352  0041D4  5005               	movf	___fleq@ff2^0,w,c
  6353  0041D6  1801               	xorwf	___fleq@ff1^0,w,c
  6354  0041D8  E10F               	bnz	u4510
  6355  0041DA  5006               	movf	(___fleq@ff2+1)^0,w,c
  6356  0041DC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6357  0041DE  E10C               	bnz	u4510
  6358  0041E0  5007               	movf	(___fleq@ff2+2)^0,w,c
  6359  0041E2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6360  0041E4  E109               	bnz	u4510
  6361  0041E6  5008               	movf	(___fleq@ff2+3)^0,w,c
  6362  0041E8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6363  0041EA  B4D8               	btfsc	status,2,c
  6364  0041EC  EFFA  F020         	goto	u4511
  6365  0041F0  EFFC  F020         	goto	u4510
  6366  0041F4                     u4511:
  6367  0041F4  EFFF  F020         	goto	l3905
  6368  0041F8                     u4510:
  6369  0041F8  90D8               	bcf	status,0,c
  6370  0041FA  EF00  F021         	goto	l446
  6371  0041FE                     l3905:
  6372  0041FE  80D8               	bsf	status,0,c
  6373  004200                     l446:
  6374  004200  0012               	return		;funcret
  6375  004202                     __end_of___fleq:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function ___fldiv *****************
  6379 ;; Defined at:
  6380 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  b               4    0[COMRAM] unsigned char 
  6383 ;;  a               4    4[COMRAM] unsigned char 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  grs             4   19[COMRAM] unsigned long 
  6386 ;;  rem             4   12[COMRAM] unsigned long 
  6387 ;;  new_exp         2   17[COMRAM] short 
  6388 ;;  aexp            1   24[COMRAM] unsigned char 
  6389 ;;  bexp            1   23[COMRAM] unsigned char 
  6390 ;;  sign            1   16[COMRAM] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  4    0[COMRAM] unsigned char 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6400 ;;      Params:         8       0       0       0       0       0       0       0       0
  6401 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6402 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6403 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6404 ;;Total ram usage:       25 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_efgtoa
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text18
  6414  0022B8                     __ptext18:
  6415                           	callstack 0
  6416  0022B8                     ___fldiv:
  6417                           	callstack 26
  6418  0022B8  5004               	movf	(___fldiv@b+3)^0,w,c
  6419  0022BA  0B80               	andlw	128
  6420  0022BC  6E11               	movwf	___fldiv@sign^0,c
  6421  0022BE  5004               	movf	(___fldiv@b+3)^0,w,c
  6422  0022C0  2404               	addwf	(___fldiv@b+3)^0,w,c
  6423  0022C2  6E18               	movwf	___fldiv@bexp^0,c
  6424  0022C4  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6425  0022C6  EF67  F011         	goto	u3951
  6426  0022CA  EF69  F011         	goto	u3950
  6427  0022CE                     u3951:
  6428  0022CE  EF6A  F011         	goto	l3545
  6429  0022D2                     u3950:
  6430  0022D2  8018               	bsf	___fldiv@bexp^0,0,c
  6431  0022D4                     l3545:
  6432  0022D4  5018               	movf	___fldiv@bexp^0,w,c
  6433  0022D6  B4D8               	btfsc	status,2,c
  6434  0022D8  EF70  F011         	goto	u3961
  6435  0022DC  EF72  F011         	goto	u3960
  6436  0022E0                     u3961:
  6437  0022E0  EF87  F011         	goto	l3555
  6438  0022E4                     u3960:
  6439  0022E4  2818               	incf	___fldiv@bexp^0,w,c
  6440  0022E6  A4D8               	btfss	status,2,c
  6441  0022E8  EF78  F011         	goto	u3971
  6442  0022EC  EF7A  F011         	goto	u3970
  6443  0022F0                     u3971:
  6444  0022F0  EF82  F011         	goto	l3551
  6445  0022F4                     u3970:
  6446  0022F4  0E00               	movlw	0
  6447  0022F6  6E01               	movwf	___fldiv@b^0,c
  6448  0022F8  0E00               	movlw	0
  6449  0022FA  6E02               	movwf	(___fldiv@b+1)^0,c
  6450  0022FC  0E00               	movlw	0
  6451  0022FE  6E03               	movwf	(___fldiv@b+2)^0,c
  6452  002300  0E00               	movlw	0
  6453  002302  6E04               	movwf	(___fldiv@b+3)^0,c
  6454  002304                     l3551:
  6455  002304  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6456  002306  0E00               	movlw	0
  6457  002308  6E04               	movwf	(___fldiv@b+3)^0,c
  6458  00230A  EF8F  F011         	goto	l3557
  6459  00230E                     l3555:
  6460  00230E  0E00               	movlw	0
  6461  002310  6E01               	movwf	___fldiv@b^0,c
  6462  002312  0E00               	movlw	0
  6463  002314  6E02               	movwf	(___fldiv@b+1)^0,c
  6464  002316  0E00               	movlw	0
  6465  002318  6E03               	movwf	(___fldiv@b+2)^0,c
  6466  00231A  0E00               	movlw	0
  6467  00231C  6E04               	movwf	(___fldiv@b+3)^0,c
  6468  00231E                     l3557:
  6469  00231E  5008               	movf	(___fldiv@a+3)^0,w,c
  6470  002320  0B80               	andlw	128
  6471  002322  1A11               	xorwf	___fldiv@sign^0,f,c
  6472  002324  5008               	movf	(___fldiv@a+3)^0,w,c
  6473  002326  2408               	addwf	(___fldiv@a+3)^0,w,c
  6474  002328  6E19               	movwf	___fldiv@aexp^0,c
  6475  00232A  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6476  00232C  EF9A  F011         	goto	u3981
  6477  002330  EF9C  F011         	goto	u3980
  6478  002334                     u3981:
  6479  002334  EF9D  F011         	goto	l3565
  6480  002338                     u3980:
  6481  002338  8019               	bsf	___fldiv@aexp^0,0,c
  6482  00233A                     l3565:
  6483  00233A  5019               	movf	___fldiv@aexp^0,w,c
  6484  00233C  B4D8               	btfsc	status,2,c
  6485  00233E  EFA3  F011         	goto	u3991
  6486  002342  EFA5  F011         	goto	u3990
  6487  002346                     u3991:
  6488  002346  EFBA  F011         	goto	l3575
  6489  00234A                     u3990:
  6490  00234A  2819               	incf	___fldiv@aexp^0,w,c
  6491  00234C  A4D8               	btfss	status,2,c
  6492  00234E  EFAB  F011         	goto	u4001
  6493  002352  EFAD  F011         	goto	u4000
  6494  002356                     u4001:
  6495  002356  EFB5  F011         	goto	l3571
  6496  00235A                     u4000:
  6497  00235A  0E00               	movlw	0
  6498  00235C  6E05               	movwf	___fldiv@a^0,c
  6499  00235E  0E00               	movlw	0
  6500  002360  6E06               	movwf	(___fldiv@a+1)^0,c
  6501  002362  0E00               	movlw	0
  6502  002364  6E07               	movwf	(___fldiv@a+2)^0,c
  6503  002366  0E00               	movlw	0
  6504  002368  6E08               	movwf	(___fldiv@a+3)^0,c
  6505  00236A                     l3571:
  6506  00236A  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6507  00236C  0E00               	movlw	0
  6508  00236E  6E08               	movwf	(___fldiv@a+3)^0,c
  6509  002370  EFC2  F011         	goto	l3577
  6510  002374                     l3575:
  6511  002374  0E00               	movlw	0
  6512  002376  6E05               	movwf	___fldiv@a^0,c
  6513  002378  0E00               	movlw	0
  6514  00237A  6E06               	movwf	(___fldiv@a+1)^0,c
  6515  00237C  0E00               	movlw	0
  6516  00237E  6E07               	movwf	(___fldiv@a+2)^0,c
  6517  002380  0E00               	movlw	0
  6518  002382  6E08               	movwf	(___fldiv@a+3)^0,c
  6519  002384                     l3577:
  6520  002384  5005               	movf	___fldiv@a^0,w,c
  6521  002386  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6522  002388  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6523  00238A  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6524  00238C  A4D8               	btfss	status,2,c
  6525  00238E  EFCB  F011         	goto	u4011
  6526  002392  EFCD  F011         	goto	u4010
  6527  002396                     u4011:
  6528  002396  EFE5  F011         	goto	l3589
  6529  00239A                     u4010:
  6530  00239A  0E00               	movlw	0
  6531  00239C  6E01               	movwf	___fldiv@b^0,c
  6532  00239E  0E00               	movlw	0
  6533  0023A0  6E02               	movwf	(___fldiv@b+1)^0,c
  6534  0023A2  0E00               	movlw	0
  6535  0023A4  6E03               	movwf	(___fldiv@b+2)^0,c
  6536  0023A6  0E00               	movlw	0
  6537  0023A8  6E04               	movwf	(___fldiv@b+3)^0,c
  6538  0023AA  0E80               	movlw	128
  6539  0023AC  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6540  0023AE  0E7F               	movlw	127
  6541  0023B0  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6542  0023B2                     l3583:
  6543  0023B2  5011               	movf	___fldiv@sign^0,w,c
  6544  0023B4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6545  0023B6  C001  F001         	movff	___fldiv@b,?___fldiv
  6546  0023BA  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6547  0023BE  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6548  0023C2  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6549  0023C6  EF28  F013         	goto	l769
  6550  0023CA                     l3589:
  6551  0023CA  5018               	movf	___fldiv@bexp^0,w,c
  6552  0023CC  A4D8               	btfss	status,2,c
  6553  0023CE  EFEB  F011         	goto	u4021
  6554  0023D2  EFED  F011         	goto	u4020
  6555  0023D6                     u4021:
  6556  0023D6  EFF7  F011         	goto	l3597
  6557  0023DA                     u4020:
  6558  0023DA  0E00               	movlw	0
  6559  0023DC  6E01               	movwf	?___fldiv^0,c
  6560  0023DE  0E00               	movlw	0
  6561  0023E0  6E02               	movwf	(?___fldiv+1)^0,c
  6562  0023E2  0E00               	movlw	0
  6563  0023E4  6E03               	movwf	(?___fldiv+2)^0,c
  6564  0023E6  0E00               	movlw	0
  6565  0023E8  6E04               	movwf	(?___fldiv+3)^0,c
  6566  0023EA  EF28  F013         	goto	l769
  6567  0023EE                     l3597:
  6568  0023EE  5019               	movf	___fldiv@aexp^0,w,c
  6569  0023F0  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6570  0023F4  6A0A               	clrf	(??___fldiv+1)^0,c
  6571  0023F6  5E09               	subwf	??___fldiv^0,f,c
  6572  0023F8  0E00               	movlw	0
  6573  0023FA  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6574  0023FC  0E7F               	movlw	127
  6575  0023FE  2409               	addwf	??___fldiv^0,w,c
  6576  002400  6E12               	movwf	___fldiv@new_exp^0,c
  6577  002402  0E00               	movlw	0
  6578  002404  200A               	addwfc	(??___fldiv+1)^0,w,c
  6579  002406  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6580  002408  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6581  00240C  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6582  002410  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6583  002414  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6584  002418  0E00               	movlw	0
  6585  00241A  6E01               	movwf	___fldiv@b^0,c
  6586  00241C  0E00               	movlw	0
  6587  00241E  6E02               	movwf	(___fldiv@b+1)^0,c
  6588  002420  0E00               	movlw	0
  6589  002422  6E03               	movwf	(___fldiv@b+2)^0,c
  6590  002424  0E00               	movlw	0
  6591  002426  6E04               	movwf	(___fldiv@b+3)^0,c
  6592  002428  0E00               	movlw	0
  6593  00242A  6E14               	movwf	___fldiv@grs^0,c
  6594  00242C  0E00               	movlw	0
  6595  00242E  6E15               	movwf	(___fldiv@grs+1)^0,c
  6596  002430  0E00               	movlw	0
  6597  002432  6E16               	movwf	(___fldiv@grs+2)^0,c
  6598  002434  0E00               	movlw	0
  6599  002436  6E17               	movwf	(___fldiv@grs+3)^0,c
  6600  002438  0E00               	movlw	0
  6601  00243A  6E19               	movwf	___fldiv@aexp^0,c
  6602  00243C  EF58  F012         	goto	l771
  6603  002440                     l3607:
  6604  002440  5019               	movf	___fldiv@aexp^0,w,c
  6605  002442  B4D8               	btfsc	status,2,c
  6606  002444  EF26  F012         	goto	u4031
  6607  002448  EF28  F012         	goto	u4030
  6608  00244C                     u4031:
  6609  00244C  EF3F  F012         	goto	l3615
  6610  002450                     u4030:
  6611  002450  90D8               	bcf	status,0,c
  6612  002452  360D               	rlcf	___fldiv@rem^0,f,c
  6613  002454  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6614  002456  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6615  002458  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6616  00245A  90D8               	bcf	status,0,c
  6617  00245C  3601               	rlcf	___fldiv@b^0,f,c
  6618  00245E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6619  002460  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6620  002462  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6621  002464  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6622  002466  EF37  F012         	goto	u4041
  6623  00246A  EF39  F012         	goto	u4040
  6624  00246E                     u4041:
  6625  00246E  EF3A  F012         	goto	l774
  6626  002472                     u4040:
  6627  002472  8001               	bsf	___fldiv@b^0,0,c
  6628  002474                     l774:
  6629  002474  90D8               	bcf	status,0,c
  6630  002476  3614               	rlcf	___fldiv@grs^0,f,c
  6631  002478  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6632  00247A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6633  00247C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6634  00247E                     l3615:
  6635  00247E  5005               	movf	___fldiv@a^0,w,c
  6636  002480  5C0D               	subwf	___fldiv@rem^0,w,c
  6637  002482  5006               	movf	(___fldiv@a+1)^0,w,c
  6638  002484  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6639  002486  5007               	movf	(___fldiv@a+2)^0,w,c
  6640  002488  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6641  00248A  5008               	movf	(___fldiv@a+3)^0,w,c
  6642  00248C  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6643  00248E  A0D8               	btfss	status,0,c
  6644  002490  EF4C  F012         	goto	u4051
  6645  002494  EF4E  F012         	goto	u4050
  6646  002498                     u4051:
  6647  002498  EF57  F012         	goto	l3621
  6648  00249C                     u4050:
  6649  00249C  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6650  00249E  5005               	movf	___fldiv@a^0,w,c
  6651  0024A0  5E0D               	subwf	___fldiv@rem^0,f,c
  6652  0024A2  5006               	movf	(___fldiv@a+1)^0,w,c
  6653  0024A4  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6654  0024A6  5007               	movf	(___fldiv@a+2)^0,w,c
  6655  0024A8  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6656  0024AA  5008               	movf	(___fldiv@a+3)^0,w,c
  6657  0024AC  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6658  0024AE                     l3621:
  6659  0024AE  2A19               	incf	___fldiv@aexp^0,f,c
  6660  0024B0                     l771:
  6661  0024B0  0E19               	movlw	25
  6662  0024B2  6419               	cpfsgt	___fldiv@aexp^0,c
  6663  0024B4  EF5E  F012         	goto	u4061
  6664  0024B8  EF60  F012         	goto	u4060
  6665  0024BC                     u4061:
  6666  0024BC  EF20  F012         	goto	l3607
  6667  0024C0                     u4060:
  6668  0024C0  500D               	movf	___fldiv@rem^0,w,c
  6669  0024C2  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6670  0024C4  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6671  0024C6  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6672  0024C8  B4D8               	btfsc	status,2,c
  6673  0024CA  EF69  F012         	goto	u4071
  6674  0024CE  EF6B  F012         	goto	u4070
  6675  0024D2                     u4071:
  6676  0024D2  EF83  F012         	goto	l3633
  6677  0024D6                     u4070:
  6678  0024D6  8014               	bsf	___fldiv@grs^0,0,c
  6679  0024D8  EF83  F012         	goto	l3633
  6680  0024DC                     l3627:
  6681  0024DC  90D8               	bcf	status,0,c
  6682  0024DE  3601               	rlcf	___fldiv@b^0,f,c
  6683  0024E0  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6684  0024E2  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6685  0024E4  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6686  0024E6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6687  0024E8  EF78  F012         	goto	u4081
  6688  0024EC  EF7A  F012         	goto	u4080
  6689  0024F0                     u4081:
  6690  0024F0  EF7B  F012         	goto	l780
  6691  0024F4                     u4080:
  6692  0024F4  8001               	bsf	___fldiv@b^0,0,c
  6693  0024F6                     l780:
  6694  0024F6  90D8               	bcf	status,0,c
  6695  0024F8  3614               	rlcf	___fldiv@grs^0,f,c
  6696  0024FA  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6697  0024FC  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6698  0024FE  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6699  002500  0612               	decf	___fldiv@new_exp^0,f,c
  6700  002502  A0D8               	btfss	status,0,c
  6701  002504  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6702  002506                     l3633:
  6703  002506  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6704  002508  EF88  F012         	goto	u4091
  6705  00250C  EF8A  F012         	goto	u4090
  6706  002510                     u4091:
  6707  002510  EF6E  F012         	goto	l3627
  6708  002514                     u4090:
  6709  002514  0E00               	movlw	0
  6710  002516  6E19               	movwf	___fldiv@aexp^0,c
  6711  002518  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6712  00251A  EF91  F012         	goto	u4101
  6713  00251E  EF93  F012         	goto	u4100
  6714  002522                     u4101:
  6715  002522  EFB7  F012         	goto	l782
  6716  002526                     u4100:
  6717  002526  0EFF               	movlw	255
  6718  002528  1414               	andwf	___fldiv@grs^0,w,c
  6719  00252A  6E09               	movwf	??___fldiv^0,c
  6720  00252C  0EFF               	movlw	255
  6721  00252E  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6722  002530  6E0A               	movwf	(??___fldiv+1)^0,c
  6723  002532  0EFF               	movlw	255
  6724  002534  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6725  002536  6E0B               	movwf	(??___fldiv+2)^0,c
  6726  002538  0E7F               	movlw	127
  6727  00253A  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6728  00253C  6E0C               	movwf	(??___fldiv+3)^0,c
  6729  00253E  5009               	movf	??___fldiv^0,w,c
  6730  002540  100A               	iorwf	(??___fldiv+1)^0,w,c
  6731  002542  100B               	iorwf	(??___fldiv+2)^0,w,c
  6732  002544  100C               	iorwf	(??___fldiv+3)^0,w,c
  6733  002546  B4D8               	btfsc	status,2,c
  6734  002548  EFA8  F012         	goto	u4111
  6735  00254C  EFAA  F012         	goto	u4110
  6736  002550                     u4111:
  6737  002550  EFAE  F012         	goto	l783
  6738  002554                     u4110:
  6739  002554                     l3641:
  6740  002554  0E01               	movlw	1
  6741  002556  6E19               	movwf	___fldiv@aexp^0,c
  6742  002558  EFB7  F012         	goto	l782
  6743  00255C                     l783:
  6744  00255C  A001               	btfss	___fldiv@b^0,0,c
  6745  00255E  EFB3  F012         	goto	u4121
  6746  002562  EFB5  F012         	goto	u4120
  6747  002566                     u4121:
  6748  002566  EFB7  F012         	goto	l782
  6749  00256A                     u4120:
  6750  00256A  EFAA  F012         	goto	l3641
  6751  00256E                     l782:
  6752  00256E  5019               	movf	___fldiv@aexp^0,w,c
  6753  002570  B4D8               	btfsc	status,2,c
  6754  002572  EFBD  F012         	goto	u4131
  6755  002576  EFBF  F012         	goto	u4130
  6756  00257A                     u4131:
  6757  00257A  EFE3  F012         	goto	l3653
  6758  00257E                     u4130:
  6759  00257E  0E01               	movlw	1
  6760  002580  2601               	addwf	___fldiv@b^0,f,c
  6761  002582  0E00               	movlw	0
  6762  002584  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6763  002586  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6764  002588  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6765  00258A  A004               	btfss	(___fldiv@b+3)^0,0,c
  6766  00258C  EFCA  F012         	goto	u4141
  6767  002590  EFCC  F012         	goto	u4140
  6768  002594                     u4141:
  6769  002594  EFE3  F012         	goto	l3653
  6770  002598                     u4140:
  6771  002598  C001  F009         	movff	___fldiv@b,??___fldiv
  6772  00259C  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6773  0025A0  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6774  0025A4  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6775  0025A8  340C               	rlcf	(??___fldiv+3)^0,w,c
  6776  0025AA  320C               	rrcf	(??___fldiv+3)^0,f,c
  6777  0025AC  320B               	rrcf	(??___fldiv+2)^0,f,c
  6778  0025AE  320A               	rrcf	(??___fldiv+1)^0,f,c
  6779  0025B0  3209               	rrcf	??___fldiv^0,f,c
  6780  0025B2  C009  F001         	movff	??___fldiv,___fldiv@b
  6781  0025B6  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6782  0025BA  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6783  0025BE  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6784  0025C2  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6785  0025C4  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6786  0025C6                     l3653:
  6787  0025C6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6788  0025C8  EFEE  F012         	goto	u4151
  6789  0025CC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6790  0025CE  E108               	bnz	u4150
  6791  0025D0  2812               	incf	___fldiv@new_exp^0,w,c
  6792  0025D2  A0D8               	btfss	status,0,c
  6793  0025D4  EFEE  F012         	goto	u4151
  6794  0025D8  EFF0  F012         	goto	u4150
  6795  0025DC                     u4151:
  6796  0025DC  EFFB  F012         	goto	l3657
  6797  0025E0                     u4150:
  6798  0025E0  0E00               	movlw	0
  6799  0025E2  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6800  0025E4  6812               	setf	___fldiv@new_exp^0,c
  6801  0025E6  0E00               	movlw	0
  6802  0025E8  6E01               	movwf	___fldiv@b^0,c
  6803  0025EA  0E00               	movlw	0
  6804  0025EC  6E02               	movwf	(___fldiv@b+1)^0,c
  6805  0025EE  0E00               	movlw	0
  6806  0025F0  6E03               	movwf	(___fldiv@b+2)^0,c
  6807  0025F2  0E00               	movlw	0
  6808  0025F4  6E04               	movwf	(___fldiv@b+3)^0,c
  6809  0025F6                     l3657:
  6810  0025F6  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6811  0025F8  EF08  F013         	goto	u4160
  6812  0025FC  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6813  0025FE  E106               	bnz	u4161
  6814  002600  0412               	decf	___fldiv@new_exp^0,w,c
  6815  002602  B0D8               	btfsc	status,0,c
  6816  002604  EF06  F013         	goto	u4161
  6817  002608  EF08  F013         	goto	u4160
  6818  00260C                     u4161:
  6819  00260C  EF16  F013         	goto	l3661
  6820  002610                     u4160:
  6821  002610  0E00               	movlw	0
  6822  002612  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6823  002614  0E00               	movlw	0
  6824  002616  6E12               	movwf	___fldiv@new_exp^0,c
  6825  002618  0E00               	movlw	0
  6826  00261A  6E01               	movwf	___fldiv@b^0,c
  6827  00261C  0E00               	movlw	0
  6828  00261E  6E02               	movwf	(___fldiv@b+1)^0,c
  6829  002620  0E00               	movlw	0
  6830  002622  6E03               	movwf	(___fldiv@b+2)^0,c
  6831  002624  0E00               	movlw	0
  6832  002626  6E04               	movwf	(___fldiv@b+3)^0,c
  6833  002628  0E00               	movlw	0
  6834  00262A  6E11               	movwf	___fldiv@sign^0,c
  6835  00262C                     l3661:
  6836  00262C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6837  002630  A018               	btfss	___fldiv@bexp^0,0,c
  6838  002632  EF1D  F013         	goto	u4171
  6839  002636  EF1F  F013         	goto	u4170
  6840  00263A                     u4171:
  6841  00263A  EF22  F013         	goto	l3667
  6842  00263E                     u4170:
  6843  00263E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6844  002640  EF23  F013         	goto	l3669
  6845  002644                     l3667:
  6846  002644  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6847  002646                     l3669:
  6848  002646  90D8               	bcf	status,0,c
  6849  002648  3018               	rrcf	___fldiv@bexp^0,w,c
  6850  00264A  6E04               	movwf	(___fldiv@b+3)^0,c
  6851  00264C  EFD9  F011         	goto	l3583
  6852  002650                     l769:
  6853  002650  0012               	return		;funcret
  6854  002652                     __end_of___fldiv:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function ___awmod *****************
  6858 ;; Defined at:
  6859 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  dividend        2    0[COMRAM] int 
  6862 ;;  divisor         2    2[COMRAM] int 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;  sign            1    5[COMRAM] unsigned char 
  6865 ;;  counter         1    4[COMRAM] unsigned char 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  2    0[COMRAM] int 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6875 ;;      Params:         4       0       0       0       0       0       0       0       0
  6876 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6878 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6879 ;;Total ram usage:        6 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_efgtoa
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text19
  6889  0040A8                     __ptext19:
  6890                           	callstack 0
  6891  0040A8                     ___awmod:
  6892                           	callstack 26
  6893  0040A8  0E00               	movlw	0
  6894  0040AA  6E06               	movwf	___awmod@sign^0,c
  6895  0040AC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6896  0040AE  EF5D  F020         	goto	u4430
  6897  0040B2  EF5B  F020         	goto	u4431
  6898  0040B6                     u4431:
  6899  0040B6  EF63  F020         	goto	l3865
  6900  0040BA                     u4430:
  6901  0040BA  6C01               	negf	___awmod@dividend^0,c
  6902  0040BC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6903  0040BE  B0D8               	btfsc	status,0,c
  6904  0040C0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6905  0040C2  0E01               	movlw	1
  6906  0040C4  6E06               	movwf	___awmod@sign^0,c
  6907  0040C6                     l3865:
  6908  0040C6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6909  0040C8  EF6A  F020         	goto	u4440
  6910  0040CC  EF68  F020         	goto	u4441
  6911  0040D0                     u4441:
  6912  0040D0  EF6E  F020         	goto	l3869
  6913  0040D4                     u4440:
  6914  0040D4  6C03               	negf	___awmod@divisor^0,c
  6915  0040D6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6916  0040D8  B0D8               	btfsc	status,0,c
  6917  0040DA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6918  0040DC                     l3869:
  6919  0040DC  5003               	movf	___awmod@divisor^0,w,c
  6920  0040DE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6921  0040E0  B4D8               	btfsc	status,2,c
  6922  0040E2  EF75  F020         	goto	u4451
  6923  0040E6  EF77  F020         	goto	u4450
  6924  0040EA                     u4451:
  6925  0040EA  EF9B  F020         	goto	l3885
  6926  0040EE                     u4450:
  6927  0040EE  0E01               	movlw	1
  6928  0040F0  6E05               	movwf	___awmod@counter^0,c
  6929  0040F2  EF7F  F020         	goto	l3875
  6930  0040F6                     l3873:
  6931  0040F6  90D8               	bcf	status,0,c
  6932  0040F8  3603               	rlcf	___awmod@divisor^0,f,c
  6933  0040FA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6934  0040FC  2A05               	incf	___awmod@counter^0,f,c
  6935  0040FE                     l3875:
  6936  0040FE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6937  004100  EF84  F020         	goto	u4461
  6938  004104  EF86  F020         	goto	u4460
  6939  004108                     u4461:
  6940  004108  EF7B  F020         	goto	l3873
  6941  00410C                     u4460:
  6942  00410C                     l3877:
  6943  00410C  5003               	movf	___awmod@divisor^0,w,c
  6944  00410E  5C01               	subwf	___awmod@dividend^0,w,c
  6945  004110  5004               	movf	(___awmod@divisor+1)^0,w,c
  6946  004112  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6947  004114  A0D8               	btfss	status,0,c
  6948  004116  EF8F  F020         	goto	u4471
  6949  00411A  EF91  F020         	goto	u4470
  6950  00411E                     u4471:
  6951  00411E  EF95  F020         	goto	l3881
  6952  004122                     u4470:
  6953  004122  5003               	movf	___awmod@divisor^0,w,c
  6954  004124  5E01               	subwf	___awmod@dividend^0,f,c
  6955  004126  5004               	movf	(___awmod@divisor+1)^0,w,c
  6956  004128  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6957  00412A                     l3881:
  6958  00412A  90D8               	bcf	status,0,c
  6959  00412C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6960  00412E  3203               	rrcf	___awmod@divisor^0,f,c
  6961  004130  2E05               	decfsz	___awmod@counter^0,f,c
  6962  004132  EF86  F020         	goto	l3877
  6963  004136                     l3885:
  6964  004136  5006               	movf	___awmod@sign^0,w,c
  6965  004138  B4D8               	btfsc	status,2,c
  6966  00413A  EFA1  F020         	goto	u4481
  6967  00413E  EFA3  F020         	goto	u4480
  6968  004142                     u4481:
  6969  004142  EFA7  F020         	goto	l3889
  6970  004146                     u4480:
  6971  004146  6C01               	negf	___awmod@dividend^0,c
  6972  004148  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6973  00414A  B0D8               	btfsc	status,0,c
  6974  00414C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6975  00414E                     l3889:
  6976  00414E  C001  F001         	movff	___awmod@dividend,?___awmod
  6977  004152  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6978  004156  0012               	return		;funcret
  6979  004158                     __end_of___awmod:
  6980                           	callstack 0
  6981                           
  6982 ;; *************** function ___awdiv *****************
  6983 ;; Defined at:
  6984 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  dividend        2    0[COMRAM] int 
  6987 ;;  divisor         2    2[COMRAM] int 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;  quotient        2    6[COMRAM] int 
  6990 ;;  sign            1    5[COMRAM] unsigned char 
  6991 ;;  counter         1    4[COMRAM] unsigned char 
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  2    0[COMRAM] int 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2, status,0
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7001 ;;      Params:         4       0       0       0       0       0       0       0       0
  7002 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7004 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7005 ;;Total ram usage:        8 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_efgtoa
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text20
  7015  003FE4                     __ptext20:
  7016                           	callstack 0
  7017  003FE4                     ___awdiv:
  7018                           	callstack 26
  7019  003FE4  0E00               	movlw	0
  7020  003FE6  6E06               	movwf	___awdiv@sign^0,c
  7021  003FE8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7022  003FEA  EFFB  F01F         	goto	u4370
  7023  003FEE  EFF9  F01F         	goto	u4371
  7024  003FF2                     u4371:
  7025  003FF2  EF01  F020         	goto	l3821
  7026  003FF6                     u4370:
  7027  003FF6  6C03               	negf	___awdiv@divisor^0,c
  7028  003FF8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7029  003FFA  B0D8               	btfsc	status,0,c
  7030  003FFC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7031  003FFE  0E01               	movlw	1
  7032  004000  6E06               	movwf	___awdiv@sign^0,c
  7033  004002                     l3821:
  7034  004002  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7035  004004  EF08  F020         	goto	u4380
  7036  004008  EF06  F020         	goto	u4381
  7037  00400C                     u4381:
  7038  00400C  EF0E  F020         	goto	l3827
  7039  004010                     u4380:
  7040  004010  6C01               	negf	___awdiv@dividend^0,c
  7041  004012  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7042  004014  B0D8               	btfsc	status,0,c
  7043  004016  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7044  004018  0E01               	movlw	1
  7045  00401A  1A06               	xorwf	___awdiv@sign^0,f,c
  7046  00401C                     l3827:
  7047  00401C  0E00               	movlw	0
  7048  00401E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7049  004020  0E00               	movlw	0
  7050  004022  6E07               	movwf	___awdiv@quotient^0,c
  7051  004024  5003               	movf	___awdiv@divisor^0,w,c
  7052  004026  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7053  004028  B4D8               	btfsc	status,2,c
  7054  00402A  EF19  F020         	goto	u4391
  7055  00402E  EF1B  F020         	goto	u4390
  7056  004032                     u4391:
  7057  004032  EF43  F020         	goto	l3849
  7058  004036                     u4390:
  7059  004036  0E01               	movlw	1
  7060  004038  6E05               	movwf	___awdiv@counter^0,c
  7061  00403A  EF23  F020         	goto	l3835
  7062  00403E                     l3833:
  7063  00403E  90D8               	bcf	status,0,c
  7064  004040  3603               	rlcf	___awdiv@divisor^0,f,c
  7065  004042  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7066  004044  2A05               	incf	___awdiv@counter^0,f,c
  7067  004046                     l3835:
  7068  004046  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7069  004048  EF28  F020         	goto	u4401
  7070  00404C  EF2A  F020         	goto	u4400
  7071  004050                     u4401:
  7072  004050  EF1F  F020         	goto	l3833
  7073  004054                     u4400:
  7074  004054                     l3837:
  7075  004054  90D8               	bcf	status,0,c
  7076  004056  3607               	rlcf	___awdiv@quotient^0,f,c
  7077  004058  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7078  00405A  5003               	movf	___awdiv@divisor^0,w,c
  7079  00405C  5C01               	subwf	___awdiv@dividend^0,w,c
  7080  00405E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7081  004060  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7082  004062  A0D8               	btfss	status,0,c
  7083  004064  EF36  F020         	goto	u4411
  7084  004068  EF38  F020         	goto	u4410
  7085  00406C                     u4411:
  7086  00406C  EF3D  F020         	goto	l3845
  7087  004070                     u4410:
  7088  004070  5003               	movf	___awdiv@divisor^0,w,c
  7089  004072  5E01               	subwf	___awdiv@dividend^0,f,c
  7090  004074  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7091  004076  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7092  004078  8007               	bsf	___awdiv@quotient^0,0,c
  7093  00407A                     l3845:
  7094  00407A  90D8               	bcf	status,0,c
  7095  00407C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7096  00407E  3203               	rrcf	___awdiv@divisor^0,f,c
  7097  004080  2E05               	decfsz	___awdiv@counter^0,f,c
  7098  004082  EF2A  F020         	goto	l3837
  7099  004086                     l3849:
  7100  004086  5006               	movf	___awdiv@sign^0,w,c
  7101  004088  B4D8               	btfsc	status,2,c
  7102  00408A  EF49  F020         	goto	u4421
  7103  00408E  EF4B  F020         	goto	u4420
  7104  004092                     u4421:
  7105  004092  EF4F  F020         	goto	l3853
  7106  004096                     u4420:
  7107  004096  6C07               	negf	___awdiv@quotient^0,c
  7108  004098  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7109  00409A  B0D8               	btfsc	status,0,c
  7110  00409C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7111  00409E                     l3853:
  7112  00409E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7113  0040A2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7114  0040A6  0012               	return		;funcret
  7115  0040A8                     __end_of___awdiv:
  7116                           	callstack 0
  7117                           
  7118 ;; *************** function _dtoa *****************
  7119 ;; Defined at:
  7120 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7123 ;;		 -> sprintf@f(6), 
  7124 ;;  d               8   29[COMRAM] long long 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  n               8   53[COMRAM] long long 
  7127 ;;  i               2   61[COMRAM] int 
  7128 ;;  s               2   51[COMRAM] int 
  7129 ;;  w               2   49[COMRAM] int 
  7130 ;;  p               2   47[COMRAM] int 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  2   27[COMRAM] int 
  7133 ;; Registers used:
  7134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7140 ;;      Params:        10       0       0       0       0       0       0       0       0
  7141 ;;      Locals:        18       0       0       0       0       0       0       0       0
  7142 ;;      Temps:          8       0       0       0       0       0       0       0       0
  7143 ;;      Totals:        36       0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:       36 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    4
  7147 ;; This function calls:
  7148 ;;		___aodiv
  7149 ;;		___aomod
  7150 ;;		_abs
  7151 ;;		_pad
  7152 ;; This function is called by:
  7153 ;;		_vfpfcnvrt
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text21
  7158  002652                     __ptext21:
  7159                           	callstack 0
  7160  002652                     _dtoa:
  7161                           	callstack 23
  7162  002652                     
  7163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  7164  002652  C01E  F036         	movff	dtoa@d,dtoa@n
  7165  002656  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7166  00265A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7167  00265E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7168  002662  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7169  002666  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7170  00266A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7171  00266E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7172  002672                     
  7173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7174  002672  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7175  002674  EF3E  F013         	goto	u4981
  7176  002678  EF41  F013         	goto	u4980
  7177  00267C                     u4981:
  7178  00267C  0E01               	movlw	1
  7179  00267E  EF42  F013         	goto	u4990
  7180  002682                     u4980:
  7181  002682  0E00               	movlw	0
  7182  002684                     u4990:
  7183  002684  6E34               	movwf	dtoa@s^0,c
  7184  002686  6A35               	clrf	(dtoa@s+1)^0,c
  7185                           
  7186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7187  002688  5034               	movf	dtoa@s^0,w,c
  7188  00268A  1035               	iorwf	(dtoa@s+1)^0,w,c
  7189  00268C  B4D8               	btfsc	status,2,c
  7190  00268E  EF4B  F013         	goto	u5001
  7191  002692  EF4D  F013         	goto	u5000
  7192  002696                     u5001:
  7193  002696  EF5D  F013         	goto	l4111
  7194  00269A                     u5000:
  7195  00269A                     
  7196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7197  00269A  1E3D               	comf	(dtoa@n+7)^0,f,c
  7198  00269C  1E3C               	comf	(dtoa@n+6)^0,f,c
  7199  00269E  1E3B               	comf	(dtoa@n+5)^0,f,c
  7200  0026A0  1E3A               	comf	(dtoa@n+4)^0,f,c
  7201  0026A2  1E39               	comf	(dtoa@n+3)^0,f,c
  7202  0026A4  1E38               	comf	(dtoa@n+2)^0,f,c
  7203  0026A6  1E37               	comf	(dtoa@n+1)^0,f,c
  7204  0026A8  6C36               	negf	dtoa@n^0,c
  7205  0026AA  0E00               	movlw	0
  7206  0026AC  2237               	addwfc	(dtoa@n+1)^0,f,c
  7207  0026AE  2238               	addwfc	(dtoa@n+2)^0,f,c
  7208  0026B0  2239               	addwfc	(dtoa@n+3)^0,f,c
  7209  0026B2  223A               	addwfc	(dtoa@n+4)^0,f,c
  7210  0026B4  223B               	addwfc	(dtoa@n+5)^0,f,c
  7211  0026B6  223C               	addwfc	(dtoa@n+6)^0,f,c
  7212  0026B8  223D               	addwfc	(dtoa@n+7)^0,f,c
  7213  0026BA                     l4111:
  7214                           
  7215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7216  0026BA  0100               	movlb	0	; () banked
  7217  0026BC  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  7218  0026BE  EF63  F013         	goto	u5011
  7219  0026C2  EF65  F013         	goto	u5010
  7220  0026C6                     u5011:
  7221  0026C6  EF66  F013         	goto	l4115
  7222  0026CA                     u5010:
  7223  0026CA                     
  7224                           ; BSR set to: 0
  7225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7226  0026CA  93D7               	bcf	_flags& (0+255),1,b
  7227  0026CC                     l4115:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7231  0026CC  BFD6               	btfsc	(_prec+1)& (0+255),7,b
  7232  0026CE  EF73  F013         	goto	u5020
  7233  0026D2  51D6               	movf	(_prec+1)& (0+255),w,b
  7234  0026D4  E106               	bnz	u5021
  7235  0026D6  05D5               	decf	_prec& (0+255),w,b
  7236  0026D8  B0D8               	btfsc	status,0,c
  7237  0026DA  EF71  F013         	goto	u5021
  7238  0026DE  EF73  F013         	goto	u5020
  7239  0026E2                     u5021:
  7240  0026E2  EF79  F013         	goto	l919
  7241  0026E6                     u5020:
  7242  0026E6                     
  7243                           ; BSR set to: 0
  7244  0026E6  0E00               	movlw	0
  7245  0026E8  6E31               	movwf	(dtoa@p+1)^0,c
  7246  0026EA  0E01               	movlw	1
  7247  0026EC  6E30               	movwf	dtoa@p^0,c
  7248  0026EE  EF7D  F013         	goto	l921
  7249  0026F2                     l919:
  7250                           
  7251                           ; BSR set to: 0
  7252  0026F2  C0D5  F030         	movff	_prec,dtoa@p
  7253  0026F6  C0D6  F031         	movff	_prec+1,dtoa@p+1
  7254  0026FA                     l921:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7258  0026FA  C0D3  F032         	movff	_width,dtoa@w
  7259  0026FE  C0D4  F033         	movff	_width+1,dtoa@w+1
  7260  002702                     
  7261                           ; BSR set to: 0
  7262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7263  002702  5034               	movf	dtoa@s^0,w,c
  7264  002704  1035               	iorwf	(dtoa@s+1)^0,w,c
  7265  002706  A4D8               	btfss	status,2,c
  7266  002708  EF88  F013         	goto	u5031
  7267  00270C  EF8A  F013         	goto	u5030
  7268  002710                     u5031:
  7269  002710  EF91  F013         	goto	l4123
  7270  002714                     u5030:
  7271  002714                     
  7272                           ; BSR set to: 0
  7273  002714  A5D7               	btfss	_flags& (0+255),2,b
  7274  002716  EF8F  F013         	goto	u5041
  7275  00271A  EF91  F013         	goto	u5040
  7276  00271E                     u5041:
  7277  00271E  EF94  F013         	goto	l4125
  7278  002722                     u5040:
  7279  002722                     l4123:
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7283  002722  0632               	decf	dtoa@w^0,f,c
  7284  002724  A0D8               	btfss	status,0,c
  7285  002726  0633               	decf	(dtoa@w+1)^0,f,c
  7286  002728                     l4125:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7290  002728  0E00               	movlw	0
  7291  00272A  6E3F               	movwf	(dtoa@i+1)^0,c
  7292  00272C  0E4F               	movlw	79
  7293  00272E  6E3E               	movwf	dtoa@i^0,c
  7294  002730                     
  7295                           ; BSR set to: 0
  7296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7297  002730  0E00               	movlw	0
  7298  002732  0101               	movlb	1	; () banked
  7299  002734  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7300                           
  7301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7302  002736  EF19  F014         	goto	l4139
  7303  00273A                     l4129:
  7304                           
  7305                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7306  00273A  063E               	decf	dtoa@i^0,f,c
  7307  00273C  A0D8               	btfss	status,0,c
  7308  00273E  063F               	decf	(dtoa@i+1)^0,f,c
  7309  002740                     
  7310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7311  002740  0E00               	movlw	low _dbuf
  7312  002742  243E               	addwf	dtoa@i^0,w,c
  7313  002744  6ED9               	movwf	fsr2l,c
  7314  002746  0E01               	movlw	high _dbuf
  7315  002748  203F               	addwfc	(dtoa@i+1)^0,w,c
  7316  00274A  6EDA               	movwf	fsr2h,c
  7317  00274C  C036  F001         	movff	dtoa@n,___aomod@dividend
  7318  002750  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7319  002754  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7320  002758  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7321  00275C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7322  002760  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7323  002764  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7324  002768  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7325  00276C  0E0A               	movlw	10
  7326  00276E  6E09               	movwf	___aomod@divisor^0,c
  7327  002770  0E00               	movlw	0
  7328  002772  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7329  002774  0E00               	movlw	0
  7330  002776  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7331  002778  0E00               	movlw	0
  7332  00277A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7333  00277C  0E00               	movlw	0
  7334  00277E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7335  002780  0E00               	movlw	0
  7336  002782  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7337  002784  0E00               	movlw	0
  7338  002786  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7339  002788  0E00               	movlw	0
  7340  00278A  6E10               	movwf	(___aomod@divisor+7)^0,c
  7341  00278C  ECDE  F01B         	call	___aomod	;wreg free
  7342  002790  C001  F026         	movff	?___aomod,??_dtoa
  7343  002794  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7344  002798  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7345  00279C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7346  0027A0  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7347  0027A4  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7348  0027A8  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7349  0027AC  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7350  0027B0  C026  F013         	movff	??_dtoa,abs@a
  7351  0027B4  C028  F014         	movff	??_dtoa+2,abs@a+1
  7352  0027B8  ECE8  F022         	call	_abs	;wreg free
  7353  0027BC  5013               	movf	?_abs^0,w,c
  7354  0027BE  0F30               	addlw	48
  7355  0027C0  6EDF               	movwf	indf2,c
  7356  0027C2                     
  7357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7358  0027C2  0630               	decf	dtoa@p^0,f,c
  7359  0027C4  A0D8               	btfss	status,0,c
  7360  0027C6  0631               	decf	(dtoa@p+1)^0,f,c
  7361  0027C8                     
  7362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7363  0027C8  0632               	decf	dtoa@w^0,f,c
  7364  0027CA  A0D8               	btfss	status,0,c
  7365  0027CC  0633               	decf	(dtoa@w+1)^0,f,c
  7366  0027CE                     
  7367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7368  0027CE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7369  0027D2  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7370  0027D6  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7371  0027DA  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7372  0027DE  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7373  0027E2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7374  0027E6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7375  0027EA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7376  0027EE  0E0A               	movlw	10
  7377  0027F0  6E09               	movwf	___aodiv@divisor^0,c
  7378  0027F2  0E00               	movlw	0
  7379  0027F4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7380  0027F6  0E00               	movlw	0
  7381  0027F8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7382  0027FA  0E00               	movlw	0
  7383  0027FC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7384  0027FE  0E00               	movlw	0
  7385  002800  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7386  002802  0E00               	movlw	0
  7387  002804  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7388  002806  0E00               	movlw	0
  7389  002808  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7390  00280A  0E00               	movlw	0
  7391  00280C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7392  00280E  EC1A  F01B         	call	___aodiv	;wreg free
  7393  002812  C001  F036         	movff	?___aodiv,dtoa@n
  7394  002816  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7395  00281A  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7396  00281E  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7397  002822  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7398  002826  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7399  00282A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7400  00282E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7401  002832                     l4139:
  7402                           
  7403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7404  002832  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7405  002834  EF24  F014         	goto	u5051
  7406  002838  503F               	movf	(dtoa@i+1)^0,w,c
  7407  00283A  E108               	bnz	u5050
  7408  00283C  043E               	decf	dtoa@i^0,w,c
  7409  00283E  A0D8               	btfss	status,0,c
  7410  002840  EF24  F014         	goto	u5051
  7411  002844  EF26  F014         	goto	u5050
  7412  002848                     u5051:
  7413  002848  EF57  F014         	goto	l4149
  7414  00284C                     u5050:
  7415  00284C  5036               	movf	dtoa@n^0,w,c
  7416  00284E  1037               	iorwf	(dtoa@n+1)^0,w,c
  7417  002850  1038               	iorwf	(dtoa@n+2)^0,w,c
  7418  002852  1039               	iorwf	(dtoa@n+3)^0,w,c
  7419  002854  103A               	iorwf	(dtoa@n+4)^0,w,c
  7420  002856  103B               	iorwf	(dtoa@n+5)^0,w,c
  7421  002858  103C               	iorwf	(dtoa@n+6)^0,w,c
  7422  00285A  103D               	iorwf	(dtoa@n+7)^0,w,c
  7423  00285C  A4D8               	btfss	status,2,c
  7424  00285E  EF33  F014         	goto	u5061
  7425  002862  EF35  F014         	goto	u5060
  7426  002866                     u5061:
  7427  002866  EF9D  F013         	goto	l4129
  7428  00286A                     u5060:
  7429  00286A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7430  00286C  EF42  F014         	goto	u5070
  7431  002870  5031               	movf	(dtoa@p+1)^0,w,c
  7432  002872  E106               	bnz	u5071
  7433  002874  0430               	decf	dtoa@p^0,w,c
  7434  002876  B0D8               	btfsc	status,0,c
  7435  002878  EF40  F014         	goto	u5071
  7436  00287C  EF42  F014         	goto	u5070
  7437  002880                     u5071:
  7438  002880  EF9D  F013         	goto	l4129
  7439  002884                     u5070:
  7440  002884  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7441  002886  EF4D  F014         	goto	u5081
  7442  00288A  5033               	movf	(dtoa@w+1)^0,w,c
  7443  00288C  E108               	bnz	u5080
  7444  00288E  0432               	decf	dtoa@w^0,w,c
  7445  002890  A0D8               	btfss	status,0,c
  7446  002892  EF4D  F014         	goto	u5081
  7447  002896  EF4F  F014         	goto	u5080
  7448  00289A                     u5081:
  7449  00289A  EF57  F014         	goto	l4149
  7450  00289E                     u5080:
  7451  00289E  0100               	movlb	0	; () banked
  7452  0028A0  B3D7               	btfsc	_flags& (0+255),1,b
  7453  0028A2  EF55  F014         	goto	u5091
  7454  0028A6  EF57  F014         	goto	u5090
  7455  0028AA                     u5091:
  7456  0028AA  EF9D  F013         	goto	l4129
  7457  0028AE                     u5090:
  7458  0028AE                     l4149:
  7459                           
  7460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  7461  0028AE  5034               	movf	dtoa@s^0,w,c
  7462  0028B0  1035               	iorwf	(dtoa@s+1)^0,w,c
  7463  0028B2  A4D8               	btfss	status,2,c
  7464  0028B4  EF5E  F014         	goto	u5101
  7465  0028B8  EF60  F014         	goto	u5100
  7466  0028BC                     u5101:
  7467  0028BC  EF68  F014         	goto	l4153
  7468  0028C0                     u5100:
  7469  0028C0  0100               	movlb	0	; () banked
  7470  0028C2  A5D7               	btfss	_flags& (0+255),2,b
  7471  0028C4  EF66  F014         	goto	u5111
  7472  0028C8  EF68  F014         	goto	u5110
  7473  0028CC                     u5111:
  7474  0028CC  EF86  F014         	goto	l4163
  7475  0028D0                     u5110:
  7476  0028D0                     l4153:
  7477                           
  7478                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  7479  0028D0  063E               	decf	dtoa@i^0,f,c
  7480  0028D2  A0D8               	btfss	status,0,c
  7481  0028D4  063F               	decf	(dtoa@i+1)^0,f,c
  7482  0028D6                     
  7483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  7484  0028D6  5034               	movf	dtoa@s^0,w,c
  7485  0028D8  1035               	iorwf	(dtoa@s+1)^0,w,c
  7486  0028DA  A4D8               	btfss	status,2,c
  7487  0028DC  EF72  F014         	goto	u5121
  7488  0028E0  EF74  F014         	goto	u5120
  7489  0028E4                     u5121:
  7490  0028E4  EF7A  F014         	goto	l4159
  7491  0028E8                     u5120:
  7492  0028E8  0E00               	movlw	0
  7493  0028EA  6E2F               	movwf	(_dtoa$740+1)^0,c
  7494  0028EC  0E2B               	movlw	43
  7495  0028EE  6E2E               	movwf	_dtoa$740^0,c
  7496  0028F0  EF7E  F014         	goto	l4161
  7497  0028F4                     l4159:
  7498  0028F4  0E00               	movlw	0
  7499  0028F6  6E2F               	movwf	(_dtoa$740+1)^0,c
  7500  0028F8  0E2D               	movlw	45
  7501  0028FA  6E2E               	movwf	_dtoa$740^0,c
  7502  0028FC                     l4161:
  7503  0028FC  0E00               	movlw	low _dbuf
  7504  0028FE  243E               	addwf	dtoa@i^0,w,c
  7505  002900  6ED9               	movwf	fsr2l,c
  7506  002902  0E01               	movlw	high _dbuf
  7507  002904  203F               	addwfc	(dtoa@i+1)^0,w,c
  7508  002906  6EDA               	movwf	fsr2h,c
  7509  002908  C02E  FFDF         	movff	_dtoa$740,indf2
  7510  00290C                     l4163:
  7511                           
  7512                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  7513  00290C  C01C  F011         	movff	dtoa@fp,pad@fp
  7514  002910  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7515  002914  0E00               	movlw	low _dbuf
  7516  002916  243E               	addwf	dtoa@i^0,w,c
  7517  002918  6E13               	movwf	pad@buf^0,c
  7518  00291A  0E01               	movlw	high _dbuf
  7519  00291C  203F               	addwfc	(dtoa@i+1)^0,w,c
  7520  00291E  6E14               	movwf	(pad@buf+1)^0,c
  7521  002920  C032  F015         	movff	dtoa@w,pad@p
  7522  002924  C033  F016         	movff	dtoa@w+1,pad@p+1
  7523  002928  EC8F  F01F         	call	_pad	;wreg free
  7524  00292C  C011  F01C         	movff	?_pad,?_dtoa
  7525  002930  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7526  002934  0012               	return		;funcret
  7527  002936                     __end_of_dtoa:
  7528                           	callstack 0
  7529                           
  7530 ;; *************** function _pad *****************
  7531 ;; Defined at:
  7532 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7535 ;;		 -> sprintf@f(6), 
  7536 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7537 ;;		 -> dbuf(80), 
  7538 ;;  p               2   20[COMRAM] int 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;  w               2   25[COMRAM] int 
  7541 ;;  i               2   23[COMRAM] int 
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  2   16[COMRAM] int 
  7544 ;; Registers used:
  7545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 0/0
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7551 ;;      Params:         6       0       0       0       0       0       0       0       0
  7552 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7553 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7554 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7555 ;;Total ram usage:       11 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:    3
  7558 ;; This function calls:
  7559 ;;		_fputc
  7560 ;;		_fputs
  7561 ;;		_strlen
  7562 ;; This function is called by:
  7563 ;;		_dtoa
  7564 ;;		_efgtoa
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text22
  7569  003F1E                     __ptext22:
  7570                           	callstack 0
  7571  003F1E                     _pad:
  7572                           	callstack 23
  7573  003F1E                     
  7574                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7575  003F1E  0100               	movlb	0	; () banked
  7576  003F20  A1D7               	btfss	_flags& (0+255),0,b
  7577  003F22  EF95  F01F         	goto	u4651
  7578  003F26  EF97  F01F         	goto	u4650
  7579  003F2A                     u4651:
  7580  003F2A  EFA1  F01F         	goto	l3987
  7581  003F2E                     u4650:
  7582  003F2E                     
  7583                           ; BSR set to: 0
  7584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7585  003F2E  C013  F00A         	movff	pad@buf,fputs@s
  7586  003F32  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7587  003F36  C011  F00C         	movff	pad@fp,fputs@fp
  7588  003F3A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7589  003F3E  ECA5  F022         	call	_fputs	;wreg free
  7590  003F42                     l3987:
  7591                           
  7592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7593  003F42  BE16               	btfsc	(pad@p+1)^0,7,c
  7594  003F44  EFA6  F01F         	goto	u4661
  7595  003F48  EFA8  F01F         	goto	u4660
  7596  003F4C                     u4661:
  7597  003F4C  EFAE  F01F         	goto	l3991
  7598  003F50                     u4660:
  7599  003F50  C015  F01A         	movff	pad@p,pad@w
  7600  003F54  C016  F01B         	movff	pad@p+1,pad@w+1
  7601  003F58  EFB2  F01F         	goto	l908
  7602  003F5C                     l3991:
  7603  003F5C  0E00               	movlw	0
  7604  003F5E  6E1B               	movwf	(pad@w+1)^0,c
  7605  003F60  0E00               	movlw	0
  7606  003F62  6E1A               	movwf	pad@w^0,c
  7607  003F64                     l908:
  7608                           
  7609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7610  003F64  0E00               	movlw	0
  7611  003F66  6E19               	movwf	(pad@i+1)^0,c
  7612  003F68  0E00               	movlw	0
  7613  003F6A  6E18               	movwf	pad@i^0,c
  7614                           
  7615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7616  003F6C  EFC4  F01F         	goto	l3997
  7617  003F70                     l3993:
  7618                           
  7619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7620  003F70  0E00               	movlw	0
  7621  003F72  6E02               	movwf	(fputc@c+1)^0,c
  7622  003F74  0E20               	movlw	32
  7623  003F76  6E01               	movwf	fputc@c^0,c
  7624  003F78  C011  F003         	movff	pad@fp,fputc@fp
  7625  003F7C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7626  003F80  EC2A  F01F         	call	_fputc	;wreg free
  7627  003F84                     
  7628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7629  003F84  4A18               	infsnz	pad@i^0,f,c
  7630  003F86  2A19               	incf	(pad@i+1)^0,f,c
  7631  003F88                     l3997:
  7632                           
  7633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7634  003F88  501A               	movf	pad@w^0,w,c
  7635  003F8A  5C18               	subwf	pad@i^0,w,c
  7636  003F8C  5019               	movf	(pad@i+1)^0,w,c
  7637  003F8E  0A80               	xorlw	128
  7638  003F90  6E17               	movwf	??_pad^0,c
  7639  003F92  501B               	movf	(pad@w+1)^0,w,c
  7640  003F94  0A80               	xorlw	128
  7641  003F96  5817               	subwfb	??_pad^0,w,c
  7642  003F98  A0D8               	btfss	status,0,c
  7643  003F9A  EFD1  F01F         	goto	u4671
  7644  003F9E  EFD3  F01F         	goto	u4670
  7645  003FA2                     u4671:
  7646  003FA2  EFB8  F01F         	goto	l3993
  7647  003FA6                     u4670:
  7648  003FA6                     
  7649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7650  003FA6  0100               	movlb	0	; () banked
  7651  003FA8  B1D7               	btfsc	_flags& (0+255),0,b
  7652  003FAA  EFD9  F01F         	goto	u4681
  7653  003FAE  EFDB  F01F         	goto	u4680
  7654  003FB2                     u4681:
  7655  003FB2  EFE5  F01F         	goto	l4001
  7656  003FB6                     u4680:
  7657  003FB6                     
  7658                           ; BSR set to: 0
  7659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7660  003FB6  C013  F00A         	movff	pad@buf,fputs@s
  7661  003FBA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7662  003FBE  C011  F00C         	movff	pad@fp,fputs@fp
  7663  003FC2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7664  003FC6  ECA5  F022         	call	_fputs	;wreg free
  7665  003FCA                     l4001:
  7666                           
  7667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  7668  003FCA  C013  F001         	movff	pad@buf,strlen@s
  7669  003FCE  C014  F002         	movff	pad@buf+1,strlen@s+1
  7670  003FD2  EC7C  F023         	call	_strlen	;wreg free
  7671  003FD6  501A               	movf	pad@w^0,w,c
  7672  003FD8  2401               	addwf	?_strlen^0,w,c
  7673  003FDA  6E11               	movwf	?_pad^0,c
  7674  003FDC  501B               	movf	(pad@w+1)^0,w,c
  7675  003FDE  2002               	addwfc	(?_strlen+1)^0,w,c
  7676  003FE0  6E12               	movwf	(?_pad+1)^0,c
  7677  003FE2  0012               	return		;funcret
  7678  003FE4                     __end_of_pad:
  7679                           	callstack 0
  7680                           
  7681 ;; *************** function _strlen *****************
  7682 ;; Defined at:
  7683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7686 ;;		 -> dbuf(80), 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7689 ;;		 -> dbuf(80), 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  2    0[COMRAM] unsigned int 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7699 ;;      Params:         2       0       0       0       0       0       0       0       0
  7700 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7702 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7703 ;;Total ram usage:        4 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; This function calls:
  7706 ;;		Nothing
  7707 ;; This function is called by:
  7708 ;;		_pad
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text23
  7713  0046F8                     __ptext23:
  7714                           	callstack 0
  7715  0046F8                     _strlen:
  7716                           	callstack 25
  7717  0046F8  C001  F003         	movff	strlen@s,strlen@a
  7718  0046FC  C002  F004         	movff	strlen@s+1,strlen@a+1
  7719  004700  EF84  F023         	goto	l3443
  7720  004704                     l3441:
  7721  004704  4A01               	infsnz	strlen@s^0,f,c
  7722  004706  2A02               	incf	(strlen@s+1)^0,f,c
  7723  004708                     l3443:
  7724  004708  C001  FFD9         	movff	strlen@s,fsr2l
  7725  00470C  C002  FFDA         	movff	strlen@s+1,fsr2h
  7726  004710  50DF               	movf	indf2,w,c
  7727  004712  A4D8               	btfss	status,2,c
  7728  004714  EF8E  F023         	goto	u3791
  7729  004718  EF90  F023         	goto	u3790
  7730  00471C                     u3791:
  7731  00471C  EF82  F023         	goto	l3441
  7732  004720                     u3790:
  7733  004720  5003               	movf	strlen@a^0,w,c
  7734  004722  5C01               	subwf	strlen@s^0,w,c
  7735  004724  6E01               	movwf	?_strlen^0,c
  7736  004726  5004               	movf	(strlen@a+1)^0,w,c
  7737  004728  5802               	subwfb	(strlen@s+1)^0,w,c
  7738  00472A  6E02               	movwf	(?_strlen+1)^0,c
  7739  00472C  0012               	return		;funcret
  7740  00472E                     __end_of_strlen:
  7741                           	callstack 0
  7742                           
  7743 ;; *************** function _fputs *****************
  7744 ;; Defined at:
  7745 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7748 ;;		 -> dbuf(80), 
  7749 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7750 ;;		 -> sprintf@f(6), 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  i               2   14[COMRAM] int 
  7753 ;;  c               1   13[COMRAM] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  2    9[COMRAM] int 
  7756 ;; Registers used:
  7757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7763 ;;      Params:         4       0       0       0       0       0       0       0       0
  7764 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7766 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7767 ;;Total ram usage:        7 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    2
  7770 ;; This function calls:
  7771 ;;		_fputc
  7772 ;; This function is called by:
  7773 ;;		_pad
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           	psect	text24
  7778  00454A                     __ptext24:
  7779                           	callstack 0
  7780  00454A                     _fputs:
  7781                           	callstack 23
  7782  00454A  0E00               	movlw	0
  7783  00454C  6E10               	movwf	(fputs@i+1)^0,c
  7784  00454E  0E00               	movlw	0
  7785  004550  6E0F               	movwf	fputs@i^0,c
  7786  004552  EFB6  F022         	goto	l3437
  7787  004556                     l3433:
  7788  004556  C00E  F001         	movff	fputs@c,fputc@c
  7789  00455A  6A02               	clrf	(fputc@c+1)^0,c
  7790  00455C  C00C  F003         	movff	fputs@fp,fputc@fp
  7791  004560  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7792  004564  EC2A  F01F         	call	_fputc	;wreg free
  7793  004568  4A0F               	infsnz	fputs@i^0,f,c
  7794  00456A  2A10               	incf	(fputs@i+1)^0,f,c
  7795  00456C                     l3437:
  7796  00456C  500F               	movf	fputs@i^0,w,c
  7797  00456E  240A               	addwf	fputs@s^0,w,c
  7798  004570  6ED9               	movwf	fsr2l,c
  7799  004572  5010               	movf	(fputs@i+1)^0,w,c
  7800  004574  200B               	addwfc	(fputs@s+1)^0,w,c
  7801  004576  6EDA               	movwf	fsr2h,c
  7802  004578  50DF               	movf	indf2,w,c
  7803  00457A  6E0E               	movwf	fputs@c^0,c
  7804  00457C  500E               	movf	fputs@c^0,w,c
  7805  00457E  A4D8               	btfss	status,2,c
  7806  004580  EFC4  F022         	goto	u3781
  7807  004584  EFC6  F022         	goto	u3780
  7808  004588                     u3781:
  7809  004588  EFAB  F022         	goto	l3433
  7810  00458C                     u3780:
  7811  00458C  0012               	return		;funcret
  7812  00458E                     __end_of_fputs:
  7813                           	callstack 0
  7814                           
  7815 ;; *************** function _fputc *****************
  7816 ;; Defined at:
  7817 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  c               2    0[COMRAM] int 
  7820 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7821 ;;		 -> sprintf@f(6), 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;		None
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  2    0[COMRAM] int 
  7826 ;; Registers used:
  7827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7833 ;;      Params:         4       0       0       0       0       0       0       0       0
  7834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7835 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7836 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7837 ;;Total ram usage:        9 bytes
  7838 ;; Hardware stack levels used:    1
  7839 ;; Hardware stack levels required when called:    1
  7840 ;; This function calls:
  7841 ;;		_putch
  7842 ;; This function is called by:
  7843 ;;		_pad
  7844 ;;		_vfpfcnvrt
  7845 ;;		_fputs
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text25
  7850  003E54                     __ptext25:
  7851                           	callstack 0
  7852  003E54                     _fputc:
  7853                           	callstack 26
  7854  003E54  5003               	movf	fputc@fp^0,w,c
  7855  003E56  1004               	iorwf	(fputc@fp+1)^0,w,c
  7856  003E58  B4D8               	btfsc	status,2,c
  7857  003E5A  EF31  F01F         	goto	u3351
  7858  003E5E  EF33  F01F         	goto	u3350
  7859  003E62                     u3351:
  7860  003E62  EF3C  F01F         	goto	l3219
  7861  003E66                     u3350:
  7862  003E66  5003               	movf	fputc@fp^0,w,c
  7863  003E68  1004               	iorwf	(fputc@fp+1)^0,w,c
  7864  003E6A  A4D8               	btfss	status,2,c
  7865  003E6C  EF3A  F01F         	goto	u3361
  7866  003E70  EF3C  F01F         	goto	u3360
  7867  003E74                     u3361:
  7868  003E74  EF41  F01F         	goto	l3221
  7869  003E78                     u3360:
  7870  003E78                     l3219:
  7871  003E78  5001               	movf	fputc@c^0,w,c
  7872  003E7A  ECC9  F023         	call	_putch
  7873  003E7E  EF8E  F01F         	goto	l1170
  7874  003E82                     l3221:
  7875  003E82  EE20 F004          	lfsr	2,4
  7876  003E86  5003               	movf	fputc@fp^0,w,c
  7877  003E88  26D9               	addwf	fsr2l,f,c
  7878  003E8A  5004               	movf	(fputc@fp+1)^0,w,c
  7879  003E8C  22DA               	addwfc	fsr2h,f,c
  7880  003E8E  50DE               	movf	postinc2,w,c
  7881  003E90  10DE               	iorwf	postinc2,w,c
  7882  003E92  B4D8               	btfsc	status,2,c
  7883  003E94  EF4E  F01F         	goto	u3371
  7884  003E98  EF50  F01F         	goto	u3370
  7885  003E9C                     u3371:
  7886  003E9C  EF6B  F01F         	goto	l3225
  7887  003EA0                     u3370:
  7888  003EA0  EE20 F004          	lfsr	2,4
  7889  003EA4  5003               	movf	fputc@fp^0,w,c
  7890  003EA6  26D9               	addwf	fsr2l,f,c
  7891  003EA8  5004               	movf	(fputc@fp+1)^0,w,c
  7892  003EAA  22DA               	addwfc	fsr2h,f,c
  7893  003EAC  EE10 F002          	lfsr	1,2
  7894  003EB0  5003               	movf	fputc@fp^0,w,c
  7895  003EB2  26E1               	addwf	fsr1l,f,c
  7896  003EB4  5004               	movf	(fputc@fp+1)^0,w,c
  7897  003EB6  22E2               	addwfc	fsr1h,f,c
  7898  003EB8  50DE               	movf	postinc2,w,c
  7899  003EBA  5CE6               	subwf	postinc1,w,c
  7900  003EBC  50E6               	movf	postinc1,w,c
  7901  003EBE  0A80               	xorlw	128
  7902  003EC0  6E09               	movwf	(??_fputc+4)^0,c
  7903  003EC2  50DE               	movf	postinc2,w,c
  7904  003EC4  0A80               	xorlw	128
  7905  003EC6  5809               	subwfb	(??_fputc+4)^0,w,c
  7906  003EC8  B0D8               	btfsc	status,0,c
  7907  003ECA  EF69  F01F         	goto	u3381
  7908  003ECE  EF6B  F01F         	goto	u3380
  7909  003ED2                     u3381:
  7910  003ED2  EF8E  F01F         	goto	l1170
  7911  003ED6                     u3380:
  7912  003ED6                     l3225:
  7913  003ED6  EE20 F002          	lfsr	2,2
  7914  003EDA  5003               	movf	fputc@fp^0,w,c
  7915  003EDC  26D9               	addwf	fsr2l,f,c
  7916  003EDE  5004               	movf	(fputc@fp+1)^0,w,c
  7917  003EE0  22DA               	addwfc	fsr2h,f,c
  7918  003EE2  CFDE F005          	movff	postinc2,??_fputc
  7919  003EE6  CFDD F006          	movff	postdec2,??_fputc+1
  7920  003EEA  C003  FFD9         	movff	fputc@fp,fsr2l
  7921  003EEE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7922  003EF2  CFDE F007          	movff	postinc2,??_fputc+2
  7923  003EF6  CFDD F008          	movff	postdec2,??_fputc+3
  7924  003EFA  5005               	movf	??_fputc^0,w,c
  7925  003EFC  2407               	addwf	(??_fputc+2)^0,w,c
  7926  003EFE  6ED9               	movwf	fsr2l,c
  7927  003F00  5006               	movf	(??_fputc+1)^0,w,c
  7928  003F02  2008               	addwfc	(??_fputc+3)^0,w,c
  7929  003F04  6EDA               	movwf	fsr2h,c
  7930  003F06  C001  FFDF         	movff	fputc@c,indf2
  7931  003F0A  EE20 F002          	lfsr	2,2
  7932  003F0E  5003               	movf	fputc@fp^0,w,c
  7933  003F10  26D9               	addwf	fsr2l,f,c
  7934  003F12  5004               	movf	(fputc@fp+1)^0,w,c
  7935  003F14  22DA               	addwfc	fsr2h,f,c
  7936  003F16  2ADE               	incf	postinc2,f,c
  7937  003F18  0E00               	movlw	0
  7938  003F1A  22DD               	addwfc	postdec2,f,c
  7939  003F1C                     l1170:
  7940  003F1C  0012               	return		;funcret
  7941  003F1E                     __end_of_fputc:
  7942                           	callstack 0
  7943                           
  7944 ;; *************** function _putch *****************
  7945 ;; Defined at:
  7946 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  c               1    wreg     unsigned char 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;  c               1    0[COMRAM] unsigned char 
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      void 
  7953 ;; Registers used:
  7954 ;;		wreg
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7960 ;;      Params:         0       0       0       0       0       0       0       0       0
  7961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7962 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7963 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7964 ;;Total ram usage:        0 bytes
  7965 ;; Hardware stack levels used:    1
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_fputc
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text26
  7974  004792                     __ptext26:
  7975                           	callstack 0
  7976  004792                     _putch:
  7977                           	callstack 26
  7978  004792  0012               	return		;funcret
  7979  004794                     __end_of_putch:
  7980                           	callstack 0
  7981                           
  7982 ;; *************** function _abs *****************
  7983 ;; Defined at:
  7984 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  a               2   18[COMRAM] int 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  2   18[COMRAM] int 
  7991 ;; Registers used:
  7992 ;;		wreg, status,2, status,0
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7998 ;;      Params:         2       0       0       0       0       0       0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8000 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8001 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8002 ;;Total ram usage:        4 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_dtoa
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text27
  8012  0045D0                     __ptext27:
  8013                           	callstack 0
  8014  0045D0                     _abs:
  8015                           	callstack 26
  8016  0045D0  BE14               	btfsc	(abs@a+1)^0,7,c
  8017  0045D2  EFF5  F022         	goto	u4690
  8018  0045D6  5014               	movf	(abs@a+1)^0,w,c
  8019  0045D8  E106               	bnz	u4691
  8020  0045DA  0413               	decf	abs@a^0,w,c
  8021  0045DC  B0D8               	btfsc	status,0,c
  8022  0045DE  EFF3  F022         	goto	u4691
  8023  0045E2  EFF5  F022         	goto	u4690
  8024  0045E6                     u4691:
  8025  0045E6  EF03  F023         	goto	l1091
  8026  0045EA                     u4690:
  8027  0045EA  C013  F015         	movff	abs@a,??_abs
  8028  0045EE  C014  F016         	movff	abs@a+1,??_abs+1
  8029  0045F2  1E15               	comf	??_abs^0,f,c
  8030  0045F4  1E16               	comf	(??_abs+1)^0,f,c
  8031  0045F6  4A15               	infsnz	??_abs^0,f,c
  8032  0045F8  2A16               	incf	(??_abs+1)^0,f,c
  8033  0045FA  C015  F013         	movff	??_abs,?_abs
  8034  0045FE  C016  F014         	movff	??_abs+1,?_abs+1
  8035  004602  EF07  F023         	goto	l1094
  8036  004606                     l1091:
  8037  004606  C013  F013         	movff	abs@a,?_abs
  8038  00460A  C014  F014         	movff	abs@a+1,?_abs+1
  8039  00460E                     l1094:
  8040  00460E  0012               	return		;funcret
  8041  004610                     __end_of_abs:
  8042                           	callstack 0
  8043                           
  8044 ;; *************** function ___aomod *****************
  8045 ;; Defined at:
  8046 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;  dividend        8    0[COMRAM] long long 
  8049 ;;  divisor         8    8[COMRAM] long long 
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  sign            1   17[COMRAM] unsigned char 
  8052 ;;  counter         1   16[COMRAM] unsigned char 
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  8    0[COMRAM] long long 
  8055 ;; Registers used:
  8056 ;;		wreg, status,2, status,0
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8062 ;;      Params:        16       0       0       0       0       0       0       0       0
  8063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8065 ;;      Totals:        18       0       0       0       0       0       0       0       0
  8066 ;;Total ram usage:       18 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; This function calls:
  8069 ;;		Nothing
  8070 ;; This function is called by:
  8071 ;;		_dtoa
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text28
  8076  0037BC                     __ptext28:
  8077                           	callstack 0
  8078  0037BC                     ___aomod:
  8079                           	callstack 26
  8080  0037BC  0E00               	movlw	0
  8081  0037BE  6E12               	movwf	___aomod@sign^0,c
  8082  0037C0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8083  0037C2  EFE7  F01B         	goto	u3890
  8084  0037C6  EFE5  F01B         	goto	u3891
  8085  0037CA                     u3891:
  8086  0037CA  EFF9  F01B         	goto	l3511
  8087  0037CE                     u3890:
  8088  0037CE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8089  0037D0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8090  0037D2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8091  0037D4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8092  0037D6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8093  0037D8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8094  0037DA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8095  0037DC  6C01               	negf	___aomod@dividend^0,c
  8096  0037DE  0E00               	movlw	0
  8097  0037E0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8098  0037E2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8099  0037E4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8100  0037E6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8101  0037E8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8102  0037EA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8103  0037EC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8104  0037EE  0E01               	movlw	1
  8105  0037F0  6E12               	movwf	___aomod@sign^0,c
  8106  0037F2                     l3511:
  8107  0037F2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8108  0037F4  EF00  F01C         	goto	u3900
  8109  0037F8  EFFE  F01B         	goto	u3901
  8110  0037FC                     u3901:
  8111  0037FC  EF10  F01C         	goto	l3515
  8112  003800                     u3900:
  8113  003800  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8114  003802  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8115  003804  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8116  003806  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8117  003808  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8118  00380A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8119  00380C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8120  00380E  6C09               	negf	___aomod@divisor^0,c
  8121  003810  0E00               	movlw	0
  8122  003812  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8123  003814  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8124  003816  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8125  003818  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8126  00381A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8127  00381C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8128  00381E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8129  003820                     l3515:
  8130  003820  5009               	movf	___aomod@divisor^0,w,c
  8131  003822  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8132  003824  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8133  003826  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8134  003828  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8135  00382A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8136  00382C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8137  00382E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8138  003830  B4D8               	btfsc	status,2,c
  8139  003832  EF1D  F01C         	goto	u3911
  8140  003836  EF1F  F01C         	goto	u3910
  8141  00383A                     u3911:
  8142  00383A  EF67  F01C         	goto	l3531
  8143  00383E                     u3910:
  8144  00383E  0E01               	movlw	1
  8145  003840  6E11               	movwf	___aomod@counter^0,c
  8146  003842  EF2D  F01C         	goto	l3521
  8147  003846                     l3519:
  8148  003846  90D8               	bcf	status,0,c
  8149  003848  3609               	rlcf	___aomod@divisor^0,f,c
  8150  00384A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8151  00384C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8152  00384E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8153  003850  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8154  003852  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8155  003854  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8156  003856  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8157  003858  2A11               	incf	___aomod@counter^0,f,c
  8158  00385A                     l3521:
  8159  00385A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8160  00385C  EF32  F01C         	goto	u3921
  8161  003860  EF34  F01C         	goto	u3920
  8162  003864                     u3921:
  8163  003864  EF23  F01C         	goto	l3519
  8164  003868                     u3920:
  8165  003868                     l3523:
  8166  003868  5009               	movf	___aomod@divisor^0,w,c
  8167  00386A  5C01               	subwf	___aomod@dividend^0,w,c
  8168  00386C  500A               	movf	(___aomod@divisor+1)^0,w,c
  8169  00386E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8170  003870  500B               	movf	(___aomod@divisor+2)^0,w,c
  8171  003872  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8172  003874  500C               	movf	(___aomod@divisor+3)^0,w,c
  8173  003876  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8174  003878  500D               	movf	(___aomod@divisor+4)^0,w,c
  8175  00387A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8176  00387C  500E               	movf	(___aomod@divisor+5)^0,w,c
  8177  00387E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8178  003880  500F               	movf	(___aomod@divisor+6)^0,w,c
  8179  003882  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8180  003884  5010               	movf	(___aomod@divisor+7)^0,w,c
  8181  003886  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8182  003888  A0D8               	btfss	status,0,c
  8183  00388A  EF49  F01C         	goto	u3931
  8184  00388E  EF4B  F01C         	goto	u3930
  8185  003892                     u3931:
  8186  003892  EF5B  F01C         	goto	l3527
  8187  003896                     u3930:
  8188  003896  5009               	movf	___aomod@divisor^0,w,c
  8189  003898  5E01               	subwf	___aomod@dividend^0,f,c
  8190  00389A  500A               	movf	(___aomod@divisor+1)^0,w,c
  8191  00389C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8192  00389E  500B               	movf	(___aomod@divisor+2)^0,w,c
  8193  0038A0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8194  0038A2  500C               	movf	(___aomod@divisor+3)^0,w,c
  8195  0038A4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8196  0038A6  500D               	movf	(___aomod@divisor+4)^0,w,c
  8197  0038A8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8198  0038AA  500E               	movf	(___aomod@divisor+5)^0,w,c
  8199  0038AC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8200  0038AE  500F               	movf	(___aomod@divisor+6)^0,w,c
  8201  0038B0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8202  0038B2  5010               	movf	(___aomod@divisor+7)^0,w,c
  8203  0038B4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8204  0038B6                     l3527:
  8205  0038B6  90D8               	bcf	status,0,c
  8206  0038B8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8207  0038BA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8208  0038BC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8209  0038BE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8210  0038C0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8211  0038C2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8212  0038C4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8213  0038C6  3209               	rrcf	___aomod@divisor^0,f,c
  8214  0038C8  2E11               	decfsz	___aomod@counter^0,f,c
  8215  0038CA  EF34  F01C         	goto	l3523
  8216  0038CE                     l3531:
  8217  0038CE  5012               	movf	___aomod@sign^0,w,c
  8218  0038D0  B4D8               	btfsc	status,2,c
  8219  0038D2  EF6D  F01C         	goto	u3941
  8220  0038D6  EF6F  F01C         	goto	u3940
  8221  0038DA                     u3941:
  8222  0038DA  EF7F  F01C         	goto	l3535
  8223  0038DE                     u3940:
  8224  0038DE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8225  0038E0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8226  0038E2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8227  0038E4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8228  0038E6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8229  0038E8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8230  0038EA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8231  0038EC  6C01               	negf	___aomod@dividend^0,c
  8232  0038EE  0E00               	movlw	0
  8233  0038F0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8234  0038F2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8235  0038F4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8236  0038F6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8237  0038F8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8238  0038FA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8239  0038FC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8240  0038FE                     l3535:
  8241  0038FE  C001  F001         	movff	___aomod@dividend,?___aomod
  8242  003902  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8243  003906  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8244  00390A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8245  00390E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8246  003912  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8247  003916  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8248  00391A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8249  00391E  0012               	return		;funcret
  8250  003920                     __end_of___aomod:
  8251                           	callstack 0
  8252                           
  8253 ;; *************** function ___aodiv *****************
  8254 ;; Defined at:
  8255 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  dividend        8    0[COMRAM] long long 
  8258 ;;  divisor         8    8[COMRAM] long long 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  quotient        8   18[COMRAM] long long 
  8261 ;;  sign            1   17[COMRAM] unsigned char 
  8262 ;;  counter         1   16[COMRAM] unsigned char 
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  8    0[COMRAM] long long 
  8265 ;; Registers used:
  8266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8272 ;;      Params:        16       0       0       0       0       0       0       0       0
  8273 ;;      Locals:        10       0       0       0       0       0       0       0       0
  8274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8275 ;;      Totals:        26       0       0       0       0       0       0       0       0
  8276 ;;Total ram usage:       26 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		_dtoa
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text29
  8286  003634                     __ptext29:
  8287                           	callstack 0
  8288  003634                     ___aodiv:
  8289                           	callstack 26
  8290  003634  0E00               	movlw	0
  8291  003636  6E12               	movwf	___aodiv@sign^0,c
  8292  003638  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8293  00363A  EF23  F01B         	goto	u3820
  8294  00363E  EF21  F01B         	goto	u3821
  8295  003642                     u3821:
  8296  003642  EF35  F01B         	goto	l3467
  8297  003646                     u3820:
  8298  003646  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8299  003648  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8300  00364A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8301  00364C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8302  00364E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8303  003650  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8304  003652  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8305  003654  6C09               	negf	___aodiv@divisor^0,c
  8306  003656  0E00               	movlw	0
  8307  003658  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8308  00365A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8309  00365C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8310  00365E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8311  003660  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8312  003662  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8313  003664  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8314  003666  0E01               	movlw	1
  8315  003668  6E12               	movwf	___aodiv@sign^0,c
  8316  00366A                     l3467:
  8317  00366A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8318  00366C  EF3C  F01B         	goto	u3830
  8319  003670  EF3A  F01B         	goto	u3831
  8320  003674                     u3831:
  8321  003674  EF4E  F01B         	goto	l3473
  8322  003678                     u3830:
  8323  003678  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8324  00367A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8325  00367C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8326  00367E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8327  003680  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8328  003682  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8329  003684  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8330  003686  6C01               	negf	___aodiv@dividend^0,c
  8331  003688  0E00               	movlw	0
  8332  00368A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8333  00368C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8334  00368E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8335  003690  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8336  003692  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8337  003694  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8338  003696  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8339  003698  0E01               	movlw	1
  8340  00369A  1A12               	xorwf	___aodiv@sign^0,f,c
  8341  00369C                     l3473:
  8342  00369C  EE20  F013         	lfsr	2,___aodiv@quotient
  8343  0036A0  0E07               	movlw	7
  8344  0036A2                     u3841:
  8345  0036A2  6ADE               	clrf	postinc2,c
  8346  0036A4  06E8               	decf	wreg,f,c
  8347  0036A6  E2FD               	bc	u3841
  8348  0036A8  5009               	movf	___aodiv@divisor^0,w,c
  8349  0036AA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8350  0036AC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8351  0036AE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8352  0036B0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8353  0036B2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8354  0036B4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8355  0036B6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8356  0036B8  B4D8               	btfsc	status,2,c
  8357  0036BA  EF61  F01B         	goto	u3851
  8358  0036BE  EF63  F01B         	goto	u3850
  8359  0036C2                     u3851:
  8360  0036C2  EFB5  F01B         	goto	l3495
  8361  0036C6                     u3850:
  8362  0036C6  0E01               	movlw	1
  8363  0036C8  6E11               	movwf	___aodiv@counter^0,c
  8364  0036CA  EF71  F01B         	goto	l3481
  8365  0036CE                     l3479:
  8366  0036CE  90D8               	bcf	status,0,c
  8367  0036D0  3609               	rlcf	___aodiv@divisor^0,f,c
  8368  0036D2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8369  0036D4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8370  0036D6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8371  0036D8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8372  0036DA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8373  0036DC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8374  0036DE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8375  0036E0  2A11               	incf	___aodiv@counter^0,f,c
  8376  0036E2                     l3481:
  8377  0036E2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8378  0036E4  EF76  F01B         	goto	u3861
  8379  0036E8  EF78  F01B         	goto	u3860
  8380  0036EC                     u3861:
  8381  0036EC  EF67  F01B         	goto	l3479
  8382  0036F0                     u3860:
  8383  0036F0                     l3483:
  8384  0036F0  90D8               	bcf	status,0,c
  8385  0036F2  3613               	rlcf	___aodiv@quotient^0,f,c
  8386  0036F4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8387  0036F6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8388  0036F8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8389  0036FA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8390  0036FC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8391  0036FE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8392  003700  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8393  003702  5009               	movf	___aodiv@divisor^0,w,c
  8394  003704  5C01               	subwf	___aodiv@dividend^0,w,c
  8395  003706  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8396  003708  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8397  00370A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8398  00370C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8399  00370E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8400  003710  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8401  003712  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8402  003714  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8403  003716  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8404  003718  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8405  00371A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8406  00371C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8407  00371E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8408  003720  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8409  003722  A0D8               	btfss	status,0,c
  8410  003724  EF96  F01B         	goto	u3871
  8411  003728  EF98  F01B         	goto	u3870
  8412  00372C                     u3871:
  8413  00372C  EFA9  F01B         	goto	l3491
  8414  003730                     u3870:
  8415  003730  5009               	movf	___aodiv@divisor^0,w,c
  8416  003732  5E01               	subwf	___aodiv@dividend^0,f,c
  8417  003734  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8418  003736  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8419  003738  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8420  00373A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8421  00373C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8422  00373E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8423  003740  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8424  003742  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8425  003744  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8426  003746  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8427  003748  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8428  00374A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8429  00374C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8430  00374E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8431  003750  8013               	bsf	___aodiv@quotient^0,0,c
  8432  003752                     l3491:
  8433  003752  90D8               	bcf	status,0,c
  8434  003754  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8435  003756  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8436  003758  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8437  00375A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8438  00375C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8439  00375E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8440  003760  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8441  003762  3209               	rrcf	___aodiv@divisor^0,f,c
  8442  003764  2E11               	decfsz	___aodiv@counter^0,f,c
  8443  003766  EF78  F01B         	goto	l3483
  8444  00376A                     l3495:
  8445  00376A  5012               	movf	___aodiv@sign^0,w,c
  8446  00376C  B4D8               	btfsc	status,2,c
  8447  00376E  EFBB  F01B         	goto	u3881
  8448  003772  EFBD  F01B         	goto	u3880
  8449  003776                     u3881:
  8450  003776  EFCD  F01B         	goto	l3499
  8451  00377A                     u3880:
  8452  00377A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8453  00377C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8454  00377E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8455  003780  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8456  003782  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8457  003784  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8458  003786  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8459  003788  6C13               	negf	___aodiv@quotient^0,c
  8460  00378A  0E00               	movlw	0
  8461  00378C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8462  00378E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8463  003790  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8464  003792  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8465  003794  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8466  003796  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8467  003798  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8468  00379A                     l3499:
  8469  00379A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8470  00379E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8471  0037A2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8472  0037A6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8473  0037AA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8474  0037AE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8475  0037B2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8476  0037B6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8477  0037BA  0012               	return		;funcret
  8478  0037BC                     __end_of___aodiv:
  8479                           	callstack 0
  8480                           
  8481 ;; *************** function _atoi *****************
  8482 ;; Defined at:
  8483 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8486 ;;		 -> STR_3(6), STR_2(3), 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  n               2   20[COMRAM] int 
  8489 ;;  neg             2   13[COMRAM] int 
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  2    7[COMRAM] int 
  8492 ;; Registers used:
  8493 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8499 ;;      Params:         2       0       0       0       0       0       0       0       0
  8500 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8501 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8502 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8503 ;;Total ram usage:       15 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; Hardware stack levels required when called:    1
  8506 ;; This function calls:
  8507 ;;		___wmul
  8508 ;;		_isdigit
  8509 ;;		_isspace
  8510 ;; This function is called by:
  8511 ;;		_vfpfcnvrt
  8512 ;; This function uses a non-reentrant model
  8513 ;;
  8514                           
  8515                           	psect	text30
  8516  0034A4                     __ptext30:
  8517                           	callstack 0
  8518  0034A4                     _atoi:
  8519                           	callstack 26
  8520  0034A4  0E00               	movlw	0
  8521  0034A6  6E16               	movwf	(atoi@n+1)^0,c
  8522  0034A8  0E00               	movlw	0
  8523  0034AA  6E15               	movwf	atoi@n^0,c
  8524  0034AC  0E00               	movlw	0
  8525  0034AE  6E0F               	movwf	(atoi@neg+1)^0,c
  8526  0034B0  0E00               	movlw	0
  8527  0034B2  6E0E               	movwf	atoi@neg^0,c
  8528  0034B4  EF5E  F01A         	goto	l4469
  8529  0034B8                     l4467:
  8530  0034B8  4A08               	infsnz	atoi@s^0,f,c
  8531  0034BA  2A09               	incf	(atoi@s+1)^0,f,c
  8532  0034BC                     l4469:
  8533  0034BC  0E01               	movlw	1
  8534  0034BE  6E14               	movwf	_atoi$831^0,c
  8535  0034C0  C008  FFF6         	movff	atoi@s,tblptrl
  8536  0034C4  C009  FFF7         	movff	atoi@s+1,tblptrh
  8537  0034C8                     	if	0	;tblptru may be non-zero
  8538  0034C8                     	endif
  8539  0034C8                     	if	0	;tblptru may be non-zero
  8540  0034C8                     	endif
  8541  0034C8  0008               	tblrd		*
  8542  0034CA  50F5               	movf	tablat,w,c
  8543  0034CC  0A20               	xorlw	32
  8544  0034CE  B4D8               	btfsc	status,2,c
  8545  0034D0  EF6C  F01A         	goto	u5651
  8546  0034D4  EF6E  F01A         	goto	u5650
  8547  0034D8                     u5651:
  8548  0034D8  EF8B  F01A         	goto	l4477
  8549  0034DC                     u5650:
  8550  0034DC  0EF7               	movlw	247
  8551  0034DE  6E0A               	movwf	??_atoi^0,c
  8552  0034E0  0EFF               	movlw	255
  8553  0034E2  6E0B               	movwf	(??_atoi+1)^0,c
  8554  0034E4  C008  FFF6         	movff	atoi@s,tblptrl
  8555  0034E8  C009  FFF7         	movff	atoi@s+1,tblptrh
  8556  0034EC                     	if	0	;tblptru may be non-zero
  8557  0034EC                     	endif
  8558  0034EC                     	if	0	;tblptru may be non-zero
  8559  0034EC                     	endif
  8560  0034EC  0008               	tblrd		*
  8561  0034EE  50F5               	movf	tablat,w,c
  8562  0034F0  6E0C               	movwf	(??_atoi+2)^0,c
  8563  0034F2  6A0D               	clrf	(??_atoi+3)^0,c
  8564  0034F4  500A               	movf	??_atoi^0,w,c
  8565  0034F6  260C               	addwf	(??_atoi+2)^0,f,c
  8566  0034F8  500B               	movf	(??_atoi+1)^0,w,c
  8567  0034FA  220D               	addwfc	(??_atoi+3)^0,f,c
  8568  0034FC  500D               	movf	(??_atoi+3)^0,w,c
  8569  0034FE  E109               	bnz	u5660
  8570  003500  0E05               	movlw	5
  8571  003502  5C0C               	subwf	(??_atoi+2)^0,w,c
  8572  003504  A0D8               	btfss	status,0,c
  8573  003506  EF87  F01A         	goto	u5661
  8574  00350A  EF89  F01A         	goto	u5660
  8575  00350E                     u5661:
  8576  00350E  EF8B  F01A         	goto	l4477
  8577  003512                     u5660:
  8578  003512  0E00               	movlw	0
  8579  003514  6E14               	movwf	_atoi$831^0,c
  8580  003516                     l4477:
  8581  003516  C014  F010         	movff	_atoi$831,_atoi$830
  8582  00351A  6A11               	clrf	(_atoi$830+1)^0,c
  8583  00351C  5010               	movf	_atoi$830^0,w,c
  8584  00351E  1011               	iorwf	(_atoi$830+1)^0,w,c
  8585  003520  A4D8               	btfss	status,2,c
  8586  003522  EF95  F01A         	goto	u5671
  8587  003526  EF97  F01A         	goto	u5670
  8588  00352A                     u5671:
  8589  00352A  EF5C  F01A         	goto	l4467
  8590  00352E                     u5670:
  8591  00352E  EFA1  F01A         	goto	l4487
  8592  003532                     l4483:
  8593  003532  0E00               	movlw	0
  8594  003534  6E0F               	movwf	(atoi@neg+1)^0,c
  8595  003536  0E01               	movlw	1
  8596  003538  6E0E               	movwf	atoi@neg^0,c
  8597  00353A                     l4485:
  8598  00353A  4A08               	infsnz	atoi@s^0,f,c
  8599  00353C  2A09               	incf	(atoi@s+1)^0,f,c
  8600  00353E  EFD6  F01A         	goto	l4493
  8601  003542                     l4487:
  8602  003542  C008  FFF6         	movff	atoi@s,tblptrl
  8603  003546  C009  FFF7         	movff	atoi@s+1,tblptrh
  8604  00354A                     	if	0	;tblptru may be non-zero
  8605  00354A                     	endif
  8606  00354A                     	if	0	;tblptru may be non-zero
  8607  00354A                     	endif
  8608  00354A  0008               	tblrd		*
  8609  00354C  50F5               	movf	tablat,w,c
  8610  00354E  6E0A               	movwf	??_atoi^0,c
  8611  003550  6A0B               	clrf	(??_atoi+1)^0,c
  8612                           
  8613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8614                           ; Switch size 1, requested type "simple"
  8615                           ; Number of cases is 1, Range of values is 0 to 0
  8616                           ; switch strategies available:
  8617                           ; Name         Instructions Cycles
  8618                           ; simple_byte            4     3 (average)
  8619                           ;	Chosen strategy is simple_byte
  8620  003552  500B               	movf	(??_atoi+1)^0,w,c
  8621  003554  0A00               	xorlw	0	; case 0
  8622  003556  B4D8               	btfsc	status,2,c
  8623  003558  EFB0  F01A         	goto	l5227
  8624  00355C  EFD6  F01A         	goto	l4493
  8625  003560                     l5227:
  8626                           
  8627                           ; Switch size 1, requested type "simple"
  8628                           ; Number of cases is 2, Range of values is 43 to 45
  8629                           ; switch strategies available:
  8630                           ; Name         Instructions Cycles
  8631                           ; simple_byte            7     4 (average)
  8632                           ;	Chosen strategy is simple_byte
  8633  003560  500A               	movf	??_atoi^0,w,c
  8634  003562  0A2B               	xorlw	43	; case 43
  8635  003564  B4D8               	btfsc	status,2,c
  8636  003566  EF9D  F01A         	goto	l4485
  8637  00356A  0A06               	xorlw	6	; case 45
  8638  00356C  B4D8               	btfsc	status,2,c
  8639  00356E  EF99  F01A         	goto	l4483
  8640  003572  EFD6  F01A         	goto	l4493
  8641  003576                     l4489:
  8642  003576  C015  F001         	movff	atoi@n,___wmul@multiplier
  8643  00357A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8644  00357E  0E00               	movlw	0
  8645  003580  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8646  003582  0E0A               	movlw	10
  8647  003584  6E03               	movwf	___wmul@multiplicand^0,c
  8648  003586  ECAF  F023         	call	___wmul	;wreg free
  8649  00358A  C008  FFF6         	movff	atoi@s,tblptrl
  8650  00358E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8651  003592                     	if	0	;tblptru may be non-zero
  8652  003592                     	endif
  8653  003592                     	if	0	;tblptru may be non-zero
  8654  003592                     	endif
  8655  003592  0008               	tblrd		*
  8656  003594  50F5               	movf	tablat,w,c
  8657  003596  5E01               	subwf	?___wmul^0,f,c
  8658  003598  0E00               	movlw	0
  8659  00359A  5A02               	subwfb	(?___wmul+1)^0,f,c
  8660  00359C  0E30               	movlw	48
  8661  00359E  2401               	addwf	?___wmul^0,w,c
  8662  0035A0  6E15               	movwf	atoi@n^0,c
  8663  0035A2  0E00               	movlw	0
  8664  0035A4  2002               	addwfc	(?___wmul+1)^0,w,c
  8665  0035A6  6E16               	movwf	(atoi@n+1)^0,c
  8666  0035A8  EF9D  F01A         	goto	l4485
  8667  0035AC                     l4493:
  8668  0035AC  0ED0               	movlw	208
  8669  0035AE  6E0A               	movwf	??_atoi^0,c
  8670  0035B0  0EFF               	movlw	255
  8671  0035B2  6E0B               	movwf	(??_atoi+1)^0,c
  8672  0035B4  C008  FFF6         	movff	atoi@s,tblptrl
  8673  0035B8  C009  FFF7         	movff	atoi@s+1,tblptrh
  8674  0035BC                     	if	0	;tblptru may be non-zero
  8675  0035BC                     	endif
  8676  0035BC                     	if	0	;tblptru may be non-zero
  8677  0035BC                     	endif
  8678  0035BC  0008               	tblrd		*
  8679  0035BE  50F5               	movf	tablat,w,c
  8680  0035C0  6E0C               	movwf	(??_atoi+2)^0,c
  8681  0035C2  6A0D               	clrf	(??_atoi+3)^0,c
  8682  0035C4  500A               	movf	??_atoi^0,w,c
  8683  0035C6  260C               	addwf	(??_atoi+2)^0,f,c
  8684  0035C8  500B               	movf	(??_atoi+1)^0,w,c
  8685  0035CA  220D               	addwfc	(??_atoi+3)^0,f,c
  8686  0035CC  500D               	movf	(??_atoi+3)^0,w,c
  8687  0035CE  E10A               	bnz	u5680
  8688  0035D0  0E0A               	movlw	10
  8689  0035D2  5C0C               	subwf	(??_atoi+2)^0,w,c
  8690  0035D4  A0D8               	btfss	status,0,c
  8691  0035D6  EFEF  F01A         	goto	u5681
  8692  0035DA  EFF2  F01A         	goto	u5680
  8693  0035DE                     u5681:
  8694  0035DE  0E01               	movlw	1
  8695  0035E0  EFF3  F01A         	goto	u5690
  8696  0035E4                     u5680:
  8697  0035E4  0E00               	movlw	0
  8698  0035E6                     u5690:
  8699  0035E6  6E12               	movwf	_atoi$832^0,c
  8700  0035E8  6A13               	clrf	(_atoi$832+1)^0,c
  8701  0035EA  5012               	movf	_atoi$832^0,w,c
  8702  0035EC  1013               	iorwf	(_atoi$832+1)^0,w,c
  8703  0035EE  A4D8               	btfss	status,2,c
  8704  0035F0  EFFC  F01A         	goto	u5701
  8705  0035F4  EFFE  F01A         	goto	u5700
  8706  0035F8                     u5701:
  8707  0035F8  EFBB  F01A         	goto	l4489
  8708  0035FC                     u5700:
  8709  0035FC  500E               	movf	atoi@neg^0,w,c
  8710  0035FE  100F               	iorwf	(atoi@neg+1)^0,w,c
  8711  003600  A4D8               	btfss	status,2,c
  8712  003602  EF05  F01B         	goto	u5711
  8713  003606  EF07  F01B         	goto	u5710
  8714  00360A                     u5711:
  8715  00360A  EF15  F01B         	goto	l1122
  8716  00360E                     u5710:
  8717  00360E  C015  F00A         	movff	atoi@n,??_atoi
  8718  003612  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8719  003616  1E0A               	comf	??_atoi^0,f,c
  8720  003618  1E0B               	comf	(??_atoi+1)^0,f,c
  8721  00361A  4A0A               	infsnz	??_atoi^0,f,c
  8722  00361C  2A0B               	incf	(??_atoi+1)^0,f,c
  8723  00361E  C00A  F008         	movff	??_atoi,?_atoi
  8724  003622  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8725  003626  EF19  F01B         	goto	l1125
  8726  00362A                     l1122:
  8727  00362A  C015  F008         	movff	atoi@n,?_atoi
  8728  00362E  C016  F009         	movff	atoi@n+1,?_atoi+1
  8729  003632                     l1125:
  8730  003632  0012               	return		;funcret
  8731  003634                     __end_of_atoi:
  8732                           	callstack 0
  8733                           
  8734 ;; *************** function _isspace *****************
  8735 ;; Defined at:
  8736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  c               2    0[COMRAM] int 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  2    0[COMRAM] int 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8750 ;;      Params:         2       0       0       0       0       0       0       0       0
  8751 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8752 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8753 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8754 ;;Total ram usage:        7 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_atoi
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text31
  8764  0043D0                     __ptext31:
  8765                           	callstack 0
  8766  0043D0                     _isspace:
  8767                           	callstack 26
  8768  0043D0  0E01               	movlw	1
  8769  0043D2  6E07               	movwf	_isspace$861^0,c
  8770  0043D4  0E20               	movlw	32
  8771  0043D6  1801               	xorwf	isspace@c^0,w,c
  8772  0043D8  1002               	iorwf	(isspace@c+1)^0,w,c
  8773  0043DA  B4D8               	btfsc	status,2,c
  8774  0043DC  EFF2  F021         	goto	u4941
  8775  0043E0  EFF4  F021         	goto	u4940
  8776  0043E4                     u4941:
  8777  0043E4  EF0D  F022         	goto	l4085
  8778  0043E8                     u4940:
  8779  0043E8  0EF7               	movlw	247
  8780  0043EA  6E03               	movwf	??_isspace^0,c
  8781  0043EC  0EFF               	movlw	255
  8782  0043EE  6E04               	movwf	(??_isspace+1)^0,c
  8783  0043F0  C001  F005         	movff	isspace@c,??_isspace+2
  8784  0043F4  C002  F006         	movff	isspace@c+1,??_isspace+3
  8785  0043F8  5003               	movf	??_isspace^0,w,c
  8786  0043FA  2605               	addwf	(??_isspace+2)^0,f,c
  8787  0043FC  5004               	movf	(??_isspace+1)^0,w,c
  8788  0043FE  2206               	addwfc	(??_isspace+3)^0,f,c
  8789  004400  5006               	movf	(??_isspace+3)^0,w,c
  8790  004402  E109               	bnz	u4950
  8791  004404  0E05               	movlw	5
  8792  004406  5C05               	subwf	(??_isspace+2)^0,w,c
  8793  004408  A0D8               	btfss	status,0,c
  8794  00440A  EF09  F022         	goto	u4951
  8795  00440E  EF0B  F022         	goto	u4950
  8796  004412                     u4951:
  8797  004412  EF0D  F022         	goto	l4085
  8798  004416                     u4950:
  8799  004416  0E00               	movlw	0
  8800  004418  6E07               	movwf	_isspace$861^0,c
  8801  00441A                     l4085:
  8802  00441A  C007  F001         	movff	_isspace$861,?_isspace
  8803  00441E  6A02               	clrf	(?_isspace+1)^0,c
  8804  004420  0012               	return		;funcret
  8805  004422                     __end_of_isspace:
  8806                           	callstack 0
  8807                           
  8808 ;; *************** function _isdigit *****************
  8809 ;; Defined at:
  8810 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;  c               2    0[COMRAM] int 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;		None
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  2    0[COMRAM] int 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8824 ;;      Params:         2       0       0       0       0       0       0       0       0
  8825 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8826 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8827 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8828 ;;Total ram usage:        6 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; This function calls:
  8831 ;;		Nothing
  8832 ;; This function is called by:
  8833 ;;		_vfpfcnvrt
  8834 ;;		_atoi
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text32
  8839  0046C0                     __ptext32:
  8840                           	callstack 0
  8841  0046C0                     _isdigit:
  8842                           	callstack 27
  8843  0046C0  0ED0               	movlw	208
  8844  0046C2  6E03               	movwf	??_isdigit^0,c
  8845  0046C4  0EFF               	movlw	255
  8846  0046C6  6E04               	movwf	(??_isdigit+1)^0,c
  8847  0046C8  C001  F005         	movff	isdigit@c,??_isdigit+2
  8848  0046CC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8849  0046D0  5003               	movf	??_isdigit^0,w,c
  8850  0046D2  2605               	addwf	(??_isdigit+2)^0,f,c
  8851  0046D4  5004               	movf	(??_isdigit+1)^0,w,c
  8852  0046D6  2206               	addwfc	(??_isdigit+3)^0,f,c
  8853  0046D8  5006               	movf	(??_isdigit+3)^0,w,c
  8854  0046DA  E10A               	bnz	u4920
  8855  0046DC  0E0A               	movlw	10
  8856  0046DE  5C05               	subwf	(??_isdigit+2)^0,w,c
  8857  0046E0  A0D8               	btfss	status,0,c
  8858  0046E2  EF75  F023         	goto	u4921
  8859  0046E6  EF78  F023         	goto	u4920
  8860  0046EA                     u4921:
  8861  0046EA  0E01               	movlw	1
  8862  0046EC  EF79  F023         	goto	u4930
  8863  0046F0                     u4920:
  8864  0046F0  0E00               	movlw	0
  8865  0046F2                     u4930:
  8866  0046F2  6E01               	movwf	?_isdigit^0,c
  8867  0046F4  6A02               	clrf	(?_isdigit+1)^0,c
  8868  0046F6  0012               	return		;funcret
  8869  0046F8                     __end_of_isdigit:
  8870                           	callstack 0
  8871                           
  8872 ;; *************** function ___wmul *****************
  8873 ;; Defined at:
  8874 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  multiplier      2    0[COMRAM] unsigned int 
  8877 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;  product         2    4[COMRAM] unsigned int 
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  2    0[COMRAM] unsigned int 
  8882 ;; Registers used:
  8883 ;;		wreg, status,2, status,0, prodl, prodh
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8889 ;;      Params:         4       0       0       0       0       0       0       0       0
  8890 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8892 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8893 ;;Total ram usage:        6 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_atoi
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text33
  8903  00475E                     __ptext33:
  8904                           	callstack 0
  8905  00475E                     ___wmul:
  8906                           	callstack 26
  8907  00475E  5001               	movf	___wmul@multiplier^0,w,c
  8908  004760  0203               	mulwf	___wmul@multiplicand^0,c
  8909  004762  CFF3 F005          	movff	prodl,___wmul@product
  8910  004766  CFF4 F006          	movff	prodh,___wmul@product+1
  8911  00476A  5001               	movf	___wmul@multiplier^0,w,c
  8912  00476C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8913  00476E  50F3               	movf	243,w,c
  8914  004770  2606               	addwf	(___wmul@product+1)^0,f,c
  8915  004772  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8916  004774  0203               	mulwf	___wmul@multiplicand^0,c
  8917  004776  50F3               	movf	243,w,c
  8918  004778  2606               	addwf	(___wmul@product+1)^0,f,c
  8919  00477A  C005  F001         	movff	___wmul@product,?___wmul
  8920  00477E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8921  004782  0012               	return		;funcret
  8922  004784                     __end_of___wmul:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function _Secuence4 *****************
  8926 ;; Defined at:
  8927 ;;		line 293 in file "distance_finding.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  2   18[None  ] int 
  8934 ;; Registers used:
  8935 ;;		wreg, status,2, status,0, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8943 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8944 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8945 ;;Total ram usage:        2 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; Hardware stack levels required when called:    3
  8948 ;; This function calls:
  8949 ;;		_LCD_Clear
  8950 ;; This function is called by:
  8951 ;;		_main
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text34
  8956  002936                     __ptext34:
  8957                           	callstack 0
  8958  002936                     _Secuence4:
  8959                           	callstack 27
  8960  002936                     
  8961                           ;distance_finding.c: 294:     TRISBbits.RB5 = 0;
  8962  002936  9A93               	bcf	147,5,c	;volatile
  8963                           
  8964                           ;distance_finding.c: 295:     TRISC=0xff;
  8965  002938  6894               	setf	148,c	;volatile
  8966                           
  8967                           ;distance_finding.c: 296:     RB5=1;
  8968  00293A  8A81               	bsf	3969,5,c	;volatile
  8969                           
  8970                           ;distance_finding.c: 297:    if(RC0==1 && d == 0){
  8971  00293C  A082               	btfss	3970,0,c	;volatile
  8972  00293E  EFA3  F014         	goto	u6481
  8973  002942  EFA5  F014         	goto	u6480
  8974  002946                     u6481:
  8975  002946  EFE8  F014         	goto	l125
  8976  00294A                     u6480:
  8977  00294A  0100               	movlb	0	; () banked
  8978  00294C  51DD               	movf	_d& (0+255),w,b
  8979  00294E  11DE               	iorwf	(_d+1)& (0+255),w,b
  8980  002950  A4D8               	btfss	status,2,c
  8981  002952  EFAD  F014         	goto	u6491
  8982  002956  EFAF  F014         	goto	u6490
  8983  00295A                     u6491:
  8984  00295A  EFE8  F014         	goto	l125
  8985  00295E                     u6490:
  8986  00295E                     
  8987                           ; BSR set to: 0
  8988                           ;distance_finding.c: 298:         d=1;
  8989  00295E  0E00               	movlw	0
  8990  002960  6FDE               	movwf	(_d+1)& (0+255),b
  8991  002962  0E01               	movlw	1
  8992  002964  6FDD               	movwf	_d& (0+255),b
  8993  002966                     
  8994                           ; BSR set to: 0
  8995                           ;distance_finding.c: 299:         _delay((unsigned long)((100)*(20000000/4000.0)));
  8996  002966  0E03               	movlw	3
  8997  002968  6E0A               	movwf	(??_Secuence4+1)^0,c
  8998  00296A  0E8A               	movlw	138
  8999  00296C  6E09               	movwf	??_Secuence4^0,c
  9000  00296E  0E56               	movlw	86
  9001  002970                     u6707:
  9002  002970  2EE8               	decfsz	wreg,f,c
  9003  002972  D7FE               	bra	u6707
  9004  002974  2E09               	decfsz	??_Secuence4^0,f,c
  9005  002976  D7FC               	bra	u6707
  9006  002978  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9007  00297A  D7FA               	bra	u6707
  9008  00297C                     
  9009                           ;distance_finding.c: 300:         if(RC0==0 && d==1){
  9010  00297C  B082               	btfsc	3970,0,c	;volatile
  9011  00297E  EFC3  F014         	goto	u6501
  9012  002982  EFC5  F014         	goto	u6500
  9013  002986                     u6501:
  9014  002986  EFCE  F015         	goto	l5113
  9015  00298A                     u6500:
  9016  00298A  0100               	movlb	0	; () banked
  9017  00298C  05DD               	decf	_d& (0+255),w,b
  9018  00298E  11DE               	iorwf	(_d+1)& (0+255),w,b
  9019  002990  A4D8               	btfss	status,2,c
  9020  002992  EFCD  F014         	goto	u6511
  9021  002996  EFCF  F014         	goto	u6510
  9022  00299A                     u6511:
  9023  00299A  EFCE  F015         	goto	l5113
  9024  00299E                     u6510:
  9025  00299E                     
  9026                           ; BSR set to: 0
  9027                           ;distance_finding.c: 301:         f=0;
  9028  00299E  0E00               	movlw	0
  9029  0029A0  6FDC               	movwf	(_f+1)& (0+255),b
  9030  0029A2  0E00               	movlw	0
  9031  0029A4  6FDB               	movwf	_f& (0+255),b
  9032                           
  9033                           ;distance_finding.c: 302:         d=0;
  9034  0029A6  0E00               	movlw	0
  9035  0029A8  6FDE               	movwf	(_d+1)& (0+255),b
  9036  0029AA  0E00               	movlw	0
  9037  0029AC  6FDD               	movwf	_d& (0+255),b
  9038  0029AE                     
  9039                           ; BSR set to: 0
  9040                           ;distance_finding.c: 303:         LCD_Clear();
  9041  0029AE  ECC2  F023         	call	_LCD_Clear	;wreg free
  9042  0029B2                     
  9043                           ;distance_finding.c: 304:         a = 0;
  9044  0029B2  0E00               	movlw	0
  9045  0029B4  0100               	movlb	0	; () banked
  9046  0029B6  6FDA               	movwf	(_a+1)& (0+255),b
  9047  0029B8  0E00               	movlw	0
  9048  0029BA  6FD9               	movwf	_a& (0+255),b
  9049  0029BC                     
  9050                           ; BSR set to: 0
  9051                           ;distance_finding.c: 305:         c = 0;
  9052  0029BC  0E00               	movlw	0
  9053  0029BE  6FE0               	movwf	(_c+1)& (0+255),b
  9054  0029C0  0E00               	movlw	0
  9055  0029C2  6FDF               	movwf	_c& (0+255),b
  9056  0029C4                     
  9057                           ; BSR set to: 0
  9058                           ;distance_finding.c: 306:         LCD_Clear();
  9059  0029C4  ECC2  F023         	call	_LCD_Clear	;wreg free
  9060  0029C8                     
  9061                           ;distance_finding.c: 307:         RB5=0;
  9062  0029C8  9A81               	bcf	3969,5,c	;volatile
  9063  0029CA                     
  9064                           ;distance_finding.c: 310:         RC0=0;
  9065  0029CA  9082               	bcf	3970,0,c	;volatile
  9066  0029CC  EFCE  F015         	goto	l5113
  9067  0029D0                     l125:
  9068  0029D0  A282               	btfss	3970,1,c	;volatile
  9069  0029D2  EFED  F014         	goto	u6521
  9070  0029D6  EFEF  F014         	goto	u6520
  9071  0029DA                     u6521:
  9072  0029DA  EF27  F015         	goto	l128
  9073  0029DE                     u6520:
  9074  0029DE  0100               	movlb	0	; () banked
  9075  0029E0  51DD               	movf	_d& (0+255),w,b
  9076  0029E2  11DE               	iorwf	(_d+1)& (0+255),w,b
  9077  0029E4  A4D8               	btfss	status,2,c
  9078  0029E6  EFF7  F014         	goto	u6531
  9079  0029EA  EFF9  F014         	goto	u6530
  9080  0029EE                     u6531:
  9081  0029EE  EF27  F015         	goto	l128
  9082  0029F2                     u6530:
  9083  0029F2                     
  9084                           ; BSR set to: 0
  9085                           ;distance_finding.c: 314:         d=1;
  9086  0029F2  0E00               	movlw	0
  9087  0029F4  6FDE               	movwf	(_d+1)& (0+255),b
  9088  0029F6  0E01               	movlw	1
  9089  0029F8  6FDD               	movwf	_d& (0+255),b
  9090  0029FA                     
  9091                           ; BSR set to: 0
  9092                           ;distance_finding.c: 315:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9093  0029FA  0E03               	movlw	3
  9094  0029FC  6E0A               	movwf	(??_Secuence4+1)^0,c
  9095  0029FE  0E8A               	movlw	138
  9096  002A00  6E09               	movwf	??_Secuence4^0,c
  9097  002A02  0E56               	movlw	86
  9098  002A04                     u6717:
  9099  002A04  2EE8               	decfsz	wreg,f,c
  9100  002A06  D7FE               	bra	u6717
  9101  002A08  2E09               	decfsz	??_Secuence4^0,f,c
  9102  002A0A  D7FC               	bra	u6717
  9103  002A0C  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9104  002A0E  D7FA               	bra	u6717
  9105  002A10                     
  9106                           ;distance_finding.c: 316:         if(RC1==0 && d==1){
  9107  002A10  B282               	btfsc	3970,1,c	;volatile
  9108  002A12  EF0D  F015         	goto	u6541
  9109  002A16  EF0F  F015         	goto	u6540
  9110  002A1A                     u6541:
  9111  002A1A  EFCE  F015         	goto	l5113
  9112  002A1E                     u6540:
  9113  002A1E  0100               	movlb	0	; () banked
  9114  002A20  05DD               	decf	_d& (0+255),w,b
  9115  002A22  11DE               	iorwf	(_d+1)& (0+255),w,b
  9116  002A24  A4D8               	btfss	status,2,c
  9117  002A26  EF17  F015         	goto	u6551
  9118  002A2A  EF19  F015         	goto	u6550
  9119  002A2E                     u6551:
  9120  002A2E  EFCE  F015         	goto	l5113
  9121  002A32                     u6550:
  9122  002A32                     
  9123                           ; BSR set to: 0
  9124                           ;distance_finding.c: 317:         f=0;
  9125  002A32  0E00               	movlw	0
  9126  002A34  6FDC               	movwf	(_f+1)& (0+255),b
  9127  002A36  0E00               	movlw	0
  9128  002A38  6FDB               	movwf	_f& (0+255),b
  9129  002A3A                     
  9130                           ; BSR set to: 0
  9131                           ;distance_finding.c: 318:         RB5=0;
  9132  002A3A  9A81               	bcf	3969,5,c	;volatile
  9133                           
  9134                           ;distance_finding.c: 319:         a=0;
  9135  002A3C  0E00               	movlw	0
  9136  002A3E  6FDA               	movwf	(_a+1)& (0+255),b
  9137  002A40  0E00               	movlw	0
  9138  002A42  6FD9               	movwf	_a& (0+255),b
  9139  002A44                     
  9140                           ; BSR set to: 0
  9141                           ;distance_finding.c: 320:         c++;
  9142  002A44  4BDF               	infsnz	_c& (0+255),f,b
  9143  002A46  2BE0               	incf	(_c+1)& (0+255),f,b
  9144  002A48                     
  9145                           ; BSR set to: 0
  9146                           ;distance_finding.c: 321:         RC1=0;
  9147  002A48  9282               	bcf	3970,1,c	;volatile
  9148  002A4A  EFCE  F015         	goto	l5113
  9149  002A4E                     l128:
  9150  002A4E  A482               	btfss	3970,2,c	;volatile
  9151  002A50  EF2C  F015         	goto	u6561
  9152  002A54  EF2E  F015         	goto	u6560
  9153  002A58                     u6561:
  9154  002A58  EF87  F015         	goto	l131
  9155  002A5C                     u6560:
  9156  002A5C  0100               	movlb	0	; () banked
  9157  002A5E  51DD               	movf	_d& (0+255),w,b
  9158  002A60  11DE               	iorwf	(_d+1)& (0+255),w,b
  9159  002A62  A4D8               	btfss	status,2,c
  9160  002A64  EF36  F015         	goto	u6571
  9161  002A68  EF38  F015         	goto	u6570
  9162  002A6C                     u6571:
  9163  002A6C  EF87  F015         	goto	l131
  9164  002A70                     u6570:
  9165  002A70                     
  9166                           ; BSR set to: 0
  9167                           ;distance_finding.c: 325:         d=1;
  9168  002A70  0E00               	movlw	0
  9169  002A72  6FDE               	movwf	(_d+1)& (0+255),b
  9170  002A74  0E01               	movlw	1
  9171  002A76  6FDD               	movwf	_d& (0+255),b
  9172  002A78                     
  9173                           ; BSR set to: 0
  9174                           ;distance_finding.c: 326:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9175  002A78  0E03               	movlw	3
  9176  002A7A  6E0A               	movwf	(??_Secuence4+1)^0,c
  9177  002A7C  0E8A               	movlw	138
  9178  002A7E  6E09               	movwf	??_Secuence4^0,c
  9179  002A80  0E56               	movlw	86
  9180  002A82                     u6727:
  9181  002A82  2EE8               	decfsz	wreg,f,c
  9182  002A84  D7FE               	bra	u6727
  9183  002A86  2E09               	decfsz	??_Secuence4^0,f,c
  9184  002A88  D7FC               	bra	u6727
  9185  002A8A  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9186  002A8C  D7FA               	bra	u6727
  9187  002A8E                     
  9188                           ;distance_finding.c: 327:         if(RC2==0 && d==1){
  9189  002A8E  B482               	btfsc	3970,2,c	;volatile
  9190  002A90  EF4C  F015         	goto	u6581
  9191  002A94  EF4E  F015         	goto	u6580
  9192  002A98                     u6581:
  9193  002A98  EFCE  F015         	goto	l5113
  9194  002A9C                     u6580:
  9195  002A9C  0100               	movlb	0	; () banked
  9196  002A9E  05DD               	decf	_d& (0+255),w,b
  9197  002AA0  11DE               	iorwf	(_d+1)& (0+255),w,b
  9198  002AA2  A4D8               	btfss	status,2,c
  9199  002AA4  EF56  F015         	goto	u6591
  9200  002AA8  EF58  F015         	goto	u6590
  9201  002AAC                     u6591:
  9202  002AAC  EFCE  F015         	goto	l5113
  9203  002AB0                     u6590:
  9204  002AB0                     
  9205                           ; BSR set to: 0
  9206                           ;distance_finding.c: 328:         f=0;
  9207  002AB0  0E00               	movlw	0
  9208  002AB2  6FDC               	movwf	(_f+1)& (0+255),b
  9209  002AB4  0E00               	movlw	0
  9210  002AB6  6FDB               	movwf	_f& (0+255),b
  9211                           
  9212                           ;distance_finding.c: 329:         d=0;
  9213  002AB8  0E00               	movlw	0
  9214  002ABA  6FDE               	movwf	(_d+1)& (0+255),b
  9215  002ABC  0E00               	movlw	0
  9216  002ABE  6FDD               	movwf	_d& (0+255),b
  9217  002AC0                     
  9218                           ; BSR set to: 0
  9219                           ;distance_finding.c: 330:         RB5=0;
  9220  002AC0  9A81               	bcf	3969,5,c	;volatile
  9221  002AC2                     
  9222                           ; BSR set to: 0
  9223                           ;distance_finding.c: 331:         LCD_Clear();
  9224  002AC2  ECC2  F023         	call	_LCD_Clear	;wreg free
  9225  002AC6                     
  9226                           ;distance_finding.c: 333:         if(b==1){
  9227  002AC6  0100               	movlb	0	; () banked
  9228  002AC8  05E7               	decf	_b& (0+255),w,b
  9229  002ACA  11E8               	iorwf	(_b+1)& (0+255),w,b
  9230  002ACC  A4D8               	btfss	status,2,c
  9231  002ACE  EF6B  F015         	goto	u6601
  9232  002AD2  EF6D  F015         	goto	u6600
  9233  002AD6                     u6601:
  9234  002AD6  EF79  F015         	goto	l5087
  9235  002ADA                     u6600:
  9236  002ADA                     
  9237                           ; BSR set to: 0
  9238                           ;distance_finding.c: 334:             b=2;
  9239  002ADA  0E00               	movlw	0
  9240  002ADC  6FE8               	movwf	(_b+1)& (0+255),b
  9241  002ADE  0E02               	movlw	2
  9242  002AE0  6FE7               	movwf	_b& (0+255),b
  9243                           
  9244                           ;distance_finding.c: 335:             c=0;
  9245  002AE2  0E00               	movlw	0
  9246  002AE4  6FE0               	movwf	(_c+1)& (0+255),b
  9247  002AE6  0E00               	movlw	0
  9248  002AE8  6FDF               	movwf	_c& (0+255),b
  9249  002AEA                     
  9250                           ; BSR set to: 0
  9251                           ;distance_finding.c: 336:             LCD_Clear();
  9252  002AEA  ECC2  F023         	call	_LCD_Clear	;wreg free
  9253                           
  9254                           ;distance_finding.c: 338:         }
  9255  002AEE  EF7D  F015         	goto	l5089
  9256  002AF2                     l5087:
  9257                           
  9258                           ; BSR set to: 0
  9259  002AF2  0E00               	movlw	0
  9260  002AF4  6FE8               	movwf	(_b+1)& (0+255),b
  9261  002AF6  0E01               	movlw	1
  9262  002AF8  6FE7               	movwf	_b& (0+255),b
  9263  002AFA                     l5089:
  9264                           
  9265                           ;distance_finding.c: 340:          RC2=0;
  9266  002AFA  9482               	bcf	3970,2,c	;volatile
  9267                           
  9268                           ;distance_finding.c: 341:          c=0;
  9269  002AFC  0E00               	movlw	0
  9270  002AFE  0100               	movlb	0	; () banked
  9271  002B00  6FE0               	movwf	(_c+1)& (0+255),b
  9272  002B02  0E00               	movlw	0
  9273  002B04  6FDF               	movwf	_c& (0+255),b
  9274  002B06                     
  9275                           ; BSR set to: 0
  9276                           ;distance_finding.c: 342:          LCD_Clear();
  9277  002B06  ECC2  F023         	call	_LCD_Clear	;wreg free
  9278  002B0A  EFCE  F015         	goto	l5113
  9279  002B0E                     l131:
  9280  002B0E  A882               	btfss	3970,4,c	;volatile
  9281  002B10  EF8C  F015         	goto	u6611
  9282  002B14  EF8E  F015         	goto	u6610
  9283  002B18                     u6611:
  9284  002B18  EFCA  F015         	goto	l136
  9285  002B1C                     u6610:
  9286  002B1C  0100               	movlb	0	; () banked
  9287  002B1E  05DD               	decf	_d& (0+255),w,b
  9288  002B20  11DE               	iorwf	(_d+1)& (0+255),w,b
  9289  002B22  A4D8               	btfss	status,2,c
  9290  002B24  EF96  F015         	goto	u6621
  9291  002B28  EF98  F015         	goto	u6620
  9292  002B2C                     u6621:
  9293  002B2C  EFCA  F015         	goto	l136
  9294  002B30                     u6620:
  9295  002B30                     
  9296                           ; BSR set to: 0
  9297                           ;distance_finding.c: 346:         d=1;
  9298  002B30  0E00               	movlw	0
  9299  002B32  6FDE               	movwf	(_d+1)& (0+255),b
  9300  002B34  0E01               	movlw	1
  9301  002B36  6FDD               	movwf	_d& (0+255),b
  9302  002B38                     
  9303                           ; BSR set to: 0
  9304                           ;distance_finding.c: 347:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9305  002B38  0E03               	movlw	3
  9306  002B3A  6E0A               	movwf	(??_Secuence4+1)^0,c
  9307  002B3C  0E8A               	movlw	138
  9308  002B3E  6E09               	movwf	??_Secuence4^0,c
  9309  002B40  0E56               	movlw	86
  9310  002B42                     u6737:
  9311  002B42  2EE8               	decfsz	wreg,f,c
  9312  002B44  D7FE               	bra	u6737
  9313  002B46  2E09               	decfsz	??_Secuence4^0,f,c
  9314  002B48  D7FC               	bra	u6737
  9315  002B4A  2E0A               	decfsz	(??_Secuence4+1)^0,f,c
  9316  002B4C  D7FA               	bra	u6737
  9317  002B4E                     
  9318                           ;distance_finding.c: 348:         if(RC1==0 && d==1){
  9319  002B4E  B282               	btfsc	3970,1,c	;volatile
  9320  002B50  EFAC  F015         	goto	u6631
  9321  002B54  EFAE  F015         	goto	u6630
  9322  002B58                     u6631:
  9323  002B58  EFCE  F015         	goto	l5113
  9324  002B5C                     u6630:
  9325  002B5C  0100               	movlb	0	; () banked
  9326  002B5E  05DD               	decf	_d& (0+255),w,b
  9327  002B60  11DE               	iorwf	(_d+1)& (0+255),w,b
  9328  002B62  A4D8               	btfss	status,2,c
  9329  002B64  EFB6  F015         	goto	u6641
  9330  002B68  EFB8  F015         	goto	u6640
  9331  002B6C                     u6641:
  9332  002B6C  EFCE  F015         	goto	l5113
  9333  002B70                     u6640:
  9334  002B70                     
  9335                           ; BSR set to: 0
  9336                           ;distance_finding.c: 349:           f=0;
  9337  002B70  0E00               	movlw	0
  9338  002B72  6FDC               	movwf	(_f+1)& (0+255),b
  9339  002B74  0E00               	movlw	0
  9340  002B76  6FDB               	movwf	_f& (0+255),b
  9341                           
  9342                           ;distance_finding.c: 350:           d=0;
  9343  002B78  0E00               	movlw	0
  9344  002B7A  6FDE               	movwf	(_d+1)& (0+255),b
  9345  002B7C  0E00               	movlw	0
  9346  002B7E  6FDD               	movwf	_d& (0+255),b
  9347  002B80                     
  9348                           ; BSR set to: 0
  9349                           ;distance_finding.c: 351:           RB5=0;
  9350  002B80  9A81               	bcf	3969,5,c	;volatile
  9351  002B82                     
  9352                           ; BSR set to: 0
  9353                           ;distance_finding.c: 353:           _delay((unsigned long)((300)*(20000000/4000000.0)));
  9354  002B82  0ED6               	movlw	214
  9355  002B84                     u6747:
  9356  002B84  D000               	nop2	
  9357  002B86  D000               	nop2	
  9358  002B88  2EE8               	decfsz	wreg,f,c
  9359  002B8A  D7FC               	bra	u6747
  9360  002B8C  D000               	nop2	
  9361  002B8E                     
  9362                           ;distance_finding.c: 354:           RC4=0;
  9363  002B8E  9882               	bcf	3970,4,c	;volatile
  9364  002B90  EFCE  F015         	goto	l5113
  9365  002B94                     l136:
  9366                           
  9367                           ;distance_finding.c: 358:         RB5=0;
  9368  002B94  9A81               	bcf	3969,5,c	;volatile
  9369                           
  9370                           ;distance_finding.c: 359:         TRISBbits.RB5 = 1;
  9371  002B96  8A93               	bsf	147,5,c	;volatile
  9372  002B98                     
  9373                           ;distance_finding.c: 360:           TRISC=0x00;
  9374  002B98  0E00               	movlw	0
  9375  002B9A  6E94               	movwf	148,c	;volatile
  9376  002B9C                     l5113:
  9377                           
  9378                           ;distance_finding.c: 363:     RB5=0;
  9379  002B9C  9A81               	bcf	3969,5,c	;volatile
  9380  002B9E                     
  9381                           ;distance_finding.c: 364:     TRISBbits.RB5 = 1;
  9382  002B9E  8A93               	bsf	147,5,c	;volatile
  9383                           
  9384                           ;distance_finding.c: 365:     TRISC=0x00;
  9385  002BA0  0E00               	movlw	0
  9386  002BA2  6E94               	movwf	148,c	;volatile
  9387  002BA4  0012               	return		;funcret
  9388  002BA6                     __end_of_Secuence4:
  9389                           	callstack 0
  9390                           
  9391 ;; *************** function _Secuence3 *****************
  9392 ;; Defined at:
  9393 ;;		line 223 in file "distance_finding.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;		None
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;		None
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  2   16[None  ] int 
  9400 ;; Registers used:
  9401 ;;		wreg, status,2, status,0
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9407 ;;      Params:         0       0       0       0       0       0       0       0       0
  9408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9409 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9410 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9411 ;;Total ram usage:        2 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_main
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420                           	psect	text35
  9421  002BA6                     __ptext35:
  9422                           	callstack 0
  9423  002BA6                     _Secuence3:
  9424                           	callstack 30
  9425  002BA6                     
  9426                           ;distance_finding.c: 224:     TRISBbits.RB4 = 0;
  9427  002BA6  9893               	bcf	147,4,c	;volatile
  9428                           
  9429                           ;distance_finding.c: 225:     TRISC=0xff;
  9430  002BA8  6894               	setf	148,c	;volatile
  9431                           
  9432                           ;distance_finding.c: 226:     RB4=1;
  9433  002BAA  8881               	bsf	3969,4,c	;volatile
  9434                           
  9435                           ;distance_finding.c: 227:      if(RC0==1 && d == 0){
  9436  002BAC  A082               	btfss	3970,0,c	;volatile
  9437  002BAE  EFDB  F015         	goto	u6321
  9438  002BB2  EFDD  F015         	goto	u6320
  9439  002BB6                     u6321:
  9440  002BB6  EF1F  F016         	goto	l110
  9441  002BBA                     u6320:
  9442  002BBA  0100               	movlb	0	; () banked
  9443  002BBC  51DD               	movf	_d& (0+255),w,b
  9444  002BBE  11DE               	iorwf	(_d+1)& (0+255),w,b
  9445  002BC0  A4D8               	btfss	status,2,c
  9446  002BC2  EFE5  F015         	goto	u6331
  9447  002BC6  EFE7  F015         	goto	u6330
  9448  002BCA                     u6331:
  9449  002BCA  EF1F  F016         	goto	l110
  9450  002BCE                     u6330:
  9451  002BCE                     
  9452                           ; BSR set to: 0
  9453                           ;distance_finding.c: 228:         d=1;
  9454  002BCE  0E00               	movlw	0
  9455  002BD0  6FDE               	movwf	(_d+1)& (0+255),b
  9456  002BD2  0E01               	movlw	1
  9457  002BD4  6FDD               	movwf	_d& (0+255),b
  9458  002BD6                     
  9459                           ; BSR set to: 0
  9460                           ;distance_finding.c: 229:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9461  002BD6  0E03               	movlw	3
  9462  002BD8  6E02               	movwf	(??_Secuence3+1)^0,c
  9463  002BDA  0E8A               	movlw	138
  9464  002BDC  6E01               	movwf	??_Secuence3^0,c
  9465  002BDE  0E56               	movlw	86
  9466  002BE0                     u6757:
  9467  002BE0  2EE8               	decfsz	wreg,f,c
  9468  002BE2  D7FE               	bra	u6757
  9469  002BE4  2E01               	decfsz	??_Secuence3^0,f,c
  9470  002BE6  D7FC               	bra	u6757
  9471  002BE8  2E02               	decfsz	(??_Secuence3+1)^0,f,c
  9472  002BEA  D7FA               	bra	u6757
  9473  002BEC                     
  9474                           ;distance_finding.c: 230:         if(RC0==0 && d==1){
  9475  002BEC  B082               	btfsc	3970,0,c	;volatile
  9476  002BEE  EFFB  F015         	goto	u6341
  9477  002BF2  EFFD  F015         	goto	u6340
  9478  002BF6                     u6341:
  9479  002BF6  EFFA  F016         	goto	l5017
  9480  002BFA                     u6340:
  9481  002BFA  0100               	movlb	0	; () banked
  9482  002BFC  05DD               	decf	_d& (0+255),w,b
  9483  002BFE  11DE               	iorwf	(_d+1)& (0+255),w,b
  9484  002C00  A4D8               	btfss	status,2,c
  9485  002C02  EF05  F016         	goto	u6351
  9486  002C06  EF07  F016         	goto	u6350
  9487  002C0A                     u6351:
  9488  002C0A  EFFA  F016         	goto	l5017
  9489  002C0E                     u6350:
  9490  002C0E                     
  9491                           ; BSR set to: 0
  9492                           ;distance_finding.c: 231:         f=0;
  9493  002C0E  0E00               	movlw	0
  9494  002C10  6FDC               	movwf	(_f+1)& (0+255),b
  9495  002C12  0E00               	movlw	0
  9496  002C14  6FDB               	movwf	_f& (0+255),b
  9497                           
  9498                           ;distance_finding.c: 232:         d=0;
  9499  002C16  0E00               	movlw	0
  9500  002C18  6FDE               	movwf	(_d+1)& (0+255),b
  9501  002C1A  0E00               	movlw	0
  9502  002C1C  6FDD               	movwf	_d& (0+255),b
  9503  002C1E                     
  9504                           ; BSR set to: 0
  9505                           ;distance_finding.c: 233:         c++;
  9506  002C1E  4BDF               	infsnz	_c& (0+255),f,b
  9507  002C20  2BE0               	incf	(_c+1)& (0+255),f,b
  9508  002C22                     
  9509                           ; BSR set to: 0
  9510                           ;distance_finding.c: 234:         RB4=0;
  9511  002C22  9881               	bcf	3969,4,c	;volatile
  9512  002C24                     
  9513                           ; BSR set to: 0
  9514                           ;distance_finding.c: 235:         a = 1;
  9515  002C24  0E00               	movlw	0
  9516  002C26  6FDA               	movwf	(_a+1)& (0+255),b
  9517  002C28  0E01               	movlw	1
  9518  002C2A  6FD9               	movwf	_a& (0+255),b
  9519  002C2C                     
  9520                           ; BSR set to: 0
  9521                           ;distance_finding.c: 237:          _delay((unsigned long)((300)*(20000000/4000000.0)));
  9522  002C2C  0ED6               	movlw	214
  9523  002C2E                     u6767:
  9524  002C2E  D000               	nop2	
  9525  002C30  D000               	nop2	
  9526  002C32  2EE8               	decfsz	wreg,f,c
  9527  002C34  D7FC               	bra	u6767
  9528  002C36  D000               	nop2	
  9529  002C38                     
  9530                           ;distance_finding.c: 238:         RC0=0;
  9531  002C38  9082               	bcf	3970,0,c	;volatile
  9532  002C3A  EFFA  F016         	goto	l5017
  9533  002C3E                     l110:
  9534  002C3E  A282               	btfss	3970,1,c	;volatile
  9535  002C40  EF24  F016         	goto	u6361
  9536  002C44  EF26  F016         	goto	u6360
  9537  002C48                     u6361:
  9538  002C48  EF68  F016         	goto	l113
  9539  002C4C                     u6360:
  9540  002C4C  0100               	movlb	0	; () banked
  9541  002C4E  51DD               	movf	_d& (0+255),w,b
  9542  002C50  11DE               	iorwf	(_d+1)& (0+255),w,b
  9543  002C52  A4D8               	btfss	status,2,c
  9544  002C54  EF2E  F016         	goto	u6371
  9545  002C58  EF30  F016         	goto	u6370
  9546  002C5C                     u6371:
  9547  002C5C  EF68  F016         	goto	l113
  9548  002C60                     u6370:
  9549  002C60                     
  9550                           ; BSR set to: 0
  9551                           ;distance_finding.c: 242:         d=1;
  9552  002C60  0E00               	movlw	0
  9553  002C62  6FDE               	movwf	(_d+1)& (0+255),b
  9554  002C64  0E01               	movlw	1
  9555  002C66  6FDD               	movwf	_d& (0+255),b
  9556  002C68                     
  9557                           ; BSR set to: 0
  9558                           ;distance_finding.c: 243:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9559  002C68  0E03               	movlw	3
  9560  002C6A  6E02               	movwf	(??_Secuence3+1)^0,c
  9561  002C6C  0E8A               	movlw	138
  9562  002C6E  6E01               	movwf	??_Secuence3^0,c
  9563  002C70  0E56               	movlw	86
  9564  002C72                     u6777:
  9565  002C72  2EE8               	decfsz	wreg,f,c
  9566  002C74  D7FE               	bra	u6777
  9567  002C76  2E01               	decfsz	??_Secuence3^0,f,c
  9568  002C78  D7FC               	bra	u6777
  9569  002C7A  2E02               	decfsz	(??_Secuence3+1)^0,f,c
  9570  002C7C  D7FA               	bra	u6777
  9571  002C7E                     
  9572                           ;distance_finding.c: 244:         if(RC1==0 && d==1){
  9573  002C7E  B282               	btfsc	3970,1,c	;volatile
  9574  002C80  EF44  F016         	goto	u6381
  9575  002C84  EF46  F016         	goto	u6380
  9576  002C88                     u6381:
  9577  002C88  EFFA  F016         	goto	l5017
  9578  002C8C                     u6380:
  9579  002C8C  0100               	movlb	0	; () banked
  9580  002C8E  05DD               	decf	_d& (0+255),w,b
  9581  002C90  11DE               	iorwf	(_d+1)& (0+255),w,b
  9582  002C92  A4D8               	btfss	status,2,c
  9583  002C94  EF4E  F016         	goto	u6391
  9584  002C98  EF50  F016         	goto	u6390
  9585  002C9C                     u6391:
  9586  002C9C  EFFA  F016         	goto	l5017
  9587  002CA0                     u6390:
  9588  002CA0                     
  9589                           ; BSR set to: 0
  9590                           ;distance_finding.c: 245:         f=0;
  9591  002CA0  0E00               	movlw	0
  9592  002CA2  6FDC               	movwf	(_f+1)& (0+255),b
  9593  002CA4  0E00               	movlw	0
  9594  002CA6  6FDB               	movwf	_f& (0+255),b
  9595                           
  9596                           ;distance_finding.c: 246:         d=0;
  9597  002CA8  0E00               	movlw	0
  9598  002CAA  6FDE               	movwf	(_d+1)& (0+255),b
  9599  002CAC  0E00               	movlw	0
  9600  002CAE  6FDD               	movwf	_d& (0+255),b
  9601  002CB0                     
  9602                           ; BSR set to: 0
  9603                           ;distance_finding.c: 247:         c++;
  9604  002CB0  4BDF               	infsnz	_c& (0+255),f,b
  9605  002CB2  2BE0               	incf	(_c+1)& (0+255),f,b
  9606  002CB4                     
  9607                           ; BSR set to: 0
  9608                           ;distance_finding.c: 248:         RB4=0;
  9609  002CB4  9881               	bcf	3969,4,c	;volatile
  9610  002CB6                     
  9611                           ; BSR set to: 0
  9612                           ;distance_finding.c: 249:         a=2;
  9613  002CB6  0E00               	movlw	0
  9614  002CB8  6FDA               	movwf	(_a+1)& (0+255),b
  9615  002CBA  0E02               	movlw	2
  9616  002CBC  6FD9               	movwf	_a& (0+255),b
  9617  002CBE                     
  9618                           ; BSR set to: 0
  9619                           ;distance_finding.c: 250:         _delay((unsigned long)((300)*(20000000/4000000.0)));
  9620  002CBE  0ED6               	movlw	214
  9621  002CC0                     u6787:
  9622  002CC0  D000               	nop2	
  9623  002CC2  D000               	nop2	
  9624  002CC4  2EE8               	decfsz	wreg,f,c
  9625  002CC6  D7FC               	bra	u6787
  9626  002CC8  D000               	nop2	
  9627  002CCA                     
  9628                           ;distance_finding.c: 251:         RC1=0;
  9629  002CCA  9282               	bcf	3970,1,c	;volatile
  9630  002CCC  EFFA  F016         	goto	l5017
  9631  002CD0                     l113:
  9632  002CD0  A482               	btfss	3970,2,c	;volatile
  9633  002CD2  EF6D  F016         	goto	u6401
  9634  002CD6  EF6F  F016         	goto	u6400
  9635  002CDA                     u6401:
  9636  002CDA  EFB1  F016         	goto	l116
  9637  002CDE                     u6400:
  9638  002CDE  0100               	movlb	0	; () banked
  9639  002CE0  51DD               	movf	_d& (0+255),w,b
  9640  002CE2  11DE               	iorwf	(_d+1)& (0+255),w,b
  9641  002CE4  A4D8               	btfss	status,2,c
  9642  002CE6  EF77  F016         	goto	u6411
  9643  002CEA  EF79  F016         	goto	u6410
  9644  002CEE                     u6411:
  9645  002CEE  EFB1  F016         	goto	l116
  9646  002CF2                     u6410:
  9647  002CF2                     
  9648                           ; BSR set to: 0
  9649                           ;distance_finding.c: 256:         d=1;
  9650  002CF2  0E00               	movlw	0
  9651  002CF4  6FDE               	movwf	(_d+1)& (0+255),b
  9652  002CF6  0E01               	movlw	1
  9653  002CF8  6FDD               	movwf	_d& (0+255),b
  9654  002CFA                     
  9655                           ; BSR set to: 0
  9656                           ;distance_finding.c: 257:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9657  002CFA  0E03               	movlw	3
  9658  002CFC  6E02               	movwf	(??_Secuence3+1)^0,c
  9659  002CFE  0E8A               	movlw	138
  9660  002D00  6E01               	movwf	??_Secuence3^0,c
  9661  002D02  0E56               	movlw	86
  9662  002D04                     u6797:
  9663  002D04  2EE8               	decfsz	wreg,f,c
  9664  002D06  D7FE               	bra	u6797
  9665  002D08  2E01               	decfsz	??_Secuence3^0,f,c
  9666  002D0A  D7FC               	bra	u6797
  9667  002D0C  2E02               	decfsz	(??_Secuence3+1)^0,f,c
  9668  002D0E  D7FA               	bra	u6797
  9669  002D10                     
  9670                           ;distance_finding.c: 258:         if(RC2==0 && d==1){
  9671  002D10  B482               	btfsc	3970,2,c	;volatile
  9672  002D12  EF8D  F016         	goto	u6421
  9673  002D16  EF8F  F016         	goto	u6420
  9674  002D1A                     u6421:
  9675  002D1A  EFFA  F016         	goto	l5017
  9676  002D1E                     u6420:
  9677  002D1E  0100               	movlb	0	; () banked
  9678  002D20  05DD               	decf	_d& (0+255),w,b
  9679  002D22  11DE               	iorwf	(_d+1)& (0+255),w,b
  9680  002D24  A4D8               	btfss	status,2,c
  9681  002D26  EF97  F016         	goto	u6431
  9682  002D2A  EF99  F016         	goto	u6430
  9683  002D2E                     u6431:
  9684  002D2E  EFFA  F016         	goto	l5017
  9685  002D32                     u6430:
  9686  002D32                     
  9687                           ; BSR set to: 0
  9688                           ;distance_finding.c: 259:         f=0;
  9689  002D32  0E00               	movlw	0
  9690  002D34  6FDC               	movwf	(_f+1)& (0+255),b
  9691  002D36  0E00               	movlw	0
  9692  002D38  6FDB               	movwf	_f& (0+255),b
  9693                           
  9694                           ;distance_finding.c: 260:         d=0;
  9695  002D3A  0E00               	movlw	0
  9696  002D3C  6FDE               	movwf	(_d+1)& (0+255),b
  9697  002D3E  0E00               	movlw	0
  9698  002D40  6FDD               	movwf	_d& (0+255),b
  9699  002D42                     
  9700                           ; BSR set to: 0
  9701                           ;distance_finding.c: 261:         c++;
  9702  002D42  4BDF               	infsnz	_c& (0+255),f,b
  9703  002D44  2BE0               	incf	(_c+1)& (0+255),f,b
  9704  002D46                     
  9705                           ; BSR set to: 0
  9706                           ;distance_finding.c: 262:         RB4=0;
  9707  002D46  9881               	bcf	3969,4,c	;volatile
  9708  002D48                     
  9709                           ; BSR set to: 0
  9710                           ;distance_finding.c: 263:         a= 3;
  9711  002D48  0E00               	movlw	0
  9712  002D4A  6FDA               	movwf	(_a+1)& (0+255),b
  9713  002D4C  0E03               	movlw	3
  9714  002D4E  6FD9               	movwf	_a& (0+255),b
  9715  002D50                     
  9716                           ; BSR set to: 0
  9717                           ;distance_finding.c: 264:          _delay((unsigned long)((300)*(20000000/4000000.0)));
  9718  002D50  0ED6               	movlw	214
  9719  002D52                     u6807:
  9720  002D52  D000               	nop2	
  9721  002D54  D000               	nop2	
  9722  002D56  2EE8               	decfsz	wreg,f,c
  9723  002D58  D7FC               	bra	u6807
  9724  002D5A  D000               	nop2	
  9725  002D5C                     
  9726                           ;distance_finding.c: 265:          RC2=0;
  9727  002D5C  9482               	bcf	3970,2,c	;volatile
  9728  002D5E  EFFA  F016         	goto	l5017
  9729  002D62                     l116:
  9730  002D62  A882               	btfss	3970,4,c	;volatile
  9731  002D64  EFB6  F016         	goto	u6441
  9732  002D68  EFB8  F016         	goto	u6440
  9733  002D6C                     u6441:
  9734  002D6C  EFF6  F016         	goto	l119
  9735  002D70                     u6440:
  9736  002D70  0100               	movlb	0	; () banked
  9737  002D72  05DD               	decf	_d& (0+255),w,b
  9738  002D74  11DE               	iorwf	(_d+1)& (0+255),w,b
  9739  002D76  A4D8               	btfss	status,2,c
  9740  002D78  EFC0  F016         	goto	u6451
  9741  002D7C  EFC2  F016         	goto	u6450
  9742  002D80                     u6451:
  9743  002D80  EFF6  F016         	goto	l119
  9744  002D84                     u6450:
  9745  002D84                     
  9746                           ; BSR set to: 0
  9747                           ;distance_finding.c: 270:         d=1;
  9748  002D84  0E00               	movlw	0
  9749  002D86  6FDE               	movwf	(_d+1)& (0+255),b
  9750  002D88  0E01               	movlw	1
  9751  002D8A  6FDD               	movwf	_d& (0+255),b
  9752  002D8C                     
  9753                           ; BSR set to: 0
  9754                           ;distance_finding.c: 271:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9755  002D8C  0E03               	movlw	3
  9756  002D8E  6E02               	movwf	(??_Secuence3+1)^0,c
  9757  002D90  0E8A               	movlw	138
  9758  002D92  6E01               	movwf	??_Secuence3^0,c
  9759  002D94  0E56               	movlw	86
  9760  002D96                     u6817:
  9761  002D96  2EE8               	decfsz	wreg,f,c
  9762  002D98  D7FE               	bra	u6817
  9763  002D9A  2E01               	decfsz	??_Secuence3^0,f,c
  9764  002D9C  D7FC               	bra	u6817
  9765  002D9E  2E02               	decfsz	(??_Secuence3+1)^0,f,c
  9766  002DA0  D7FA               	bra	u6817
  9767  002DA2                     
  9768                           ;distance_finding.c: 272:         if(RC1==0 && d==1){
  9769  002DA2  B282               	btfsc	3970,1,c	;volatile
  9770  002DA4  EFD6  F016         	goto	u6461
  9771  002DA8  EFD8  F016         	goto	u6460
  9772  002DAC                     u6461:
  9773  002DAC  EFFA  F016         	goto	l5017
  9774  002DB0                     u6460:
  9775  002DB0  0100               	movlb	0	; () banked
  9776  002DB2  05DD               	decf	_d& (0+255),w,b
  9777  002DB4  11DE               	iorwf	(_d+1)& (0+255),w,b
  9778  002DB6  A4D8               	btfss	status,2,c
  9779  002DB8  EFE0  F016         	goto	u6471
  9780  002DBC  EFE2  F016         	goto	u6470
  9781  002DC0                     u6471:
  9782  002DC0  EFFA  F016         	goto	l5017
  9783  002DC4                     u6470:
  9784  002DC4                     
  9785                           ; BSR set to: 0
  9786                           ;distance_finding.c: 273:           f=0;
  9787  002DC4  0E00               	movlw	0
  9788  002DC6  6FDC               	movwf	(_f+1)& (0+255),b
  9789  002DC8  0E00               	movlw	0
  9790  002DCA  6FDB               	movwf	_f& (0+255),b
  9791                           
  9792                           ;distance_finding.c: 274:           d=0;
  9793  002DCC  0E00               	movlw	0
  9794  002DCE  6FDE               	movwf	(_d+1)& (0+255),b
  9795  002DD0  0E00               	movlw	0
  9796  002DD2  6FDD               	movwf	_d& (0+255),b
  9797  002DD4                     
  9798                           ; BSR set to: 0
  9799                           ;distance_finding.c: 275:           c++;
  9800  002DD4  4BDF               	infsnz	_c& (0+255),f,b
  9801  002DD6  2BE0               	incf	(_c+1)& (0+255),f,b
  9802  002DD8                     
  9803                           ; BSR set to: 0
  9804                           ;distance_finding.c: 276:           RB4=0;
  9805  002DD8  9881               	bcf	3969,4,c	;volatile
  9806  002DDA                     
  9807                           ; BSR set to: 0
  9808                           ;distance_finding.c: 278:           _delay((unsigned long)((300)*(20000000/4000000.0)));
  9809  002DDA  0ED6               	movlw	214
  9810  002DDC                     u6827:
  9811  002DDC  D000               	nop2	
  9812  002DDE  D000               	nop2	
  9813  002DE0  2EE8               	decfsz	wreg,f,c
  9814  002DE2  D7FC               	bra	u6827
  9815  002DE4  D000               	nop2	
  9816  002DE6                     
  9817                           ;distance_finding.c: 279:           RC4=0;
  9818  002DE6  9882               	bcf	3970,4,c	;volatile
  9819  002DE8  EFFA  F016         	goto	l5017
  9820  002DEC                     l119:
  9821                           
  9822                           ;distance_finding.c: 283:         RB4=0;
  9823  002DEC  9881               	bcf	3969,4,c	;volatile
  9824                           
  9825                           ;distance_finding.c: 284:         TRISBbits.RB4 = 1;
  9826  002DEE  8893               	bsf	147,4,c	;volatile
  9827  002DF0                     
  9828                           ;distance_finding.c: 285:           TRISC=0x00;
  9829  002DF0  0E00               	movlw	0
  9830  002DF2  6E94               	movwf	148,c	;volatile
  9831  002DF4                     l5017:
  9832                           
  9833                           ;distance_finding.c: 288:     RB4=0;
  9834  002DF4  9881               	bcf	3969,4,c	;volatile
  9835  002DF6                     
  9836                           ;distance_finding.c: 289:     TRISBbits.RB4 = 1;
  9837  002DF6  8893               	bsf	147,4,c	;volatile
  9838                           
  9839                           ;distance_finding.c: 290:     TRISC=0x00;
  9840  002DF8  0E00               	movlw	0
  9841  002DFA  6E94               	movwf	148,c	;volatile
  9842                           
  9843                           ;distance_finding.c: 291:     d=0;
  9844  002DFC  0E00               	movlw	0
  9845  002DFE  0100               	movlb	0	; () banked
  9846  002E00  6FDE               	movwf	(_d+1)& (0+255),b
  9847  002E02  0E00               	movlw	0
  9848  002E04  6FDD               	movwf	_d& (0+255),b
  9849  002E06                     
  9850                           ; BSR set to: 0
  9851  002E06  0012               	return		;funcret
  9852  002E08                     __end_of_Secuence3:
  9853                           	callstack 0
  9854                           
  9855 ;; *************** function _Secuence2 *****************
  9856 ;; Defined at:
  9857 ;;		line 154 in file "distance_finding.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;		None
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;		None
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  2   14[None  ] int 
  9864 ;; Registers used:
  9865 ;;		wreg, status,2, status,0, cstack
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9871 ;;      Params:         0       0       0       0       0       0       0       0       0
  9872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9873 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9874 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9875 ;;Total ram usage:        2 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; Hardware stack levels required when called:    3
  9878 ;; This function calls:
  9879 ;;		_LCD_Clear
  9880 ;; This function is called by:
  9881 ;;		_main
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text36
  9886  002E08                     __ptext36:
  9887                           	callstack 0
  9888  002E08                     _Secuence2:
  9889                           	callstack 27
  9890  002E08                     
  9891                           ;distance_finding.c: 155:     TRISBbits.RB2 = 0;
  9892  002E08  9493               	bcf	147,2,c	;volatile
  9893                           
  9894                           ;distance_finding.c: 156:     TRISC=0xff;
  9895  002E0A  6894               	setf	148,c	;volatile
  9896                           
  9897                           ;distance_finding.c: 157:     RB2=1;
  9898  002E0C  8481               	bsf	3969,2,c	;volatile
  9899                           
  9900                           ;distance_finding.c: 158:    if(RC0==1 && d == 0){
  9901  002E0E  A082               	btfss	3970,0,c	;volatile
  9902  002E10  EF0C  F017         	goto	u6161
  9903  002E14  EF0E  F017         	goto	u6160
  9904  002E18                     u6161:
  9905  002E18  EF4A  F017         	goto	l95
  9906  002E1C                     u6160:
  9907  002E1C  0100               	movlb	0	; () banked
  9908  002E1E  51DD               	movf	_d& (0+255),w,b
  9909  002E20  11DE               	iorwf	(_d+1)& (0+255),w,b
  9910  002E22  A4D8               	btfss	status,2,c
  9911  002E24  EF16  F017         	goto	u6171
  9912  002E28  EF18  F017         	goto	u6170
  9913  002E2C                     u6171:
  9914  002E2C  EF4A  F017         	goto	l95
  9915  002E30                     u6170:
  9916  002E30                     
  9917                           ; BSR set to: 0
  9918                           ;distance_finding.c: 159:         d=1;
  9919  002E30  0E00               	movlw	0
  9920  002E32  6FDE               	movwf	(_d+1)& (0+255),b
  9921  002E34  0E01               	movlw	1
  9922  002E36  6FDD               	movwf	_d& (0+255),b
  9923  002E38                     
  9924                           ; BSR set to: 0
  9925                           ;distance_finding.c: 160:         _delay((unsigned long)((100)*(20000000/4000.0)));
  9926  002E38  0E03               	movlw	3
  9927  002E3A  6E0A               	movwf	(??_Secuence2+1)^0,c
  9928  002E3C  0E8A               	movlw	138
  9929  002E3E  6E09               	movwf	??_Secuence2^0,c
  9930  002E40  0E56               	movlw	86
  9931  002E42                     u6837:
  9932  002E42  2EE8               	decfsz	wreg,f,c
  9933  002E44  D7FE               	bra	u6837
  9934  002E46  2E09               	decfsz	??_Secuence2^0,f,c
  9935  002E48  D7FC               	bra	u6837
  9936  002E4A  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
  9937  002E4C  D7FA               	bra	u6837
  9938  002E4E                     
  9939                           ;distance_finding.c: 161:         if(RC0==0 && d==1){
  9940  002E4E  B082               	btfsc	3970,0,c	;volatile
  9941  002E50  EF2C  F017         	goto	u6181
  9942  002E54  EF2E  F017         	goto	u6180
  9943  002E58                     u6181:
  9944  002E58  EF23  F018         	goto	l4923
  9945  002E5C                     u6180:
  9946  002E5C  0100               	movlb	0	; () banked
  9947  002E5E  05DD               	decf	_d& (0+255),w,b
  9948  002E60  11DE               	iorwf	(_d+1)& (0+255),w,b
  9949  002E62  A4D8               	btfss	status,2,c
  9950  002E64  EF36  F017         	goto	u6191
  9951  002E68  EF38  F017         	goto	u6190
  9952  002E6C                     u6191:
  9953  002E6C  EF23  F018         	goto	l4923
  9954  002E70                     u6190:
  9955  002E70                     
  9956                           ; BSR set to: 0
  9957                           ;distance_finding.c: 162:         f=0;
  9958  002E70  0E00               	movlw	0
  9959  002E72  6FDC               	movwf	(_f+1)& (0+255),b
  9960  002E74  0E00               	movlw	0
  9961  002E76  6FDB               	movwf	_f& (0+255),b
  9962                           
  9963                           ;distance_finding.c: 163:         d=0;
  9964  002E78  0E00               	movlw	0
  9965  002E7A  6FDE               	movwf	(_d+1)& (0+255),b
  9966  002E7C  0E00               	movlw	0
  9967  002E7E  6FDD               	movwf	_d& (0+255),b
  9968  002E80                     
  9969                           ; BSR set to: 0
  9970                           ;distance_finding.c: 164:         c++;
  9971  002E80  4BDF               	infsnz	_c& (0+255),f,b
  9972  002E82  2BE0               	incf	(_c+1)& (0+255),f,b
  9973  002E84                     
  9974                           ; BSR set to: 0
  9975                           ;distance_finding.c: 165:         RB1=0;
  9976  002E84  9281               	bcf	3969,1,c	;volatile
  9977  002E86                     
  9978                           ; BSR set to: 0
  9979                           ;distance_finding.c: 166:         a = 4;
  9980  002E86  0E00               	movlw	0
  9981  002E88  6FDA               	movwf	(_a+1)& (0+255),b
  9982  002E8A  0E04               	movlw	4
  9983  002E8C  6FD9               	movwf	_a& (0+255),b
  9984  002E8E                     
  9985                           ; BSR set to: 0
  9986                           ;distance_finding.c: 168:         RC0=0;
  9987  002E8E  9082               	bcf	3970,0,c	;volatile
  9988  002E90  EF23  F018         	goto	l4923
  9989  002E94                     l95:
  9990  002E94  A282               	btfss	3970,1,c	;volatile
  9991  002E96  EF4F  F017         	goto	u6201
  9992  002E9A  EF51  F017         	goto	u6200
  9993  002E9E                     u6201:
  9994  002E9E  EF8D  F017         	goto	l98
  9995  002EA2                     u6200:
  9996  002EA2  0100               	movlb	0	; () banked
  9997  002EA4  51DD               	movf	_d& (0+255),w,b
  9998  002EA6  11DE               	iorwf	(_d+1)& (0+255),w,b
  9999  002EA8  A4D8               	btfss	status,2,c
 10000  002EAA  EF59  F017         	goto	u6211
 10001  002EAE  EF5B  F017         	goto	u6210
 10002  002EB2                     u6211:
 10003  002EB2  EF8D  F017         	goto	l98
 10004  002EB6                     u6210:
 10005  002EB6                     
 10006                           ; BSR set to: 0
 10007                           ;distance_finding.c: 173:         d=1;
 10008  002EB6  0E00               	movlw	0
 10009  002EB8  6FDE               	movwf	(_d+1)& (0+255),b
 10010  002EBA  0E01               	movlw	1
 10011  002EBC  6FDD               	movwf	_d& (0+255),b
 10012  002EBE                     
 10013                           ; BSR set to: 0
 10014                           ;distance_finding.c: 174:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10015  002EBE  0E03               	movlw	3
 10016  002EC0  6E0A               	movwf	(??_Secuence2+1)^0,c
 10017  002EC2  0E8A               	movlw	138
 10018  002EC4  6E09               	movwf	??_Secuence2^0,c
 10019  002EC6  0E56               	movlw	86
 10020  002EC8                     u6847:
 10021  002EC8  2EE8               	decfsz	wreg,f,c
 10022  002ECA  D7FE               	bra	u6847
 10023  002ECC  2E09               	decfsz	??_Secuence2^0,f,c
 10024  002ECE  D7FC               	bra	u6847
 10025  002ED0  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10026  002ED2  D7FA               	bra	u6847
 10027  002ED4                     
 10028                           ;distance_finding.c: 175:         if(RC1==0 && d==1){
 10029  002ED4  B282               	btfsc	3970,1,c	;volatile
 10030  002ED6  EF6F  F017         	goto	u6221
 10031  002EDA  EF71  F017         	goto	u6220
 10032  002EDE                     u6221:
 10033  002EDE  EF23  F018         	goto	l4923
 10034  002EE2                     u6220:
 10035  002EE2  0100               	movlb	0	; () banked
 10036  002EE4  05DD               	decf	_d& (0+255),w,b
 10037  002EE6  11DE               	iorwf	(_d+1)& (0+255),w,b
 10038  002EE8  A4D8               	btfss	status,2,c
 10039  002EEA  EF79  F017         	goto	u6231
 10040  002EEE  EF7B  F017         	goto	u6230
 10041  002EF2                     u6231:
 10042  002EF2  EF23  F018         	goto	l4923
 10043  002EF6                     u6230:
 10044  002EF6                     
 10045                           ; BSR set to: 0
 10046                           ;distance_finding.c: 176:         f=0;
 10047  002EF6  0E00               	movlw	0
 10048  002EF8  6FDC               	movwf	(_f+1)& (0+255),b
 10049  002EFA  0E00               	movlw	0
 10050  002EFC  6FDB               	movwf	_f& (0+255),b
 10051                           
 10052                           ;distance_finding.c: 177:         d=0;
 10053  002EFE  0E00               	movlw	0
 10054  002F00  6FDE               	movwf	(_d+1)& (0+255),b
 10055  002F02  0E00               	movlw	0
 10056  002F04  6FDD               	movwf	_d& (0+255),b
 10057  002F06                     
 10058                           ; BSR set to: 0
 10059                           ;distance_finding.c: 178:         c++;
 10060  002F06  4BDF               	infsnz	_c& (0+255),f,b
 10061  002F08  2BE0               	incf	(_c+1)& (0+255),f,b
 10062  002F0A                     
 10063                           ; BSR set to: 0
 10064                           ;distance_finding.c: 179:         RB1=0;
 10065  002F0A  9281               	bcf	3969,1,c	;volatile
 10066  002F0C                     
 10067                           ; BSR set to: 0
 10068                           ;distance_finding.c: 180:         a=5;
 10069  002F0C  0E00               	movlw	0
 10070  002F0E  6FDA               	movwf	(_a+1)& (0+255),b
 10071  002F10  0E05               	movlw	5
 10072  002F12  6FD9               	movwf	_a& (0+255),b
 10073  002F14                     
 10074                           ; BSR set to: 0
 10075                           ;distance_finding.c: 181:         RC1=0;
 10076  002F14  9282               	bcf	3970,1,c	;volatile
 10077  002F16  EF23  F018         	goto	l4923
 10078  002F1A                     l98:
 10079  002F1A  A482               	btfss	3970,2,c	;volatile
 10080  002F1C  EF92  F017         	goto	u6241
 10081  002F20  EF94  F017         	goto	u6240
 10082  002F24                     u6241:
 10083  002F24  EFD0  F017         	goto	l101
 10084  002F28                     u6240:
 10085  002F28  0100               	movlb	0	; () banked
 10086  002F2A  51DD               	movf	_d& (0+255),w,b
 10087  002F2C  11DE               	iorwf	(_d+1)& (0+255),w,b
 10088  002F2E  A4D8               	btfss	status,2,c
 10089  002F30  EF9C  F017         	goto	u6251
 10090  002F34  EF9E  F017         	goto	u6250
 10091  002F38                     u6251:
 10092  002F38  EFD0  F017         	goto	l101
 10093  002F3C                     u6250:
 10094  002F3C                     
 10095                           ; BSR set to: 0
 10096                           ;distance_finding.c: 185:         d=1;
 10097  002F3C  0E00               	movlw	0
 10098  002F3E  6FDE               	movwf	(_d+1)& (0+255),b
 10099  002F40  0E01               	movlw	1
 10100  002F42  6FDD               	movwf	_d& (0+255),b
 10101  002F44                     
 10102                           ; BSR set to: 0
 10103                           ;distance_finding.c: 187:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10104  002F44  0E03               	movlw	3
 10105  002F46  6E0A               	movwf	(??_Secuence2+1)^0,c
 10106  002F48  0E8A               	movlw	138
 10107  002F4A  6E09               	movwf	??_Secuence2^0,c
 10108  002F4C  0E56               	movlw	86
 10109  002F4E                     u6857:
 10110  002F4E  2EE8               	decfsz	wreg,f,c
 10111  002F50  D7FE               	bra	u6857
 10112  002F52  2E09               	decfsz	??_Secuence2^0,f,c
 10113  002F54  D7FC               	bra	u6857
 10114  002F56  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10115  002F58  D7FA               	bra	u6857
 10116  002F5A                     
 10117                           ;distance_finding.c: 188:         if(RC2==0 && d==1){
 10118  002F5A  B482               	btfsc	3970,2,c	;volatile
 10119  002F5C  EFB2  F017         	goto	u6261
 10120  002F60  EFB4  F017         	goto	u6260
 10121  002F64                     u6261:
 10122  002F64  EF23  F018         	goto	l4923
 10123  002F68                     u6260:
 10124  002F68  0100               	movlb	0	; () banked
 10125  002F6A  05DD               	decf	_d& (0+255),w,b
 10126  002F6C  11DE               	iorwf	(_d+1)& (0+255),w,b
 10127  002F6E  A4D8               	btfss	status,2,c
 10128  002F70  EFBC  F017         	goto	u6271
 10129  002F74  EFBE  F017         	goto	u6270
 10130  002F78                     u6271:
 10131  002F78  EF23  F018         	goto	l4923
 10132  002F7C                     u6270:
 10133  002F7C                     
 10134                           ; BSR set to: 0
 10135                           ;distance_finding.c: 189:         f=0;
 10136  002F7C  0E00               	movlw	0
 10137  002F7E  6FDC               	movwf	(_f+1)& (0+255),b
 10138  002F80  0E00               	movlw	0
 10139  002F82  6FDB               	movwf	_f& (0+255),b
 10140  002F84                     
 10141                           ; BSR set to: 0
 10142                           ;distance_finding.c: 190:         c++;
 10143  002F84  4BDF               	infsnz	_c& (0+255),f,b
 10144  002F86  2BE0               	incf	(_c+1)& (0+255),f,b
 10145  002F88                     
 10146                           ; BSR set to: 0
 10147                           ;distance_finding.c: 191:         d=0;
 10148  002F88  0E00               	movlw	0
 10149  002F8A  6FDE               	movwf	(_d+1)& (0+255),b
 10150  002F8C  0E00               	movlw	0
 10151  002F8E  6FDD               	movwf	_d& (0+255),b
 10152  002F90                     
 10153                           ; BSR set to: 0
 10154                           ;distance_finding.c: 192:         RB1=0;
 10155  002F90  9281               	bcf	3969,1,c	;volatile
 10156  002F92                     
 10157                           ; BSR set to: 0
 10158                           ;distance_finding.c: 193:         a= 6;
 10159  002F92  0E00               	movlw	0
 10160  002F94  6FDA               	movwf	(_a+1)& (0+255),b
 10161  002F96  0E06               	movlw	6
 10162  002F98  6FD9               	movwf	_a& (0+255),b
 10163  002F9A                     
 10164                           ; BSR set to: 0
 10165                           ;distance_finding.c: 194:          RC2=0;
 10166  002F9A  9482               	bcf	3970,2,c	;volatile
 10167  002F9C  EF23  F018         	goto	l4923
 10168  002FA0                     l101:
 10169  002FA0  A882               	btfss	3970,4,c	;volatile
 10170  002FA2  EFD5  F017         	goto	u6281
 10171  002FA6  EFD7  F017         	goto	u6280
 10172  002FAA                     u6281:
 10173  002FAA  EF1A  F018         	goto	l104
 10174  002FAE                     u6280:
 10175  002FAE  0100               	movlb	0	; () banked
 10176  002FB0  51DD               	movf	_d& (0+255),w,b
 10177  002FB2  11DE               	iorwf	(_d+1)& (0+255),w,b
 10178  002FB4  A4D8               	btfss	status,2,c
 10179  002FB6  EFDF  F017         	goto	u6291
 10180  002FBA  EFE1  F017         	goto	u6290
 10181  002FBE                     u6291:
 10182  002FBE  EF1A  F018         	goto	l104
 10183  002FC2                     u6290:
 10184  002FC2                     
 10185                           ; BSR set to: 0
 10186                           ;distance_finding.c: 199:         d=1;
 10187  002FC2  0E00               	movlw	0
 10188  002FC4  6FDE               	movwf	(_d+1)& (0+255),b
 10189  002FC6  0E01               	movlw	1
 10190  002FC8  6FDD               	movwf	_d& (0+255),b
 10191  002FCA                     
 10192                           ; BSR set to: 0
 10193                           ;distance_finding.c: 200:         c++;
 10194  002FCA  4BDF               	infsnz	_c& (0+255),f,b
 10195  002FCC  2BE0               	incf	(_c+1)& (0+255),f,b
 10196  002FCE                     
 10197                           ; BSR set to: 0
 10198                           ;distance_finding.c: 201:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10199  002FCE  0E03               	movlw	3
 10200  002FD0  6E0A               	movwf	(??_Secuence2+1)^0,c
 10201  002FD2  0E8A               	movlw	138
 10202  002FD4  6E09               	movwf	??_Secuence2^0,c
 10203  002FD6  0E56               	movlw	86
 10204  002FD8                     u6867:
 10205  002FD8  2EE8               	decfsz	wreg,f,c
 10206  002FDA  D7FE               	bra	u6867
 10207  002FDC  2E09               	decfsz	??_Secuence2^0,f,c
 10208  002FDE  D7FC               	bra	u6867
 10209  002FE0  2E0A               	decfsz	(??_Secuence2+1)^0,f,c
 10210  002FE2  D7FA               	bra	u6867
 10211  002FE4                     
 10212                           ;distance_finding.c: 202:         if(RC1==0 && d==1){
 10213  002FE4  B282               	btfsc	3970,1,c	;volatile
 10214  002FE6  EFF7  F017         	goto	u6301
 10215  002FEA  EFF9  F017         	goto	u6300
 10216  002FEE                     u6301:
 10217  002FEE  EF23  F018         	goto	l4923
 10218  002FF2                     u6300:
 10219  002FF2  0100               	movlb	0	; () banked
 10220  002FF4  05DD               	decf	_d& (0+255),w,b
 10221  002FF6  11DE               	iorwf	(_d+1)& (0+255),w,b
 10222  002FF8  A4D8               	btfss	status,2,c
 10223  002FFA  EF01  F018         	goto	u6311
 10224  002FFE  EF03  F018         	goto	u6310
 10225  003002                     u6311:
 10226  003002  EF23  F018         	goto	l4923
 10227  003006                     u6310:
 10228  003006                     
 10229                           ; BSR set to: 0
 10230                           ;distance_finding.c: 203:           f=0;
 10231  003006  0E00               	movlw	0
 10232  003008  6FDC               	movwf	(_f+1)& (0+255),b
 10233  00300A  0E00               	movlw	0
 10234  00300C  6FDB               	movwf	_f& (0+255),b
 10235                           
 10236                           ;distance_finding.c: 204:           c=1;
 10237  00300E  0E00               	movlw	0
 10238  003010  6FE0               	movwf	(_c+1)& (0+255),b
 10239  003012  0E01               	movlw	1
 10240  003014  6FDF               	movwf	_c& (0+255),b
 10241  003016                     
 10242                           ; BSR set to: 0
 10243                           ;distance_finding.c: 205:           LCD_Clear();
 10244  003016  ECC2  F023         	call	_LCD_Clear	;wreg free
 10245  00301A                     
 10246                           ;distance_finding.c: 206:           d=0;
 10247  00301A  0E00               	movlw	0
 10248  00301C  0100               	movlb	0	; () banked
 10249  00301E  6FDE               	movwf	(_d+1)& (0+255),b
 10250  003020  0E00               	movlw	0
 10251  003022  6FDD               	movwf	_d& (0+255),b
 10252  003024                     
 10253                           ; BSR set to: 0
 10254                           ;distance_finding.c: 207:           RB1=0;
 10255  003024  9281               	bcf	3969,1,c	;volatile
 10256  003026                     
 10257                           ; BSR set to: 0
 10258                           ;distance_finding.c: 208:           a = 1000;
 10259  003026  0E03               	movlw	3
 10260  003028  6FDA               	movwf	(_a+1)& (0+255),b
 10261  00302A  0EE8               	movlw	232
 10262  00302C  6FD9               	movwf	_a& (0+255),b
 10263  00302E                     
 10264                           ; BSR set to: 0
 10265                           ;distance_finding.c: 209:           RC4=0;
 10266  00302E  9882               	bcf	3970,4,c	;volatile
 10267  003030  EF23  F018         	goto	l4923
 10268  003034                     l104:
 10269                           
 10270                           ;distance_finding.c: 214:         RB2=0;TRISBbits.RB2 = 1;
 10271  003034  9481               	bcf	3969,2,c	;volatile
 10272  003036  8493               	bsf	147,2,c	;volatile
 10273  003038                     
 10274                           ;distance_finding.c: 215:           TRISC=0x00;
 10275  003038  0E00               	movlw	0
 10276  00303A  6E94               	movwf	148,c	;volatile
 10277                           
 10278                           ;distance_finding.c: 216:           d=0;
 10279  00303C  0E00               	movlw	0
 10280  00303E  0100               	movlb	0	; () banked
 10281  003040  6FDE               	movwf	(_d+1)& (0+255),b
 10282  003042  0E00               	movlw	0
 10283  003044  6FDD               	movwf	_d& (0+255),b
 10284  003046                     l4923:
 10285                           
 10286                           ;distance_finding.c: 219:     RB2=0;TRISBbits.RB2 = 1;
 10287  003046  9481               	bcf	3969,2,c	;volatile
 10288  003048  8493               	bsf	147,2,c	;volatile
 10289                           
 10290                           ;distance_finding.c: 220:     TRISC=0x00;
 10291  00304A  0E00               	movlw	0
 10292  00304C  6E94               	movwf	148,c	;volatile
 10293  00304E  0012               	return		;funcret
 10294  003050                     __end_of_Secuence2:
 10295                           	callstack 0
 10296                           
 10297 ;; *************** function _LCD_Clear *****************
 10298 ;; Defined at:
 10299 ;;		line 76 in file "LCD_16x2_4bit_mode.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;		None
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;		None
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg, status,2, status,0, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10313 ;;      Params:         0       0       0       0       0       0       0       0       0
 10314 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10315 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10316 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10317 ;;Total ram usage:        0 bytes
 10318 ;; Hardware stack levels used:    1
 10319 ;; Hardware stack levels required when called:    2
 10320 ;; This function calls:
 10321 ;;		_LCD_Command
 10322 ;; This function is called by:
 10323 ;;		_main
 10324 ;;		_Secuence2
 10325 ;;		_Secuence4
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text37
 10330  004784                     __ptext37:
 10331                           	callstack 0
 10332  004784                     _LCD_Clear:
 10333                           	callstack 27
 10334  004784                     
 10335                           ;LCD_16x2_4bit_mode.c: 78:     LCD_Command(0x01);
 10336  004784  0E01               	movlw	1
 10337  004786  EC37  F022         	call	_LCD_Command
 10338  00478A  0012               	return		;funcret
 10339  00478C                     __end_of_LCD_Clear:
 10340                           	callstack 0
 10341                           
 10342 ;; *************** function _Secuence1 *****************
 10343 ;; Defined at:
 10344 ;;		line 82 in file "distance_finding.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;		None
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;		None
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  2   12[None  ] int 
 10351 ;; Registers used:
 10352 ;;		wreg, status,2, status,0
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10358 ;;      Params:         0       0       0       0       0       0       0       0       0
 10359 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10360 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10361 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10362 ;;Total ram usage:        2 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_main
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text38
 10372  003050                     __ptext38:
 10373                           	callstack 0
 10374  003050                     _Secuence1:
 10375                           	callstack 30
 10376  003050                     
 10377                           ;distance_finding.c: 83:     TRISBbits.RB1 = 0;
 10378  003050  9293               	bcf	147,1,c	;volatile
 10379                           
 10380                           ;distance_finding.c: 84:     TRISC=0xff;
 10381  003052  6894               	setf	148,c	;volatile
 10382                           
 10383                           ;distance_finding.c: 86:     RB1=1;
 10384  003054  8281               	bsf	3969,1,c	;volatile
 10385                           
 10386                           ;distance_finding.c: 87:     if(RC0==1 && d == 0){
 10387  003056  A082               	btfss	3970,0,c	;volatile
 10388  003058  EF30  F018         	goto	u6001
 10389  00305C  EF32  F018         	goto	u6000
 10390  003060                     u6001:
 10391  003060  EF6E  F018         	goto	l80
 10392  003064                     u6000:
 10393  003064  0100               	movlb	0	; () banked
 10394  003066  51DD               	movf	_d& (0+255),w,b
 10395  003068  11DE               	iorwf	(_d+1)& (0+255),w,b
 10396  00306A  A4D8               	btfss	status,2,c
 10397  00306C  EF3A  F018         	goto	u6011
 10398  003070  EF3C  F018         	goto	u6010
 10399  003074                     u6011:
 10400  003074  EF6E  F018         	goto	l80
 10401  003078                     u6010:
 10402  003078                     
 10403                           ; BSR set to: 0
 10404                           ;distance_finding.c: 88:         d=1;
 10405  003078  0E00               	movlw	0
 10406  00307A  6FDE               	movwf	(_d+1)& (0+255),b
 10407  00307C  0E01               	movlw	1
 10408  00307E  6FDD               	movwf	_d& (0+255),b
 10409                           
 10410                           ;distance_finding.c: 89:         f=0;
 10411  003080  0E00               	movlw	0
 10412  003082  6FDC               	movwf	(_f+1)& (0+255),b
 10413  003084  0E00               	movlw	0
 10414  003086  6FDB               	movwf	_f& (0+255),b
 10415  003088                     
 10416                           ; BSR set to: 0
 10417                           ;distance_finding.c: 90:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10418  003088  0E03               	movlw	3
 10419  00308A  6E02               	movwf	(??_Secuence1+1)^0,c
 10420  00308C  0E8A               	movlw	138
 10421  00308E  6E01               	movwf	??_Secuence1^0,c
 10422  003090  0E56               	movlw	86
 10423  003092                     u6877:
 10424  003092  2EE8               	decfsz	wreg,f,c
 10425  003094  D7FE               	bra	u6877
 10426  003096  2E01               	decfsz	??_Secuence1^0,f,c
 10427  003098  D7FC               	bra	u6877
 10428  00309A  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 10429  00309C  D7FA               	bra	u6877
 10430  00309E                     
 10431                           ;distance_finding.c: 91:         if(RC0==0 && d==1){
 10432  00309E  B082               	btfsc	3970,0,c	;volatile
 10433  0030A0  EF54  F018         	goto	u6021
 10434  0030A4  EF56  F018         	goto	u6020
 10435  0030A8                     u6021:
 10436  0030A8  EF44  F019         	goto	l4829
 10437  0030AC                     u6020:
 10438  0030AC  0100               	movlb	0	; () banked
 10439  0030AE  05DD               	decf	_d& (0+255),w,b
 10440  0030B0  11DE               	iorwf	(_d+1)& (0+255),w,b
 10441  0030B2  A4D8               	btfss	status,2,c
 10442  0030B4  EF5E  F018         	goto	u6031
 10443  0030B8  EF60  F018         	goto	u6030
 10444  0030BC                     u6031:
 10445  0030BC  EF44  F019         	goto	l4829
 10446  0030C0                     u6030:
 10447  0030C0                     
 10448                           ; BSR set to: 0
 10449                           ;distance_finding.c: 92:         d=0;
 10450  0030C0  0E00               	movlw	0
 10451  0030C2  6FDE               	movwf	(_d+1)& (0+255),b
 10452  0030C4  0E00               	movlw	0
 10453  0030C6  6FDD               	movwf	_d& (0+255),b
 10454  0030C8                     
 10455                           ; BSR set to: 0
 10456                           ;distance_finding.c: 93:         RB1=0;
 10457  0030C8  9281               	bcf	3969,1,c	;volatile
 10458                           
 10459                           ;distance_finding.c: 94:         a = 7;
 10460  0030CA  0E00               	movlw	0
 10461  0030CC  6FDA               	movwf	(_a+1)& (0+255),b
 10462  0030CE  0E07               	movlw	7
 10463  0030D0  6FD9               	movwf	_a& (0+255),b
 10464  0030D2                     
 10465                           ; BSR set to: 0
 10466                           ;distance_finding.c: 95:         c++;
 10467  0030D2  4BDF               	infsnz	_c& (0+255),f,b
 10468  0030D4  2BE0               	incf	(_c+1)& (0+255),f,b
 10469  0030D6                     
 10470                           ; BSR set to: 0
 10471                           ;distance_finding.c: 98:         RC0=0;
 10472  0030D6  9082               	bcf	3970,0,c	;volatile
 10473  0030D8  EF44  F019         	goto	l4829
 10474  0030DC                     l80:
 10475  0030DC  A282               	btfss	3970,1,c	;volatile
 10476  0030DE  EF73  F018         	goto	u6041
 10477  0030E2  EF75  F018         	goto	u6040
 10478  0030E6                     u6041:
 10479  0030E6  EFB1  F018         	goto	l83
 10480  0030EA                     u6040:
 10481  0030EA  0100               	movlb	0	; () banked
 10482  0030EC  51DD               	movf	_d& (0+255),w,b
 10483  0030EE  11DE               	iorwf	(_d+1)& (0+255),w,b
 10484  0030F0  A4D8               	btfss	status,2,c
 10485  0030F2  EF7D  F018         	goto	u6051
 10486  0030F6  EF7F  F018         	goto	u6050
 10487  0030FA                     u6051:
 10488  0030FA  EFB1  F018         	goto	l83
 10489  0030FE                     u6050:
 10490  0030FE                     
 10491                           ; BSR set to: 0
 10492                           ;distance_finding.c: 103:         d=1;
 10493  0030FE  0E00               	movlw	0
 10494  003100  6FDE               	movwf	(_d+1)& (0+255),b
 10495  003102  0E01               	movlw	1
 10496  003104  6FDD               	movwf	_d& (0+255),b
 10497  003106                     
 10498                           ; BSR set to: 0
 10499                           ;distance_finding.c: 104:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10500  003106  0E03               	movlw	3
 10501  003108  6E02               	movwf	(??_Secuence1+1)^0,c
 10502  00310A  0E8A               	movlw	138
 10503  00310C  6E01               	movwf	??_Secuence1^0,c
 10504  00310E  0E56               	movlw	86
 10505  003110                     u6887:
 10506  003110  2EE8               	decfsz	wreg,f,c
 10507  003112  D7FE               	bra	u6887
 10508  003114  2E01               	decfsz	??_Secuence1^0,f,c
 10509  003116  D7FC               	bra	u6887
 10510  003118  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 10511  00311A  D7FA               	bra	u6887
 10512  00311C                     
 10513                           ;distance_finding.c: 105:         if(RC1==0 && d==1){
 10514  00311C  B282               	btfsc	3970,1,c	;volatile
 10515  00311E  EF93  F018         	goto	u6061
 10516  003122  EF95  F018         	goto	u6060
 10517  003126                     u6061:
 10518  003126  EF44  F019         	goto	l4829
 10519  00312A                     u6060:
 10520  00312A  0100               	movlb	0	; () banked
 10521  00312C  05DD               	decf	_d& (0+255),w,b
 10522  00312E  11DE               	iorwf	(_d+1)& (0+255),w,b
 10523  003130  A4D8               	btfss	status,2,c
 10524  003132  EF9D  F018         	goto	u6071
 10525  003136  EF9F  F018         	goto	u6070
 10526  00313A                     u6071:
 10527  00313A  EF44  F019         	goto	l4829
 10528  00313E                     u6070:
 10529  00313E                     
 10530                           ; BSR set to: 0
 10531                           ;distance_finding.c: 106:         d=0;
 10532  00313E  0E00               	movlw	0
 10533  003140  6FDE               	movwf	(_d+1)& (0+255),b
 10534  003142  0E00               	movlw	0
 10535  003144  6FDD               	movwf	_d& (0+255),b
 10536                           
 10537                           ;distance_finding.c: 107:         f=0;
 10538  003146  0E00               	movlw	0
 10539  003148  6FDC               	movwf	(_f+1)& (0+255),b
 10540  00314A  0E00               	movlw	0
 10541  00314C  6FDB               	movwf	_f& (0+255),b
 10542  00314E                     
 10543                           ; BSR set to: 0
 10544                           ;distance_finding.c: 108:         RB1=0;
 10545  00314E  9281               	bcf	3969,1,c	;volatile
 10546                           
 10547                           ;distance_finding.c: 109:         a=8;
 10548  003150  0E00               	movlw	0
 10549  003152  6FDA               	movwf	(_a+1)& (0+255),b
 10550  003154  0E08               	movlw	8
 10551  003156  6FD9               	movwf	_a& (0+255),b
 10552  003158                     
 10553                           ; BSR set to: 0
 10554                           ;distance_finding.c: 110:          c++;
 10555  003158  4BDF               	infsnz	_c& (0+255),f,b
 10556  00315A  2BE0               	incf	(_c+1)& (0+255),f,b
 10557  00315C                     
 10558                           ; BSR set to: 0
 10559                           ;distance_finding.c: 112:         RC1=0;
 10560  00315C  9282               	bcf	3970,1,c	;volatile
 10561  00315E  EF44  F019         	goto	l4829
 10562  003162                     l83:
 10563  003162  A482               	btfss	3970,2,c	;volatile
 10564  003164  EFB6  F018         	goto	u6081
 10565  003168  EFB8  F018         	goto	u6080
 10566  00316C                     u6081:
 10567  00316C  EFF4  F018         	goto	l86
 10568  003170                     u6080:
 10569  003170  0100               	movlb	0	; () banked
 10570  003172  51DD               	movf	_d& (0+255),w,b
 10571  003174  11DE               	iorwf	(_d+1)& (0+255),w,b
 10572  003176  A4D8               	btfss	status,2,c
 10573  003178  EFC0  F018         	goto	u6091
 10574  00317C  EFC2  F018         	goto	u6090
 10575  003180                     u6091:
 10576  003180  EFF4  F018         	goto	l86
 10577  003184                     u6090:
 10578  003184                     
 10579                           ; BSR set to: 0
 10580                           ;distance_finding.c: 117:         d=1;
 10581  003184  0E00               	movlw	0
 10582  003186  6FDE               	movwf	(_d+1)& (0+255),b
 10583  003188  0E01               	movlw	1
 10584  00318A  6FDD               	movwf	_d& (0+255),b
 10585  00318C                     
 10586                           ; BSR set to: 0
 10587                           ;distance_finding.c: 118:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10588  00318C  0E03               	movlw	3
 10589  00318E  6E02               	movwf	(??_Secuence1+1)^0,c
 10590  003190  0E8A               	movlw	138
 10591  003192  6E01               	movwf	??_Secuence1^0,c
 10592  003194  0E56               	movlw	86
 10593  003196                     u6897:
 10594  003196  2EE8               	decfsz	wreg,f,c
 10595  003198  D7FE               	bra	u6897
 10596  00319A  2E01               	decfsz	??_Secuence1^0,f,c
 10597  00319C  D7FC               	bra	u6897
 10598  00319E  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 10599  0031A0  D7FA               	bra	u6897
 10600  0031A2                     
 10601                           ;distance_finding.c: 119:         if(RC2==0 && d==1){
 10602  0031A2  B482               	btfsc	3970,2,c	;volatile
 10603  0031A4  EFD6  F018         	goto	u6101
 10604  0031A8  EFD8  F018         	goto	u6100
 10605  0031AC                     u6101:
 10606  0031AC  EF44  F019         	goto	l4829
 10607  0031B0                     u6100:
 10608  0031B0  0100               	movlb	0	; () banked
 10609  0031B2  05DD               	decf	_d& (0+255),w,b
 10610  0031B4  11DE               	iorwf	(_d+1)& (0+255),w,b
 10611  0031B6  A4D8               	btfss	status,2,c
 10612  0031B8  EFE0  F018         	goto	u6111
 10613  0031BC  EFE2  F018         	goto	u6110
 10614  0031C0                     u6111:
 10615  0031C0  EF44  F019         	goto	l4829
 10616  0031C4                     u6110:
 10617  0031C4                     
 10618                           ; BSR set to: 0
 10619                           ;distance_finding.c: 120:         d=0;
 10620  0031C4  0E00               	movlw	0
 10621  0031C6  6FDE               	movwf	(_d+1)& (0+255),b
 10622  0031C8  0E00               	movlw	0
 10623  0031CA  6FDD               	movwf	_d& (0+255),b
 10624                           
 10625                           ;distance_finding.c: 121:         f=0;
 10626  0031CC  0E00               	movlw	0
 10627  0031CE  6FDC               	movwf	(_f+1)& (0+255),b
 10628  0031D0  0E00               	movlw	0
 10629  0031D2  6FDB               	movwf	_f& (0+255),b
 10630  0031D4                     
 10631                           ; BSR set to: 0
 10632                           ;distance_finding.c: 122:         RB1=0;
 10633  0031D4  9281               	bcf	3969,1,c	;volatile
 10634                           
 10635                           ;distance_finding.c: 123:         a= 9;
 10636  0031D6  0E00               	movlw	0
 10637  0031D8  6FDA               	movwf	(_a+1)& (0+255),b
 10638  0031DA  0E09               	movlw	9
 10639  0031DC  6FD9               	movwf	_a& (0+255),b
 10640  0031DE                     
 10641                           ; BSR set to: 0
 10642                           ;distance_finding.c: 124:         c++;
 10643  0031DE  4BDF               	infsnz	_c& (0+255),f,b
 10644  0031E0  2BE0               	incf	(_c+1)& (0+255),f,b
 10645  0031E2                     
 10646                           ; BSR set to: 0
 10647                           ;distance_finding.c: 126:          RC2=0;
 10648  0031E2  9482               	bcf	3970,2,c	;volatile
 10649  0031E4  EF44  F019         	goto	l4829
 10650  0031E8                     l86:
 10651  0031E8  A882               	btfss	3970,4,c	;volatile
 10652  0031EA  EFF9  F018         	goto	u6121
 10653  0031EE  EFFB  F018         	goto	u6120
 10654  0031F2                     u6121:
 10655  0031F2  EF3B  F019         	goto	l89
 10656  0031F6                     u6120:
 10657  0031F6  0100               	movlb	0	; () banked
 10658  0031F8  51DD               	movf	_d& (0+255),w,b
 10659  0031FA  11DE               	iorwf	(_d+1)& (0+255),w,b
 10660  0031FC  A4D8               	btfss	status,2,c
 10661  0031FE  EF03  F019         	goto	u6131
 10662  003202  EF05  F019         	goto	u6130
 10663  003206                     u6131:
 10664  003206  EF3B  F019         	goto	l89
 10665  00320A                     u6130:
 10666  00320A                     
 10667                           ; BSR set to: 0
 10668                           ;distance_finding.c: 130:         d=1;
 10669  00320A  0E00               	movlw	0
 10670  00320C  6FDE               	movwf	(_d+1)& (0+255),b
 10671  00320E  0E01               	movlw	1
 10672  003210  6FDD               	movwf	_d& (0+255),b
 10673  003212                     
 10674                           ; BSR set to: 0
 10675                           ;distance_finding.c: 131:         _delay((unsigned long)((100)*(20000000/4000.0)));
 10676  003212  0E03               	movlw	3
 10677  003214  6E02               	movwf	(??_Secuence1+1)^0,c
 10678  003216  0E8A               	movlw	138
 10679  003218  6E01               	movwf	??_Secuence1^0,c
 10680  00321A  0E56               	movlw	86
 10681  00321C                     u6907:
 10682  00321C  2EE8               	decfsz	wreg,f,c
 10683  00321E  D7FE               	bra	u6907
 10684  003220  2E01               	decfsz	??_Secuence1^0,f,c
 10685  003222  D7FC               	bra	u6907
 10686  003224  2E02               	decfsz	(??_Secuence1+1)^0,f,c
 10687  003226  D7FA               	bra	u6907
 10688  003228                     
 10689                           ;distance_finding.c: 132:         if(RC1==0 && d==1){
 10690  003228  B282               	btfsc	3970,1,c	;volatile
 10691  00322A  EF19  F019         	goto	u6141
 10692  00322E  EF1B  F019         	goto	u6140
 10693  003232                     u6141:
 10694  003232  EF44  F019         	goto	l4829
 10695  003236                     u6140:
 10696  003236  0100               	movlb	0	; () banked
 10697  003238  05DD               	decf	_d& (0+255),w,b
 10698  00323A  11DE               	iorwf	(_d+1)& (0+255),w,b
 10699  00323C  A4D8               	btfss	status,2,c
 10700  00323E  EF23  F019         	goto	u6151
 10701  003242  EF25  F019         	goto	u6150
 10702  003246                     u6151:
 10703  003246  EF44  F019         	goto	l4829
 10704  00324A                     u6150:
 10705  00324A                     
 10706                           ; BSR set to: 0
 10707                           ;distance_finding.c: 133:           f=0;
 10708  00324A  0E00               	movlw	0
 10709  00324C  6FDC               	movwf	(_f+1)& (0+255),b
 10710  00324E  0E00               	movlw	0
 10711  003250  6FDB               	movwf	_f& (0+255),b
 10712                           
 10713                           ;distance_finding.c: 134:           d=0;
 10714  003252  0E00               	movlw	0
 10715  003254  6FDE               	movwf	(_d+1)& (0+255),b
 10716  003256  0E00               	movlw	0
 10717  003258  6FDD               	movwf	_d& (0+255),b
 10718  00325A                     
 10719                           ; BSR set to: 0
 10720                           ;distance_finding.c: 135:           RB1=0;
 10721  00325A  9281               	bcf	3969,1,c	;volatile
 10722                           
 10723                           ;distance_finding.c: 136:           a = 1;
 10724  00325C  0E00               	movlw	0
 10725  00325E  6FDA               	movwf	(_a+1)& (0+255),b
 10726  003260  0E01               	movlw	1
 10727  003262  6FD9               	movwf	_a& (0+255),b
 10728  003264                     
 10729                           ; BSR set to: 0
 10730                           ;distance_finding.c: 137:           c++;
 10731  003264  4BDF               	infsnz	_c& (0+255),f,b
 10732  003266  2BE0               	incf	(_c+1)& (0+255),f,b
 10733  003268                     
 10734                           ; BSR set to: 0
 10735                           ;distance_finding.c: 138:           f=1;
 10736  003268  0E00               	movlw	0
 10737  00326A  6FDC               	movwf	(_f+1)& (0+255),b
 10738  00326C  0E01               	movlw	1
 10739  00326E  6FDB               	movwf	_f& (0+255),b
 10740  003270                     
 10741                           ; BSR set to: 0
 10742                           ;distance_finding.c: 140:           RC4=0;
 10743  003270  9882               	bcf	3970,4,c	;volatile
 10744  003272  EF44  F019         	goto	l4829
 10745  003276                     l89:
 10746  003276  9281               	bcf	3969,1,c	;volatile
 10747                           
 10748                           ;distance_finding.c: 144:         TRISBbits.RB1 = 1;
 10749  003278  8293               	bsf	147,1,c	;volatile
 10750  00327A                     
 10751                           ;distance_finding.c: 145:           TRISC=0x00;
 10752  00327A  0E00               	movlw	0
 10753  00327C  6E94               	movwf	148,c	;volatile
 10754                           
 10755                           ;distance_finding.c: 146:           d=0;
 10756  00327E  0E00               	movlw	0
 10757  003280  0100               	movlb	0	; () banked
 10758  003282  6FDE               	movwf	(_d+1)& (0+255),b
 10759  003284  0E00               	movlw	0
 10760  003286  6FDD               	movwf	_d& (0+255),b
 10761  003288                     l4829:
 10762                           
 10763                           ;distance_finding.c: 149:     RB1 = 0;
 10764  003288  9281               	bcf	3969,1,c	;volatile
 10765  00328A                     
 10766                           ;distance_finding.c: 150:     TRISBbits.RB1 = 1;
 10767  00328A  8293               	bsf	147,1,c	;volatile
 10768                           
 10769                           ;distance_finding.c: 151:     TRISC=0x00;
 10770  00328C  0E00               	movlw	0
 10771  00328E  6E94               	movwf	148,c	;volatile
 10772  003290  0012               	return		;funcret
 10773  003292                     __end_of_Secuence1:
 10774                           	callstack 0
 10775                           
 10776 ;; *************** function _LCD_String_xy *****************
 10777 ;; Defined at:
 10778 ;;		line 57 in file "LCD_16x2_4bit_mode.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;  row             1    wreg     unsigned char 
 10781 ;;  pos             1   10[COMRAM] unsigned char 
 10782 ;;  msg             2   11[COMRAM] PTR const unsigned char 
 10783 ;;		 -> main@Total_distance(20), STR_1(18), 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  row             1   13[COMRAM] unsigned char 
 10786 ;;  location        1   14[COMRAM] unsigned char 
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10796 ;;      Params:         3       0       0       0       0       0       0       0       0
 10797 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10799 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10800 ;;Total ram usage:        5 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    3
 10803 ;; This function calls:
 10804 ;;		_LCD_Command
 10805 ;;		_LCD_String
 10806 ;; This function is called by:
 10807 ;;		_main
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text39
 10812  004610                     __ptext39:
 10813                           	callstack 0
 10814  004610                     _LCD_String_xy:
 10815                           	callstack 27
 10816                           
 10817                           ;incstack = 0
 10818                           ;LCD_String_xy@row stored from wreg
 10819  004610  6E0E               	movwf	LCD_String_xy@row^0,c
 10820  004612                     
 10821                           ;LCD_16x2_4bit_mode.c: 60:     if(row<=1)
 10822  004612  0E02               	movlw	2
 10823  004614  600E               	cpfslt	LCD_String_xy@row^0,c
 10824  004616  EF0F  F023         	goto	u5991
 10825  00461A  EF11  F023         	goto	u5990
 10826  00461E                     u5991:
 10827  00461E  EF1A  F023         	goto	l4745
 10828  004622                     u5990:
 10829  004622                     
 10830                           ;LCD_16x2_4bit_mode.c: 61:     {;LCD_16x2_4bit_mode.c: 62:         location=(0x80) | ((p
      +                          os) & 0x0f);
 10831  004622  500B               	movf	LCD_String_xy@pos^0,w,c
 10832  004624  0B0F               	andlw	15
 10833  004626  0980               	iorlw	128
 10834  004628  6E0F               	movwf	LCD_String_xy@location^0,c
 10835  00462A                     
 10836                           ;LCD_16x2_4bit_mode.c: 63:         LCD_Command(location);
 10837  00462A  500F               	movf	LCD_String_xy@location^0,w,c
 10838  00462C  EC37  F022         	call	_LCD_Command
 10839                           
 10840                           ;LCD_16x2_4bit_mode.c: 64:     }
 10841  004630  EF21  F023         	goto	l4749
 10842  004634                     l4745:
 10843                           
 10844                           ;LCD_16x2_4bit_mode.c: 66:     {;LCD_16x2_4bit_mode.c: 67:         location=(0xC0) | ((p
      +                          os) & 0x0f);
 10845  004634  500B               	movf	LCD_String_xy@pos^0,w,c
 10846  004636  0B0F               	andlw	15
 10847  004638  09C0               	iorlw	192
 10848  00463A  6E0F               	movwf	LCD_String_xy@location^0,c
 10849  00463C                     
 10850                           ;LCD_16x2_4bit_mode.c: 68:         LCD_Command(location);
 10851  00463C  500F               	movf	LCD_String_xy@location^0,w,c
 10852  00463E  EC37  F022         	call	_LCD_Command
 10853  004642                     l4749:
 10854                           
 10855                           ;LCD_16x2_4bit_mode.c: 72:     LCD_String(msg);
 10856  004642  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
 10857  004646  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 10858  00464A  EC62  F021         	call	_LCD_String	;wreg free
 10859  00464E  0012               	return		;funcret
 10860  004650                     __end_of_LCD_String_xy:
 10861                           	callstack 0
 10862                           
 10863 ;; *************** function _LCD_String *****************
 10864 ;; Defined at:
 10865 ;;		line 47 in file "LCD_16x2_4bit_mode.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  msg             2    8[COMRAM] PTR const unsigned char 
 10868 ;;		 -> main@Total_distance(20), STR_1(18), 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;		None
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  1    wreg      void 
 10873 ;; Registers used:
 10874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10880 ;;      Params:         2       0       0       0       0       0       0       0       0
 10881 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10882 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10883 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10884 ;;Total ram usage:        2 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; Hardware stack levels required when called:    2
 10887 ;; This function calls:
 10888 ;;		_LCD_Char
 10889 ;; This function is called by:
 10890 ;;		_LCD_String_xy
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           	psect	text40
 10895  0042C4                     __ptext40:
 10896                           	callstack 0
 10897  0042C4                     _LCD_String:
 10898                           	callstack 27
 10899  0042C4                     
 10900                           ;LCD_16x2_4bit_mode.c: 47: void LCD_String(const char *msg);LCD_16x2_4bit_mode.c: 48: {;
      +                          LCD_16x2_4bit_mode.c: 49:  while((*msg)!=0)
 10901  0042C4  EF78  F021         	goto	l4713
 10902  0042C8                     l4709:
 10903                           
 10904                           ;LCD_16x2_4bit_mode.c: 50:  {;LCD_16x2_4bit_mode.c: 51:    LCD_Char(*msg);
 10905  0042C8  C009  FFF6         	movff	LCD_String@msg,tblptrl
 10906  0042CC  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 10907  0042D0  6AF8               	clrf	tblptru,c
 10908  0042D2  0E07               	movlw	(high __ramtop+-1)
 10909  0042D4  64F7               	cpfsgt	tblptrh,c
 10910  0042D6  D003               	bra	u5957
 10911  0042D8  0008               	tblrd		*
 10912  0042DA  50F5               	movf	tablat,w,c
 10913  0042DC  D005               	bra	u5950
 10914  0042DE                     u5957:
 10915  0042DE  CFF6 FFE1          	movff	tblptrl,fsr1l
 10916  0042E2  CFF7 FFE2          	movff	tblptrh,fsr1h
 10917  0042E6  50E7               	movf	indf1,w,c
 10918  0042E8                     u5950:
 10919  0042E8  EC11  F022         	call	_LCD_Char
 10920  0042EC                     
 10921                           ;LCD_16x2_4bit_mode.c: 52:    msg++;
 10922  0042EC  4A09               	infsnz	LCD_String@msg^0,f,c
 10923  0042EE  2A0A               	incf	(LCD_String@msg+1)^0,f,c
 10924  0042F0                     l4713:
 10925                           
 10926                           ;LCD_16x2_4bit_mode.c: 49:  while((*msg)!=0)
 10927  0042F0  C009  FFF6         	movff	LCD_String@msg,tblptrl
 10928  0042F4  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
 10929  0042F8  6AF8               	clrf	tblptru,c
 10930  0042FA  0E07               	movlw	(high __ramtop+-1)
 10931  0042FC  64F7               	cpfsgt	tblptrh,c
 10932  0042FE  D003               	bra	u5967
 10933  004300  0008               	tblrd		*
 10934  004302  50F5               	movf	tablat,w,c
 10935  004304  D005               	bra	u5960
 10936  004306                     u5967:
 10937  004306  CFF6 FFE1          	movff	tblptrl,fsr1l
 10938  00430A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10939  00430E  50E7               	movf	indf1,w,c
 10940  004310                     u5960:
 10941  004310  0900               	iorlw	0
 10942  004312  A4D8               	btfss	status,2,c
 10943  004314  EF8E  F021         	goto	u5971
 10944  004318  EF90  F021         	goto	u5970
 10945  00431C                     u5971:
 10946  00431C  EF64  F021         	goto	l4709
 10947  004320                     u5970:
 10948  004320  0012               	return		;funcret
 10949  004322                     __end_of_LCD_String:
 10950                           	callstack 0
 10951                           
 10952 ;; *************** function _LCD_Char *****************
 10953 ;; Defined at:
 10954 ;;		line 33 in file "LCD_16x2_4bit_mode.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;  dat             1    wreg     unsigned char 
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;  dat             1    7[COMRAM] unsigned char 
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  1    wreg      void 
 10961 ;; Registers used:
 10962 ;;		wreg, status,2, status,0, cstack
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10968 ;;      Params:         0       0       0       0       0       0       0       0       0
 10969 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10970 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10971 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10972 ;;Total ram usage:        2 bytes
 10973 ;; Hardware stack levels used:    1
 10974 ;; Hardware stack levels required when called:    1
 10975 ;; This function calls:
 10976 ;;		_MSdelay
 10977 ;; This function is called by:
 10978 ;;		_LCD_String
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           	psect	text41
 10983  004422                     __ptext41:
 10984                           	callstack 0
 10985  004422                     _LCD_Char:
 10986                           	callstack 27
 10987                           
 10988                           ;incstack = 0
 10989                           ;LCD_Char@dat stored from wreg
 10990  004422  6E08               	movwf	LCD_Char@dat^0,c
 10991  004424                     
 10992                           ;LCD_16x2_4bit_mode.c: 33: void LCD_Char(unsigned char dat);LCD_16x2_4bit_mode.c: 34: {;
      +                          LCD_16x2_4bit_mode.c: 35:  LATD = (LATD & 0x0f) | (0xF0 & dat);
 10993  004424  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 10994  004428  0EF0               	movlw	240
 10995  00442A  1607               	andwf	??_LCD_Char^0,f,c
 10996  00442C  508C               	movf	140,w,c	;volatile
 10997  00442E  0B0F               	andlw	15
 10998  004430  1007               	iorwf	??_LCD_Char^0,w,c
 10999  004432  6E8C               	movwf	140,c	;volatile
 11000  004434                     
 11001                           ;LCD_16x2_4bit_mode.c: 36:  LATD2 = 1;
 11002  004434  848C               	bsf	3980,2,c	;volatile
 11003  004436                     
 11004                           ;LCD_16x2_4bit_mode.c: 37:  LATD3 = 1;
 11005  004436  868C               	bsf	3980,3,c	;volatile
 11006  004438                     
 11007                           ;LCD_16x2_4bit_mode.c: 38:  __nop();
 11008  004438  F000               	nop	
 11009  00443A                     
 11010                           ;LCD_16x2_4bit_mode.c: 39:  LATD3 = 0;
 11011  00443A  968C               	bcf	3980,3,c	;volatile
 11012  00443C                     
 11013                           ;LCD_16x2_4bit_mode.c: 40:  MSdelay(1);
 11014  00443C  0E00               	movlw	0
 11015  00443E  6E02               	movwf	(MSdelay@val+1)^0,c
 11016  004440  0E01               	movlw	1
 11017  004442  6E01               	movwf	MSdelay@val^0,c
 11018  004444  EC5D  F022         	call	_MSdelay	;wreg free
 11019  004448                     
 11020                           ;LCD_16x2_4bit_mode.c: 41:     LATD = (LATD & 0x0f) | (dat<<4);
 11021  004448  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
 11022  00444C  3A07               	swapf	??_LCD_Char^0,f,c
 11023  00444E  0EF0               	movlw	240
 11024  004450  1607               	andwf	??_LCD_Char^0,f,c
 11025  004452  508C               	movf	140,w,c	;volatile
 11026  004454  0B0F               	andlw	15
 11027  004456  1007               	iorwf	??_LCD_Char^0,w,c
 11028  004458  6E8C               	movwf	140,c	;volatile
 11029  00445A                     
 11030                           ;LCD_16x2_4bit_mode.c: 42:  LATD3 = 1;
 11031  00445A  868C               	bsf	3980,3,c	;volatile
 11032  00445C                     
 11033                           ;LCD_16x2_4bit_mode.c: 43:  __nop();
 11034  00445C  F000               	nop	
 11035  00445E                     
 11036                           ;LCD_16x2_4bit_mode.c: 44:  LATD3 = 0;
 11037  00445E  968C               	bcf	3980,3,c	;volatile
 11038                           
 11039                           ;LCD_16x2_4bit_mode.c: 45:  MSdelay(3);
 11040  004460  0E00               	movlw	0
 11041  004462  6E02               	movwf	(MSdelay@val+1)^0,c
 11042  004464  0E03               	movlw	3
 11043  004466  6E01               	movwf	MSdelay@val^0,c
 11044  004468  EC5D  F022         	call	_MSdelay	;wreg free
 11045  00446C  0012               	return		;funcret
 11046  00446E                     __end_of_LCD_Char:
 11047                           	callstack 0
 11048                           
 11049 ;; *************** function _LCD_Init *****************
 11050 ;; Defined at:
 11051 ;;		line 5 in file "LCD_16x2_4bit_mode.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;		None
 11054 ;; Auto vars:     Size  Location     Type
 11055 ;;		None
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  1    wreg      void 
 11058 ;; Registers used:
 11059 ;;		wreg, status,2, status,0, cstack
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11065 ;;      Params:         0       0       0       0       0       0       0       0       0
 11066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11068 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11069 ;;Total ram usage:        0 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:    2
 11072 ;; This function calls:
 11073 ;;		_LCD_Command
 11074 ;;		_MSdelay
 11075 ;; This function is called by:
 11076 ;;		_main
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text42
 11081  00472E                     __ptext42:
 11082                           	callstack 0
 11083  00472E                     _LCD_Init:
 11084                           	callstack 28
 11085  00472E                     
 11086                           ;LCD_16x2_4bit_mode.c: 7:     TRISD = 0;
 11087  00472E  0E00               	movlw	0
 11088  004730  6E95               	movwf	149,c	;volatile
 11089  004732                     
 11090                           ;LCD_16x2_4bit_mode.c: 8:     MSdelay(15);
 11091  004732  0E00               	movlw	0
 11092  004734  6E02               	movwf	(MSdelay@val+1)^0,c
 11093  004736  0E0F               	movlw	15
 11094  004738  6E01               	movwf	MSdelay@val^0,c
 11095  00473A  EC5D  F022         	call	_MSdelay	;wreg free
 11096  00473E                     
 11097                           ;LCD_16x2_4bit_mode.c: 9:     LCD_Command(0x02);
 11098  00473E  0E02               	movlw	2
 11099  004740  EC37  F022         	call	_LCD_Command
 11100  004744                     
 11101                           ;LCD_16x2_4bit_mode.c: 11:     LCD_Command(0x28);
 11102  004744  0E28               	movlw	40
 11103  004746  EC37  F022         	call	_LCD_Command
 11104  00474A                     
 11105                           ;LCD_16x2_4bit_mode.c: 13:  LCD_Command(0x01);
 11106  00474A  0E01               	movlw	1
 11107  00474C  EC37  F022         	call	_LCD_Command
 11108  004750                     
 11109                           ;LCD_16x2_4bit_mode.c: 14:     LCD_Command(0x0c);
 11110  004750  0E0C               	movlw	12
 11111  004752  EC37  F022         	call	_LCD_Command
 11112  004756                     
 11113                           ;LCD_16x2_4bit_mode.c: 15:  LCD_Command(0x06);
 11114  004756  0E06               	movlw	6
 11115  004758  EC37  F022         	call	_LCD_Command
 11116  00475C  0012               	return		;funcret
 11117  00475E                     __end_of_LCD_Init:
 11118                           	callstack 0
 11119                           
 11120 ;; *************** function _LCD_Command *****************
 11121 ;; Defined at:
 11122 ;;		line 18 in file "LCD_16x2_4bit_mode.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  cmd             1    wreg     unsigned char 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;  cmd             1    7[COMRAM] unsigned char 
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  1    wreg      void 
 11129 ;; Registers used:
 11130 ;;		wreg, status,2, status,0, cstack
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11136 ;;      Params:         0       0       0       0       0       0       0       0       0
 11137 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11138 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11139 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11140 ;;Total ram usage:        2 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; Hardware stack levels required when called:    1
 11143 ;; This function calls:
 11144 ;;		_MSdelay
 11145 ;; This function is called by:
 11146 ;;		_LCD_Init
 11147 ;;		_LCD_String_xy
 11148 ;;		_LCD_Clear
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text43
 11153  00446E                     __ptext43:
 11154                           	callstack 0
 11155  00446E                     _LCD_Command:
 11156                           	callstack 27
 11157                           
 11158                           ;incstack = 0
 11159                           ;LCD_Command@cmd stored from wreg
 11160  00446E  6E08               	movwf	LCD_Command@cmd^0,c
 11161  004470                     
 11162                           ;LCD_16x2_4bit_mode.c: 18: void LCD_Command(unsigned char cmd );LCD_16x2_4bit_mode.c: 19
      +                          : {;LCD_16x2_4bit_mode.c: 20:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
 11163  004470  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11164  004474  0EF0               	movlw	240
 11165  004476  1607               	andwf	??_LCD_Command^0,f,c
 11166  004478  508C               	movf	140,w,c	;volatile
 11167  00447A  0B0F               	andlw	15
 11168  00447C  1007               	iorwf	??_LCD_Command^0,w,c
 11169  00447E  6E8C               	movwf	140,c	;volatile
 11170  004480                     
 11171                           ;LCD_16x2_4bit_mode.c: 21:  LATD2 = 0;
 11172  004480  948C               	bcf	3980,2,c	;volatile
 11173  004482                     
 11174                           ;LCD_16x2_4bit_mode.c: 22:  LATD3 = 1;
 11175  004482  868C               	bsf	3980,3,c	;volatile
 11176  004484                     
 11177                           ;LCD_16x2_4bit_mode.c: 23:  __nop();
 11178  004484  F000               	nop	
 11179  004486                     
 11180                           ;LCD_16x2_4bit_mode.c: 24:  LATD3 = 0;
 11181  004486  968C               	bcf	3980,3,c	;volatile
 11182  004488                     
 11183                           ;LCD_16x2_4bit_mode.c: 25:  MSdelay(1);
 11184  004488  0E00               	movlw	0
 11185  00448A  6E02               	movwf	(MSdelay@val+1)^0,c
 11186  00448C  0E01               	movlw	1
 11187  00448E  6E01               	movwf	MSdelay@val^0,c
 11188  004490  EC5D  F022         	call	_MSdelay	;wreg free
 11189  004494                     
 11190                           ;LCD_16x2_4bit_mode.c: 26:     LATD = (LATD & 0x0f) | (cmd<<4);
 11191  004494  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
 11192  004498  3A07               	swapf	??_LCD_Command^0,f,c
 11193  00449A  0EF0               	movlw	240
 11194  00449C  1607               	andwf	??_LCD_Command^0,f,c
 11195  00449E  508C               	movf	140,w,c	;volatile
 11196  0044A0  0B0F               	andlw	15
 11197  0044A2  1007               	iorwf	??_LCD_Command^0,w,c
 11198  0044A4  6E8C               	movwf	140,c	;volatile
 11199  0044A6                     
 11200                           ;LCD_16x2_4bit_mode.c: 27:  LATD3 = 1;
 11201  0044A6  868C               	bsf	3980,3,c	;volatile
 11202  0044A8                     
 11203                           ;LCD_16x2_4bit_mode.c: 28:  __nop();
 11204  0044A8  F000               	nop	
 11205  0044AA                     
 11206                           ;LCD_16x2_4bit_mode.c: 29:  LATD3 = 0;
 11207  0044AA  968C               	bcf	3980,3,c	;volatile
 11208                           
 11209                           ;LCD_16x2_4bit_mode.c: 30:  MSdelay(3);
 11210  0044AC  0E00               	movlw	0
 11211  0044AE  6E02               	movwf	(MSdelay@val+1)^0,c
 11212  0044B0  0E03               	movlw	3
 11213  0044B2  6E01               	movwf	MSdelay@val^0,c
 11214  0044B4  EC5D  F022         	call	_MSdelay	;wreg free
 11215  0044B8  0012               	return		;funcret
 11216  0044BA                     __end_of_LCD_Command:
 11217                           	callstack 0
 11218                           
 11219 ;; *************** function _MSdelay *****************
 11220 ;; Defined at:
 11221 ;;		line 81 in file "LCD_16x2_4bit_mode.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  val             2    0[COMRAM] unsigned int 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  j               2    4[COMRAM] unsigned int 
 11226 ;;  i               2    2[COMRAM] unsigned int 
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  1    wreg      void 
 11229 ;; Registers used:
 11230 ;;		wreg, status,2, status,0
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11236 ;;      Params:         2       0       0       0       0       0       0       0       0
 11237 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11238 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11239 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11240 ;;Total ram usage:        6 bytes
 11241 ;; Hardware stack levels used:    1
 11242 ;; This function calls:
 11243 ;;		Nothing
 11244 ;; This function is called by:
 11245 ;;		_main
 11246 ;;		_LCD_Init
 11247 ;;		_LCD_Command
 11248 ;;		_LCD_Char
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           
 11252                           	psect	text44
 11253  0044BA                     __ptext44:
 11254                           	callstack 0
 11255  0044BA                     _MSdelay:
 11256                           	callstack 27
 11257  0044BA                     
 11258                           ;LCD_16x2_4bit_mode.c: 81: void MSdelay(unsigned int val);LCD_16x2_4bit_mode.c: 82: {;LC
      +                          D_16x2_4bit_mode.c: 83:  unsigned int i,j;;LCD_16x2_4bit_mode.c: 84:  for(i=0;i<val;i++)
 11259  0044BA  0E00               	movlw	0
 11260  0044BC  6E04               	movwf	(MSdelay@i+1)^0,c
 11261  0044BE  0E00               	movlw	0
 11262  0044C0  6E03               	movwf	MSdelay@i^0,c
 11263  0044C2  EF76  F022         	goto	l4103
 11264  0044C6                     l4091:
 11265                           
 11266                           ;LCD_16x2_4bit_mode.c: 85:      for(j=0;j<165;j++);
 11267  0044C6  0E00               	movlw	0
 11268  0044C8  6E06               	movwf	(MSdelay@j+1)^0,c
 11269  0044CA  0E00               	movlw	0
 11270  0044CC  6E05               	movwf	MSdelay@j^0,c
 11271  0044CE                     l4097:
 11272  0044CE  4A05               	infsnz	MSdelay@j^0,f,c
 11273  0044D0  2A06               	incf	(MSdelay@j+1)^0,f,c
 11274  0044D2  5006               	movf	(MSdelay@j+1)^0,w,c
 11275  0044D4  E109               	bnz	u4960
 11276  0044D6  0EA5               	movlw	165
 11277  0044D8  5C05               	subwf	MSdelay@j^0,w,c
 11278  0044DA  A0D8               	btfss	status,0,c
 11279  0044DC  EF72  F022         	goto	u4961
 11280  0044E0  EF74  F022         	goto	u4960
 11281  0044E4                     u4961:
 11282  0044E4  EF67  F022         	goto	l4097
 11283  0044E8                     u4960:
 11284  0044E8  4A03               	infsnz	MSdelay@i^0,f,c
 11285  0044EA  2A04               	incf	(MSdelay@i+1)^0,f,c
 11286  0044EC                     l4103:
 11287  0044EC  5001               	movf	MSdelay@val^0,w,c
 11288  0044EE  5C03               	subwf	MSdelay@i^0,w,c
 11289  0044F0  5002               	movf	(MSdelay@val+1)^0,w,c
 11290  0044F2  5804               	subwfb	(MSdelay@i+1)^0,w,c
 11291  0044F4  A0D8               	btfss	status,0,c
 11292  0044F6  EF7F  F022         	goto	u4971
 11293  0044FA  EF81  F022         	goto	u4970
 11294  0044FE                     u4971:
 11295  0044FE  EF63  F022         	goto	l4091
 11296  004502                     u4970:
 11297  004502  0012               	return		;funcret
 11298  004504                     __end_of_MSdelay:
 11299                           	callstack 0
 11300                           
 11301                           	psect	rparam
 11302  0000                     
 11303                           	psect	idloc
 11304                           
 11305                           ;Config register IDLOC0 @ 0x200000
 11306                           ;	unspecified, using default values
 11307  200000                     	org	2097152
 11308  200000  FF                 	db	255
 11309                           
 11310                           ;Config register IDLOC1 @ 0x200001
 11311                           ;	unspecified, using default values
 11312  200001                     	org	2097153
 11313  200001  FF                 	db	255
 11314                           
 11315                           ;Config register IDLOC2 @ 0x200002
 11316                           ;	unspecified, using default values
 11317  200002                     	org	2097154
 11318  200002  FF                 	db	255
 11319                           
 11320                           ;Config register IDLOC3 @ 0x200003
 11321                           ;	unspecified, using default values
 11322  200003                     	org	2097155
 11323  200003  FF                 	db	255
 11324                           
 11325                           ;Config register IDLOC4 @ 0x200004
 11326                           ;	unspecified, using default values
 11327  200004                     	org	2097156
 11328  200004  FF                 	db	255
 11329                           
 11330                           ;Config register IDLOC5 @ 0x200005
 11331                           ;	unspecified, using default values
 11332  200005                     	org	2097157
 11333  200005  FF                 	db	255
 11334                           
 11335                           ;Config register IDLOC6 @ 0x200006
 11336                           ;	unspecified, using default values
 11337  200006                     	org	2097158
 11338  200006  FF                 	db	255
 11339                           
 11340                           ;Config register IDLOC7 @ 0x200007
 11341                           ;	unspecified, using default values
 11342  200007                     	org	2097159
 11343  200007  FF                 	db	255
 11344                           
 11345                           	psect	config
 11346                           
 11347                           ;Config register CONFIG1L @ 0x300000
 11348                           ;	PLL Prescaler Selection bits
 11349                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 11350                           ;	System Clock Postscaler Selection bits
 11351                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 11352                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 11353                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 11354  300000                     	org	3145728
 11355  300000  00                 	db	0
 11356                           
 11357                           ;Config register CONFIG1H @ 0x300001
 11358                           ;	Oscillator Selection bits
 11359                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 11360                           ;	Fail-Safe Clock Monitor Enable bit
 11361                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11362                           ;	Internal/External Oscillator Switchover bit
 11363                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11364  300001                     	org	3145729
 11365  300001  09                 	db	9
 11366                           
 11367                           ;Config register CONFIG2L @ 0x300002
 11368                           ;	Power-up Timer Enable bit
 11369                           ;	PWRT = OFF, PWRT disabled
 11370                           ;	Brown-out Reset Enable bits
 11371                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11372                           ;	Brown-out Reset Voltage bits
 11373                           ;	BORV = 3, Minimum setting 2.05V
 11374                           ;	USB Voltage Regulator Enable bit
 11375                           ;	VREGEN = OFF, USB voltage regulator disabled
 11376  300002                     	org	3145730
 11377  300002  1F                 	db	31
 11378                           
 11379                           ;Config register CONFIG2H @ 0x300003
 11380                           ;	Watchdog Timer Enable bit
 11381                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11382                           ;	Watchdog Timer Postscale Select bits
 11383                           ;	WDTPS = 32768, 1:32768
 11384  300003                     	org	3145731
 11385  300003  1E                 	db	30
 11386                           
 11387                           ; Padding undefined space
 11388  300004                     	org	3145732
 11389  300004  FF                 	db	255
 11390                           
 11391                           ;Config register CONFIG3H @ 0x300005
 11392                           ;	CCP2 MUX bit
 11393                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 11394                           ;	PORTB A/D Enable bit
 11395                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 11396                           ;	Low-Power Timer 1 Oscillator Enable bit
 11397                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11398                           ;	MCLR Pin Enable bit
 11399                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
 11400  300005                     	org	3145733
 11401  300005  01                 	db	1
 11402                           
 11403                           ;Config register CONFIG4L @ 0x300006
 11404                           ;	Stack Full/Underflow Reset Enable bit
 11405                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11406                           ;	Single-Supply ICSP Enable bit
 11407                           ;	LVP = OFF, Single-Supply ICSP disabled
 11408                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 11409                           ;	ICPRT = OFF, ICPORT disabled
 11410                           ;	Extended Instruction Set Enable bit
 11411                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11412                           ;	Background Debugger Enable bit
 11413                           ;	DEBUG = 0x1, unprogrammed default
 11414  300006                     	org	3145734
 11415  300006  81                 	db	129
 11416                           
 11417                           ; Padding undefined space
 11418  300007                     	org	3145735
 11419  300007  FF                 	db	255
 11420                           
 11421                           ;Config register CONFIG5L @ 0x300008
 11422                           ;	Code Protection bit
 11423                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 11424                           ;	Code Protection bit
 11425                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 11426                           ;	Code Protection bit
 11427                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 11428                           ;	Code Protection bit
 11429                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 11430  300008                     	org	3145736
 11431  300008  0F                 	db	15
 11432                           
 11433                           ;Config register CONFIG5H @ 0x300009
 11434                           ;	Boot Block Code Protection bit
 11435                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 11436                           ;	Data EEPROM Code Protection bit
 11437                           ;	CPD = OFF, Data EEPROM is not code-protected
 11438  300009                     	org	3145737
 11439  300009  C0                 	db	192
 11440                           
 11441                           ;Config register CONFIG6L @ 0x30000A
 11442                           ;	Write Protection bit
 11443                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 11444                           ;	Write Protection bit
 11445                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 11446                           ;	Write Protection bit
 11447                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 11448                           ;	Write Protection bit
 11449                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 11450  30000A                     	org	3145738
 11451  30000A  0F                 	db	15
 11452                           
 11453                           ;Config register CONFIG6H @ 0x30000B
 11454                           ;	Configuration Register Write Protection bit
 11455                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 11456                           ;	Boot Block Write Protection bit
 11457                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 11458                           ;	Data EEPROM Write Protection bit
 11459                           ;	WRTD = OFF, Data EEPROM is not write-protected
 11460  30000B                     	org	3145739
 11461  30000B  E0                 	db	224
 11462                           
 11463                           ;Config register CONFIG7L @ 0x30000C
 11464                           ;	Table Read Protection bit
 11465                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11466                           ;	Table Read Protection bit
 11467                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11468                           ;	Table Read Protection bit
 11469                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11470                           ;	Table Read Protection bit
 11471                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 11472  30000C                     	org	3145740
 11473  30000C  0F                 	db	15
 11474                           
 11475                           ;Config register CONFIG7H @ 0x30000D
 11476                           ;	Boot Block Table Read Protection bit
 11477                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 11478  30000D                     	org	3145741
 11479  30000D  40                 	db	64
 11480                           tosu	equ	0xFFF
 11481                           tosh	equ	0xFFE
 11482                           tosl	equ	0xFFD
 11483                           stkptr	equ	0xFFC
 11484                           pclatu	equ	0xFFB
 11485                           pclath	equ	0xFFA
 11486                           pcl	equ	0xFF9
 11487                           tblptru	equ	0xFF8
 11488                           tblptrh	equ	0xFF7
 11489                           tblptrl	equ	0xFF6
 11490                           tablat	equ	0xFF5
 11491                           prodh	equ	0xFF4
 11492                           prodl	equ	0xFF3
 11493                           indf0	equ	0xFEF
 11494                           postinc0	equ	0xFEE
 11495                           postdec0	equ	0xFED
 11496                           preinc0	equ	0xFEC
 11497                           plusw0	equ	0xFEB
 11498                           fsr0h	equ	0xFEA
 11499                           fsr0l	equ	0xFE9
 11500                           wreg	equ	0xFE8
 11501                           indf1	equ	0xFE7
 11502                           postinc1	equ	0xFE6
 11503                           postdec1	equ	0xFE5
 11504                           preinc1	equ	0xFE4
 11505                           plusw1	equ	0xFE3
 11506                           fsr1h	equ	0xFE2
 11507                           fsr1l	equ	0xFE1
 11508                           bsr	equ	0xFE0
 11509                           indf2	equ	0xFDF
 11510                           postinc2	equ	0xFDE
 11511                           postdec2	equ	0xFDD
 11512                           preinc2	equ	0xFDC
 11513                           plusw2	equ	0xFDB
 11514                           fsr2h	equ	0xFDA
 11515                           fsr2l	equ	0xFD9
 11516                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    0
    Data        6
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    105     137
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S624_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), STR_1(CODE[18]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> main@Total_distance(BANK0[20]), STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_Clear->_LCD_Command
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                65    65      0   38866
                                             82 BANK0     23    23      0
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                          _Secuence1
                          _Secuence2
                          _Secuence3
                          _Secuence4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   33389
                                             64 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32878
                                             56 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   32491
                                             63 COMRAM    32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21769
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Secuence4                                            2     2      0     592
                                              8 COMRAM     2     2      0
                          _LCD_Clear
 ---------------------------------------------------------------------------------
 (1) _Secuence3                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Secuence2                                            2     2      0     592
                                              8 COMRAM     2     2      0
                          _LCD_Clear
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     592
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _Secuence1                                            2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    1896
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     713
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     592
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1140
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0     592
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     548
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _Secuence1
   _Secuence2
     _LCD_Clear
       _LCD_Command
         _MSdelay
   _Secuence3
   _Secuence4
     _LCD_Clear
       _LCD_Command
         _MSdelay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      89       5       85.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     138      20        0.0%
DATA                 0      0     138       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Nov 13 00:09:17 2020

           ___fldiv@aexp 0019             ___fldiv@bexp 0018                        _a 00D9  
                      _b 00E7                        _c 00DF                        _d 00DD  
                      _e 00E3                        _f 00DB             ___fldiv@sign 0011  
           ?_LCD_Command 0001                       l80 30DC                       l83 3162  
                     l92 3290                       l86 31E8                       l95 2E94  
                     l89 3276                       l98 2F1A             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003              ?_LCD_String 0009             main@Distance 00C7  
                    l101 2FA0                      l110 2C3E                      l104 3034  
                    l113 2CD0                      l122 2E06                      l107 304E  
                    l131 2B0E                      l116 2D62                      l125 29D0  
                    l301 37BA                      l119 2DEC                      l136 2B94  
                    l128 2A4E                      l162 446C                      l314 391E  
                    l139 2BA4                      l156 475C                      l173 464E  
                    l159 44B8                      l431 4156                      l184 4502  
                    l168 4320                      l176 478A                      l418 40A6  
                    l187 4782                      l452 3C38                      l461 46BE  
                    l446 4200                      l457 3C7E                      l801 1F52  
                    l810 21C0                      l811 21AE                      l715 1BBC  
                    l732 1CD6                      l724 1E8C                      l716 1BAA  
                    l484 3B7A                      l805 22B6                      l741 1DA6  
                    l717 1B70                      l742 1D94                      l911 3FA6  
                    l808 2148                      l913 3FE2                      l921 26FA  
                    l818 2278                      l771 24B0                      l908 3F64  
                    l780 24F6                      l757 4548                      l782 256E  
                    l774 2474                      l919 26F2                      l783 255C  
                    l769 2650                      l865 43CE                      l939 2934  
                    l957 13DE                      l975 0C1C                      _RB1 007C09  
                    _RC0 007C10                      _RB2 007C0A                      _RC1 007C11  
                    _RC2 007C12                      _RB4 007C0C                      _RB5 007C0D  
                    _RC4 007C14                      _abs 45D0                      _pad 3F1E  
           ___awmod@sign 0006                      wreg 000FE8             ___flmul@aexp 0012  
           ___flmul@bexp 0013              _tolower$925 000D             ___flmul@sign 000D  
           ___flmul@temp 0018             ___flmul@prod 0014              LCD_Char@dat 0008  
           ___fltol@exp1 000A                     l1001 0FB4                     l1122 362A  
                   l1131 34A2                     ?_abs 0013                     l1212 42C2  
                   l1044 14DC                     l1141 46F6                     l1125 3632  
                   l1061 19CC                     l1134 33E6                     l1207 42BA  
                   l1170 3F1C                     l1091 4606                     l1155 4686  
                   l1075 425A                     l1076 4262                     l1149 4420  
                   l1181 4792                     l1069 1916                     l1094 460E  
                   l1086 3D7C                     l1193 472C                     l4001 3FCA  
                   l1178 458C                     l4011 3CA0                     l1187 437C  
                   l4101 44E8                     l4005 45D0                     l3221 3E82  
                   l3301 1B02                     l4013 3CDE                     l4021 3D1E  
                   l1197 3E52                     l4103 44EC                     l4007 45EA  
                   l3223 3EA0                     l3215 3E54                     l4111 26BA  
                   l3311 1B3C                     l3303 1B06                     l3231 19DA  
                   l4023 3D30                     l4015 3D06                     l4031 4322  
                   l5001 2DA2                     l3225 3ED6                     l3217 3E66  
                   l4121 2714                     l4113 26CA                     l4105 2652  
                   l3401 1DC2                     l3321 1B8E                     l3313 1B58  
                   l3305 1B0A                     l3241 1A1A                     l3233 19E8  
                   l4017 3D12                     l4009 3C80                     l4033 4332  
                   l4041 42AC                     l5011 2DDA                     l5003 2DB0  
                   l3219 3E78                     l4131 2740                     l4123 2722  
                   l4115 26CC                     l4107 2672                     l3411 1E2C  
                   l3403 1DD0                     l3331 1BDA                     l3323 1B9C  
                   l3315 1B68                     l3307 1B0E                     l3251 1A4C  
                   l3243 1A1C                     l3235 19EA                     l4027 3D74  
                   l4051 331C                     l4035 4264                     l4211 0996  
                   l4203 0946                     l5013 2DE6                     l5005 2DC4  
                   l5101 2B5C                     l5021 2936                     l4141 284C  
                   l4133 27C2                     l4125 2728                     l4117 26E6  
                   l4109 269A                     l3421 1E66                     l3413 1E4C  
                   l3405 1E0A                     l3341 1C1A                     l3325 1B9E  
                   l3317 1B7E                     l3309 1B12                     l3261 1A74  
                   l3253 1A4E                     l3237 19FA                     l3245 1A24  
                   l3229 19CE                     l4053 332A                     l4061 340A  
                   l4045 3292                     l4301 0D3A                     l4221 0A1A  
                   l4205 0958                     l5015 2DF0                     l5007 2DD4  
                   l5111 2B98                     l5103 2B70                     l5031 298A  
                   l5023 294A                     l3511 37F2                     l3503 37BC  
                   l3431 454A                     l4151 28C0                     l4143 286A  
                   l4135 27C8                     l4127 2730                     l4119 2702  
                   l3423 1E6C                     l3415 1E50                     l3407 1E0C  
                   l3351 1C44                     l3343 1C26                     l3335 1BEE  
                   l3327 1BA8                     l3319 1B8A                     l3271 1AAE  
                   l3263 1A84                     l3255 1A54                     l3247 1A34  
                   l3239 1A0A                     l4063 3446                     l4047 32B2  
                   l4039 429A                     l4311 0E22                     l4303 0D42  
                   l4223 0A2C                     l4207 0974                     l4215 09BE  
                   l5009 2DD8                     l5017 2DF4                     l5105 2B80  
                   l5041 29C4                     l5033 299E                     l5113 2B9C  
                   l5025 295E                     l4073 46C0                     l4081 43E8  
                   l3521 385A                     l3513 3800                     l3505 37C0  
                   l3433 4556                     l3441 4704                     l4161 28FC  
                   l4153 28D0                     l4145 2884                     l4137 27CE  
                   l4129 273A                     l3601 2418                     l3425 1E7A  
                   l3417 1E5E                     l3409 1E1C                     l3361 1CB6  
                   l3345 1C2A                     l3337 1BFE                     l3329 1BCA  
                   l3353 1C4A                     l3281 1ADA                     l3273 1AC0  
                   l3265 1A94                     l3257 1A62                     l3249 1A3A  
                   l4065 345A                     l4057 339A                     l4049 3308  
                   l4401 1228                     l4321 0EE0                     l4313 0E56  
                   l4305 0D52                     l4241 0AE8                     l4225 0A48  
                   l4217 09E4                     l4233 0A64                     l4209 098C  
                   l5121 4398                     l4091 44C6                     l5019 2DF6  
                   l5115 2B9E                     l5107 2B82                     l5051 29FA  
                   l5043 29C8                     l5035 29AE                     l5027 2966  
                   l4083 4416                     l3523 3868                     l3531 38CE  
                   l3515 3820                     l3507 37CE                     l3435 4568  
                   l3443 4708                     l4155 28D6                     l4163 290C  
                   l4147 289E                     l4139 2832                     l3611 2464  
                   l3603 2428                     l3427 1E7C                     l3419 1E64  
                   l3371 1D10                     l3355 1C70                     l3363 1CC6  
                   l3347 1C38                     l3339 1C0C                     l3291 1AEE  
                   l3283 1ADE                     l3275 1ACE                     l3267 1A96  
                   l3259 1A64                     l4067 3482                     l4059 33D6  
                   l4411 1268                     l4403 123A                     l4331 0F7C  
                   l4323 0EF6                     l4307 0D66                     l4315 0E5C  
                   l4243 0AEE                     l4251 0BB6                     l4235 0A7E  
                   l4171 084A                     l5123 43A0                     l5131 3928  
                   l5109 2B8E                     l5061 2A44                     l5053 2A10  
                   l5045 29CA                     l5037 29B2                     l5029 297C  
                   l3453 475E                     l4085 441A                     l4077 43D0  
                   l4501 360E                     l3461 3638                     l3533 38DE  
                   l3525 3896                     l3517 383E                     l3509 37EE  
                   l3437 456C                     l3445 4720                     l4157 28E8  
                   l4149 28AE                     l3621 24AE                     l3613 2472  
                   l3605 2438                     l3541 22C4                     l3701 1F0C  
                   l3381 1D40                     l3373 1D1A                     l3365 1CEC  
                   l3357 1CA4                     l3349 1C3A                     l3293 1AF2  
                   l3285 1AE2                     l3277 1AD2                     l3269 1A9E  
                   l4069 3492                     l4421 12B0                     l4413 1270  
                   l4405 1242                     l4341 1034                     l4333 0F8C  
                   l4325 0F28                     l4317 0E7A                     l4309 0DCA  
                   l4261 0BF6                     l4253 0BC6                     l4245 0B48  
                   l4181 0896                     l4173 0858                     l5125 43BC  
                   l5117 437E                     l5141 394E                     l5133 392C  
                   l5071 2A8E                     l5063 2A48                     l5055 2A1E  
                   l5047 29DE                     l5039 29BC                     l3455 477A  
                   l4079 43D4                     l3471 3698                     l3463 3646  
                   l3535 38FE                     l3527 38B6                     l3519 3846  
                   l3439 46F8                     l4159 28F4                     l3631 24F4  
                   l3623 24C0                     l3615 247E                     l3607 2440  
                   l3551 2304                     l3543 22D2                     l3711 1F62  
                   l3703 1F1C                     l3391 1D68                     l3383 1D44  
                   l3375 1D28                     l3367 1CFC                     l3359 1CA6  
                   l3295 1AF6                     l3287 1AE6                     l3279 1AD6  
                   l4431 1306                     l4423 12CC                     l4415 1278  
                   l4407 1252                     l4343 1044                     l4351 107E  
                   l4335 0FA0                     l4327 0F38                     l4319 0EAE  
                   l4271 0C3A                     l4263 0C10                     l4255 0BCA  
                   l4247 0B7C                     l4239 0AB4                     l4191 08DC  
                   l4183 08A8                     l4175 0860                     l4167 0830  
                   l5119 4390                     l5151 3982                     l5143 3952  
                   l5135 3934                     l4097 44CE                     l4089 44BA  
                   l5081 2AC6                     l5073 2A9C                     l5065 2A5C  
                   l5057 2A32                     l5049 29F2                     l3481 36E2  
                   l3473 369C                     l3465 3666                     l3529 38C8  
                   l3641 2554                     l3625 24D6                     l3633 2506  
                   l3617 249C                     l3609 2450                     l3561 232A  
                   l3553 2306                     l3545 22D4                     l3801 22A2  
                   l3721 1F9C                     l3713 1F72                     l3705 1F2C  
                   l3393 1D76                     l3385 1D54                     l3377 1D2A  
                   l3297 1AFA                     l3289 1AEA                     l3449 4650  
                   l4441 1342                     l4433 130C                     l4425 12D4  
                   l4417 1284                     l4409 125A                     l4361 10B8  
                   l4353 1090                     l4345 1056                     l4337 0FAC  
                   l4329 0F48                     l4273 0C4C                     l4281 0CAA  
                   l4257 0BDC                     l4265 0C28                     l4249 0B84  
                   l4193 08E0                     l4185 08B6                     l4177 0884  
                   l4169 083A                     l4521 3E08                     l4513 3DB4  
                   l5225 149C                     l4601 1476                     l5153 3992  
                   l5161 39D8                     l5137 3946                     l5145 3956  
                   l5129 3920                     l4099 44D2                     l4531 4482  
                   l5091 2B06                     l5083 2ADA                     l5075 2AB0  
                   l5067 2A70                     l5059 2A3A                     l5227 3560  
                   l3491 3752                     l3483 36F0                     l3475 36A8  
                   l3467 366A                     l3459 3634                     l3651 25C2  
                   l3635 2514                     l3627 24DC                     l3619 249E  
                   l3571 236A                     l3563 2338                     l3547 22E4  
                   l3555 230E                     l3539 22B8                     l3803 22A6  
                   l3731 1FEE                     l3723 1FB2                     l3707 1F3C  
                   l3395 1D8C                     l3379 1D38                     l3387 1D56  
                   l3299 1AFE                     l4451 1394                     l4443 1348  
                   l4435 131E                     l4419 128A                     l4427 12DA  
                   l4363 10C4                     l4355 109E                     l4371 10E4  
                   l4347 1068                     l4339 0FD0                     l4291 0CE8  
                   l4283 0CB2                     l4275 0C68                     l4259 0BEE  
                   l4195 08E4                     l4187 08C8                     l4179 088E  
                   l4523 3E30                     l4515 3DC2                     l4507 3D7E  
                   l4611 151A                     l4603 14CA                     l5171 3A52  
                   l5163 39F4                     l5155 399A                     l5147 396A  
                   l5139 394A                     l4541 44A6                     l4533 4484  
                   l5093 2B1C                     l5085 2AEA                     l5077 2AC0  
                   l5069 2A78                     l3493 3764                     l3485 3702  
                   l3477 36C6                     l3469 3678                     l3821 4002  
                   l3813 3FE4                     l3661 262C                     l3645 257E  
                   l3653 25C6                     l3637 2518                     l3629 24E6  
                   l3581 23AA                     l3573 236C                     l3565 233A  
                   l3557 231E                     l3549 22F4                     l3901 41D4  
                   l3741 2034                     l3733 1FFC                     l3725 1FBE  
                   l3717 1F86                     l3709 1F42                     l3389 1D64  
                   l4453 13A0                     l4445 134E                     l4437 132A  
                   l4429 12EC                     l4381 116A                     l4373 10F6  
                   l4365 10D4                     l4357 10AE                     l4349 1076  
                   l4293 0CFA                     l4285 0CC4                     l4277 0C9E  
                   l4189 08D4                     l4197 08EA                     l4517 3DDA  
                   l4509 3DA8                     l4621 15B4                     l4613 1528  
                   l4605 14EC                     l5165 3A0A                     l5173 3A5C  
                   l5157 39B8                     l5149 3972                     ?_pad 0011  
                   l4543 44A8                     l4535 4486                     l4527 4470  
                   l4551 4436                     l4711 42EC                     l5095 2B30  
                   l5087 2AF2                     l5079 2AC2                     l4471 34C0  
                   l3487 3730                     l3479 36CE                     l3495 376A  
                   l3831 4036                     l3823 4010                     l3815 3FE8  
                   l3663 2630                     l3655 25E0                     l3647 258A  
                   l3639 2526                     l3591 23DA                     l3583 23B2  
                   l3567 234A                     l3575 2374                     l3559 2324  
                   l3903 41F8                     l3911 3BAA                     l3751 20A2  
                   l3743 204E                     l3735 2008                     l3727 1FD6  
                   l3719 1F92                     l3399 1DB6                     l3807 4504  
                   l4455 13A8                     l4439 1332                     l4391 11E4  
                   l4383 119E                     l4375 1108                     l4367 10D8  
                   l4359 10B2                     l4295 0D08                     l4287 0CD6  
                   l4279 0CA6                     l4199 0910                     l4519 3DF6  
                   l4631 163C                     l4615 154C                     l4607 14EE  
                   l5167 3A1A                     l5159 39CC                     l4545 44AA  
                   l4537 4488                     l4529 4480                     l4561 445A  
                   l4553 4438                     l4713 42F0                     l4801 31D4  
                   l4705 4784                     l5097 2B38                     l5089 2AFA  
                   l4481 351C                     l4473 34DC                     l4465 34A4  
                   l3497 377A                     l3489 3750                     l3841 4070  
                   l3833 403E                     l3825 4018                     l3817 3FF6  
                   l3665 263E                     l3657 25F6                     l3649 2598  
                   l3593 23DA                     l3585 23B6                     l3577 2384  
                   l3569 235A                     l3905 41FE                     l3921 3C18  
                   l3913 3BBA                     l3761 2138                     l3753 20CC  
                   l3745 205E                     l3737 2018                     l3729 1FE2  
                   l3681 1EA8                     l3809 4514                     l4457 13B8  
                   l4449 1382                     l4393 11F6                     l4385 11A6  
                   l4377 110C                     l4369 10DE                     l4297 0D20  
                   l4289 0CE4                     l4641 16F4                     l4633 166C  
                   l4625 15FA                     l4617 1586                     l4609 1512  
                   l4721 423E                     l5169 3A40                     l4539 4494  
                   l4731 474A                     l4723 472E                     l4563 445C  
                   l4555 443A                     l4547 4424                     l4707 42C4  
                   l4811 3212                     l4803 31DE                     l5099 2B4E  
                   l4483 3532                     l4475 3512                     l4467 34B8  
                   l3499 379A                     l3851 4096                     l3843 4078  
                   l3835 4046                     l3827 401C                     l3819 3FFE  
                   l3667 2644                     l3659 2610                     l3579 239A  
                   l3923 3C26                     l3915 3BE8                     l3771 2178  
                   l3763 2146                     l3755 2102                     l3747 207A  
                   l3739 2024                     l3691 1EE0                     l3683 1EAA  
                   l3931 4688                     l4459 13BE                     l4395 1204  
                   l4379 1112                     l4387 11AA                     l4299 0D32  
                   l4651 179C                     l4643 173C                     l4635 167C  
                   l4619 15A6                     l4627 160C                     l4571 1412  
                   l4715 4202                     l4733 4750                     l4725 4732  
                   l4565 445E                     l4557 443C                     l4549 4434  
                   l4709 42C8                     l4741 4622                     l4821 3264  
                   l4813 3228                     l4805 31E2                     l4901 2FCA  
                   l4493 35AC                     l4485 353A                     l4477 3516  
                   l4469 34BC                     l3853 409E                     l3845 407A  
                   l3837 4054                     l3829 4024                     l3861 40BA  
                   l3669 2646                     l3597 23EE                     l3589 23CA  
                   l3925 3C76                     l3917 3BF8                     l3909 3B7C  
                   l3781 21EA                     l3773 21A6                     l3765 2158  
                   l3757 2110                     l3749 2086                     l3693 1EF0  
                   l3685 1EBA                     l3677 1E8E                     l3933 469E  
                   l3941 3A8C                     l4397 1214                     l4389 11C8  
                   l4661 1834                     l4653 17AA                     l4637 16AC  
                   l4629 162C                     l4581 144A                     l4573 1424  
                   l4717 420A                     l4735 4756                     l4727 473E  
                   l4559 4448                     l4743 462A                     l4831 328A  
                   l4823 3268                     l4815 3236                     l4807 31F6  
                   l4751 3050                     l4911 3016                     l4903 2FCE  
                   l4487 3542                     l3847 4080                     l3839 405A  
                   l3871 40EE                     l3863 40C2                     l3599 2408  
                   l3927 3C7C                     l3919 3C06                     l3791 2260  
                   l3783 2214                     l3767 2166                     l3759 212E  
                   l3695 1EF6                     l3687 1ECA                     l3679 1E9A  
                   l3935 46AE                     l3951 3ADC                     l4399 1218  
                   l4655 17DA                     l4647 1774                     l4639 16D0  
                   l4575 1428                     l4567 13E0                     l4719 4218  
                   l4729 4744                     l4745 4634                     l4737 4612  
                   l4825 3270                     l4817 324A                     l4809 320A  
                   l4761 30AC                     l4753 3064                     l4921 3038  
                   l4913 301A                     l4905 2FE4                     l4841 2E4E  
                   l4833 2E08                     l4497 35EA                     l4489 3576  
                   l3849 4086                     l3881 412A                     l3873 40F6  
                   l3865 40C6                     l3857 40A8                     l3793 227C  
                   l3777 21D0                     l3785 2218                     l3769 216A  
                   l3697 1EFC                     l3689 1EDA                     l3961 3B06  
                   l3953 3AE0                     l3945 3AA0                     l4681 1970  
                   l4665 18A0                     l4649 1786                     l4593 1462  
                   l4585 1452                     l4577 1434                     l4569 1404  
                   l4747 463C                     l4739 4612                     l4827 327A  
                   l4819 325A                     l4771 30EA                     l4763 30C0  
                   l4755 3078                     l4915 3024                     l4907 2FF2  
                   l4851 2E86                     l4843 2E5C                     l4923 3046  
                   l4835 2E1C                     l4931 2BCE                     l4499 35FC  
                   l3883 4130                     l3875 40FE                     l3867 40D4  
                   l3859 40AC                     l3795 228C                     l3787 2232  
                   l3779 21DC                     l3699 1F0A                     l3971 3B2E  
                   l3963 3B10                     l3955 3AEE                     l3947 3ACA  
                   l3939 3A76                     l4667 18B2                     l4675 192A  
                   l4659 1806                     l4579 1438                     l4691 1996  
                   l4749 4642                     l4781 313E                     l4773 30FE  
                   l4765 30C8                     l4829 3288                     l4757 3088  
                   l4925 3048                     l4917 3026                     l4909 3006  
                   l4861 2ED4                     l4853 2E8E                     l4845 2E70  
                   l4837 2E30                     l4941 2C1E                     l4933 2BD6  
                   l3877 410C                     l3885 4136                     l3869 40DC  
                   l3893 4158                     l3797 229A                     l3789 2246  
                   l3973 3B3A                     l3965 3B1A                     l3949 3ACC  
                   l4693 19BA                     l4677 194E                     l4685 197C  
                   l4669 18E6                     l4597 146A                     l4589 145A  
                   l4791 3184                     l4783 314E                     l4775 3106  
                   l4767 30D2                     l4759 309E                     l4919 302E  
                   l4871 2F0C                     l4863 2EE2                     l4855 2EA2  
                   l4847 2E80                     l4839 2E38                     l4951 2C4C  
                   l4943 2C22                     l4935 2BEC                     l4927 2BA6  
                   l3991 3F5C                     l3983 3F1E                     l3887 4146  
                   l3879 4122                     l3895 4186                     l3799 229C  
                   l3975 3B4A                     l4687 198A                     l4679 195C  
                   l4793 318C                     l4785 3158                     l4777 311C  
                   l4769 30D6                     l4881 2F5A                     l4873 2F14  
                   l4865 2EF6                     l4857 2EB6                     l4849 2E84  
                   l4961 2CA0                     l4953 2C60                     l4945 2C24  
                   l4937 2BFA                     l4929 2BBA                     l3993 3F70  
                   l3985 3F2E                     l3889 414E                     l3897 4196  
                   l3977 3B5A                     l4795 31A2                     l4787 315C  
                   l4779 312A                     l4891 2F90                     l4883 2F68  
                   l4875 2F28                     l4867 2F06                     l4859 2EBE  
                   l4971 2CCA                     l4963 2CB0                     l4955 2C68  
                   l4947 2C2C                     l4939 2C0E                     l3995 3F84  
                   l3987 3F42                     l3899 41C4                     l3979 3B6A  
                   l4797 31B0                     l4789 3170                     l4893 2F92  
                   l4885 2F7C                     l4877 2F3C                     l4869 2F0A  
                   l4981 2D1E                     l4973 2CDE                     l4965 2CB4  
                   l4957 2C7E                     l4949 2C38                     l3997 3F88  
                   l3989 3F50                     l4799 31C4                     l4895 2F9A  
                   l4887 2F84                     l4879 2F44                     l4991 2D50  
                   l4983 2D32                     l4975 2CF2                     l4967 2CB6  
                   l4959 2C8C                     l3999 3FB6                     l4897 2FAE  
                   l4889 2F88                     l4993 2D5C                     l4985 2D42  
                   l4977 2CFA                     l4969 2CBE                     l4899 2FC2  
                   l4995 2D70                     l4987 2D46                     l4979 2D10  
                   l4997 2D84                     l4989 2D48                     l4999 2D8C  
                   STR_1 0801                     STR_2 082C                     STR_3 0813  
                   STR_4 0819                     STR_5 0821                     STR_8 081D  
                   STR_9 0825                     u4000 235A                     _LATD 000F8C  
                   u4001 2356                     u4010 239A                     u4011 2396  
                   u4100 2526                     u4020 23DA                     u4101 2522  
                   u4021 23D6                     u4110 2554                     u4030 2450  
                   u4111 2550                     u4031 244C                     u5000 269A  
                   u4120 256A                     u4040 2472                     u4200 1ECA  
                   u3400 19FA                     u5001 2696                     u4121 2566  
                   u4041 246E                     u4201 1EC6                     u3401 19F6  
                   u5010 26CA                     u4130 257E                     u4050 249C  
                   u4210 1F0A                     u3410 1A0A                     u5011 26C6  
                   u4131 257A                     u4051 2498                     u4211 1F06  
                   u3411 1A06                     u5100 28C0                     u5020 26E6  
                   u4140 2598                     u4060 24C0                     u4300 21A6  
                   u4220 1F1C                     u3500 1B56                     u3420 1A4C  
                   u5101 28BC                     u5021 26E2                     u4141 2594  
                   u4061 24BC                     u4301 21A2                     u4221 1F18  
                   u3421 1A48                     u3350 3E66                     u5110 28D0  
                   u5030 2714                     u4150 25E0                     u4070 24D6  
                   u4310 21BC                     u4230 1F2C                     u3510 1B7E  
                   u3430 1A62                     u3351 3E62                     u5111 28CC  
                   u5031 2710                     u4151 25DC                     u4071 24D2  
                   u4311 21B8                     u4231 1F28                     u3511 1B7A  
                   u3431 1A5E                     u6000 3064                     u3360 3E78  
                   u5120 28E8                     u5040 2722                     u4400 4054  
                   u4160 2610                     u4080 24F4                     u4320 21D0  
                   u4240 1F62                     u3600 1CB6                     u3520 1B9C  
                   u3440 1A74                     u5200 0958                     u6001 3060  
                   u3361 3E74                     u5121 28E4                     u5041 271E  
                   u4401 4050                     u4161 260C                     u4081 24F0  
                   u4321 21CC                     u4241 1F5E                     u3601 1CB2  
                   u3521 1B98                     u3441 1A70                     u5201 0954  
                   u6010 3078                     u3370 3EA0                     u5050 284C  
                   u4410 4070                     u4170 263E                     u4090 2514  
                   u4330 21EA                     u4250 1F72                     u3610 1CEC  
                   u3530 1BBC                     u3450 1A84                     u5210 09E4  
                   u5130 0858                     u6011 3074                     u3371 3E9C  
                   u5051 2848                     u4411 406C                     u4171 263A  
                   u4091 2510                     u4331 21E6                     u4251 1F6E  
                   u3611 1CE8                     u3531 1BB8                     u3451 1A80  
                   u5211 09E0                     u5131 0854                     u6100 31B0  
                   u6020 30AC                     u3380 3ED6                     u5060 286A  
                   u4420 4096                     u4500 41C4                     u4340 2232  
                   u4260 20EC                     u4180 1EA8                     u3700 1DB6  
                   u3620 1CFC                     u3540 1BCA                     u3460 1AC0  
                   u5300 0C10                     u5220 0A12                     u5140 08A8  
                   u6101 31AC                     u6021 30A8                     u3381 3ED2  
                   u5061 2866                     u4421 4092                     u4501 41C0  
                   u4341 222E                     u4181 1EA4                     u3701 1DB2  
                   u3621 1CF8                     u3541 1BC6                     u3461 1ABC  
                   u5301 0C0C                     u5221 0A0C                     u5141 08A4  
                   u6110 31C4                     u6030 30C0                     u5070 2884  
                   u4430 40BA                     u4510 41F8                     u4350 2260  
                   u4270 2146                     u4190 1EBA                     u3710 1DD0  
                   u3630 1D28                     u3550 1BDA                     u3470 1ACE  
                   u3390 19E8                     u5310 0C36                     u5230 0A14  
                   u5150 08B6                     u6111 31C0                     u6031 30BC  
                   u5071 2880                     u4431 40B6                     u4511 41F4  
                   u4351 225C                     u4271 2142                     u4191 1EB6  
                   u3711 1DCC                     u3631 1D24                     u3551 1BD6  
                   u3471 1ACA                     u3391 19E4                     u5311 0C32  
                   u5151 08B2                     u6120 31F6                     u6040 30EA  
                   u6200 2EA2                     u5080 289E                     u4440 40D4  
                   u4520 3BAA                     u4360 229A                     u4280 2166  
                   u3720 1E0A                     u3640 1D38                     u3560 1C0C  
                   u3480 1B3C                     u4600 3AEE                     u3800 4680  
                   u5400 0D32                     u5320 0C4C                     u5240 0A2C  
                   u5160 08C8                     u6121 31F2                     u6041 30E6  
                   u6201 2E9E                     u5081 289A                     u4441 40D0  
                   u4521 3BA6                     u4361 2296                     u4281 2162  
                   u4265 20E2                     u3721 1E06                     u3641 1D34  
                   u3561 1C08                     u3481 1B38                     u4601 3AEA  
                   u3801 467A                     u5401 0D2E                     u5321 0C48  
                   u5241 0A28                     u5161 08C4                     u6130 320A  
                   u6050 30FE                     u6210 2EB6                     u5090 28AE  
                   u4370 3FF6                     u4450 40EE                     u4530 3BE8  
                   u4290 2178                     u3730 1E1C                     u3650 1D54  
                   u3570 1C1A                     u3490 1B54                     u4610 3B02  
                   u3810 4682                     u5410 0E7A                     u5330 0C68  
                   u5250 0AB0                     u5170 0910                     u6131 3206  
                   u6051 30FA                     u6211 2EB2                     u5091 28AA  
                   u4371 3FF2                     u4451 40EA                     u4531 3BE4  
                   u4291 2174                     u3731 1E18                     u3651 1D50  
                   u3571 1C16                     u3491 1B4E                     u4611 3AFE  
                   u5411 0E76                     u5331 0C64                     u5251 0AAC  
                   u5171 090C                     u6140 3236                     u6060 312A  
                   u6300 2FF2                     u6220 2EE2                     u3820 3646  
                   u3900 3800                     u4380 4010                     u4460 410C  
                   u4540 3C06                     u3740 1E2C                     u3660 1D64  
                   u3580 1C38                     u4620 3B2A                     u4700 3CC0  
                   u5500 1090                     u5420 0EE0                     u5340 0C9E  
                   u5260 0B44                     u5180 093E                     u6141 3232  
                   u6061 3126                     u6301 2FEE                     u6221 2EDE  
                   u3821 3642                     u3901 37FC                     u4381 400C  
                   u4461 4108                     u4541 3C02                     u3741 1E28  
                   u3661 1D60                     u3581 1C34                     u4621 3B26  
                   u5501 108C                     u5421 0EDC                     u5341 0C9A  
                   u5261 0B40                     u5181 0938                     u6150 324A  
                   u6070 313E                     u6310 3006                     u6230 2EF6  
                   u3830 3678                     u3910 383E                     u4390 4036  
                   u4470 4122                     u4550 3C26                     u3750 1E4C  
                   u3670 1D76                     u3590 1C70                     u4630 3B4A  
                   u4710 3CDE                     u5510 109E                     u5430 0F28  
                   u5350 0CC4                     u5270 0BB6                     u5190 0940  
                   u6151 3246                     u6071 313A                     u6311 3002  
                   u6231 2EF2                     u3831 3674                     u3911 383A  
                   u4391 4032                     u4471 411E                     u4551 3C22  
                   u3751 1E48                     u3671 1D72                     u3591 1C6C  
                   u4631 3B46                     u4711 3CDA                     u5511 109A  
                   u5431 0F24                     u5351 0CC0                     u5271 0BB2  
                   u6080 3170                     u6240 2F28                     u6160 2E1C  
                   u6400 2CDE                     u6320 2BBA                     u3920 3868  
                   u4480 4146                     u4560 3C76                     u3760 1E5E  
                   u3680 1D8C                     u4640 3B5A                     u4720 3D06  
                   u4800 4296                     u5600 1306                     u5520 10F6  
                   u5440 0F38                     u5360 0CD6                     u5280 0BDC  
                   u6081 316C                     u6241 2F24                     u6161 2E18  
                   u6401 2CDA                     u6321 2BB6                     u3841 36A2  
                   u3921 3864                     u4481 4142                     u4561 3C72  
                   u3761 1E5A                     u3681 1D88                     u4641 3B56  
                   u4721 3D02                     u4705 3CB6                     u5601 1302  
                   u5521 10F2                     u5441 0F34                     u5361 0CD2  
                   u5281 0BD8                     u6090 3184                     u6250 2F3C  
                   u6170 2E30                     u6410 2CF2                     u6330 2BCE  
                   u3850 36C6                     u3930 3896                     u4650 3F2E  
                   u4490 4186                     u4570 469E                     u3770 1E7A  
                   u3690 1DA2                     u4730 3D30                     u4810 42AC  
                   u5610 131E                     u5530 11C8                     u5450 0FA0  
                   u5370 0CE4                     u5290 0BEE                     u6091 3180  
                   u6251 2F38                     u6171 2E2C                     u6411 2CEE  
                   u6331 2BCA                     u3851 36C2                     u3931 3892  
                   u4651 3F2A                     u4491 4182                     u4571 469A  
                   u3771 1E76                     u3691 1D9E                     u4731 3D2C  
                   u4811 42A8                     u5611 131A                     u5531 11C4  
                   u5451 0F9C                     u5371 0CE0                     u5291 0BEA  
                   u6260 2F68                     u6180 2E5C                     u6420 2D1E  
                   u6340 2BFA                     u6500 298A                     u5700 35FC  
                   u3860 36F0                     u3940 38DE                     u3780 458C  
                   u4660 3F50                     u4580 3A8C                     u4900 3446  
                   u4820 32DA                     u5620 137C                     u5540 11E4  
                   u5460 1044                     u5380 0CFA                     u6261 2F64  
                   u6181 2E58                     u6421 2D1A                     u6341 2BF6  
                   u6501 2986                     u5701 35F8                     u3861 36EC  
                   u3941 38DA                     u3781 4588                     u4661 3F4C  
                   u4581 3A88                     u4901 3442                     u5621 1376  
                   u5541 11E0                     u5461 1040                     u5381 0CF6  
                   u6270 2F7C                     u6190 2E70                     u6430 2D32  
                   u6350 2C0E                     u6510 299E                     u5710 360E  
                   u3870 3730                     u3790 4720                     u4670 3FA6  
                   u3950 22D2                     u4590 3AC0                     u4750 3D6A  
                   u4910 3482                     u4830 3308                     u5630 137E  
                   u5550 11F6                     u5470 1056                     u5390 0D08  
                   u6271 2F78                     u6191 2E6C                     u6431 2D2E  
                   u6351 2C0A                     u6511 299A                     u5711 360A  
                   u3871 372C                     u3791 471C                     u4671 3FA2  
                   u3951 22CE                     u4751 3D64                     u4911 347E  
                   u4831 3304                     u5551 11F2                     u5471 1052  
                   u5391 0D04                     u6280 2FAE                     u6440 2D70  
                   u6360 2C4C                     u6600 2ADA                     u6520 29DE  
                   u4920 46F0                     u3880 377A                     u4680 3FB6  
                   u3960 22E4                     u4760 3D6C                     u4840 332A  
                   u5640 1394                     u5560 1204                     u5480 1068  
                   u5720 3DA8                     u5800 1512                     u6281 2FAA  
                   u6441 2D6C                     u6361 2C48                     u6601 2AD6  
                   u6521 29DA                     u4921 46EA                     u3881 3776  
                   u4681 3FB2                     u3961 22E0                     u4745 3D42  
                   u4841 3326                     u4825 32D0                     u5641 1390  
                   u5561 1200                     u5481 1064                     u5721 3DA4  
                   u5801 150E                     u6290 2FC2                     u6450 2D84  
                   u6370 2C60                     u6610 2B1C                     u6530 29F2  
                   u4930 46F2                     u5650 34DC                     u3890 37CE  
                   u4690 45EA                     u3970 22F4                     u4770 436A  
                   u5570 123A                     u5490 1076                     u5730 3DDA  
                   u5810 154C                     u6291 2FBE                     u6451 2D80  
                   u6371 2C5C                     u6611 2B18                     u6531 29EE  
                   u5651 34D8                     u3891 37CA                     u4691 45E6  
                   u3971 22F0                     u4595 3AB6                     u5571 1236  
                   u5491 1072                     u5731 3DD6                     u5811 1548  
                   u6460 2DB0                     u6380 2C8C                     u6620 2B30  
                   u6540 2A1E                     u4940 43E8                     u5660 3512  
                   u3980 2338                     u4860 3396                     u4780 437C  
                   u5580 1268                     u5740 3DF6                     u5900 1834  
                   u5820 15F4                     u6461 2DAC                     u6381 2C88  
                   u6621 2B2C                     u6541 2A1A                     u4941 43E4  
                   u5661 350E                     u3981 2334                     u4861 3392  
                   u4781 4378                     u5581 1264                     u5741 3DF2  
                   u5901 1830                     u5821 15EE                     u6470 2DC4  
                   u6390 2CA0                     u6630 2B5C                     u6550 2A32  
                   u4950 4416                     u5670 352E                     u3990 234A  
                   u4870 33BA                     u4790 4294                     u5590 12EC  
                   u5750 3E08                     u5910 189A                     u5830 15F6  
                   u6471 2DC0                     u6391 2C9C                     u6631 2B58  
                   u6551 2A2E                     u4951 4412                     u5671 352A  
                   u3991 2346                     u4855 333E                     u4791 428E  
                   u5591 12E8                     u5751 3E04                     u5911 1894  
                   u4960 44E8                     u6640 2B70                     u6560 2A5C  
                   u6480 294A                     u5680 35E4                     u4880 33D6  
                   u4856 3348                     u5760 3E30                     u5920 189C  
                   u5840 160C                     u4961 44E4                     u6641 2B6C  
                   u6561 2A58                     u6481 2946                     u5681 35DE  
                   u4881 33D2                     u4857 3358                     u4777 4360  
                   u5761 3E2C                     u5841 1608                     u4970 4502  
                   u6570 2A70                     u6490 295E                     u5690 35E6  
                   u4890 342A                     u5930 18B2                     u5850 163C  
                   u5770 1404                     u6650 396A                     u4971 44FE  
                   u6571 2A6C                     u6707 2970                     u6491 295A  
                   u4875 33B0                     u5931 18AE                     u5851 1638  
                   u5771 1400                     u6651 3966                     u6580 2A9C  
                   u4980 2682                     u5940 194E                     u5860 167C  
                   u5780 14DC                     u6660 39F4                     u6581 2A98  
                   u6717 2A04                     u4981 267C                     u5941 194A  
                   u5861 1678                     u5781 14D8                     u6661 39F0  
                   u5950 42E8                     u6590 2AB0                     u4990 2684  
                   u5870 16D0                     u5790 14EC                     u6670 3A06  
                   u6807 2D52                     u6591 2AAC                     u6727 2A82  
                   u4895 3420                     u5871 16CC                     u5791 14E8  
                   u6671 3A02                     u5960 4310                     u5880 16F4  
                   u6680 3A6E                     u6817 2D96                     u6737 2B42  
                   u5881 16F0                     u6681 3A6A                     u5970 4320  
                   u5890 1786                     u5971 431C                     u6907 321C  
                   u6827 2DDC                     u6747 2B84                     u5891 1782  
                   u5980 425A                     u5957 42DE                     u6837 2E42  
                   u6757 2BE0                     u5981 4256                     u5990 4622  
                   u5967 4306                     u5991 461E                     u6847 2EC8  
                   u6767 2C2E                     u6857 2F4E                     u6777 2C72  
                   u6697 398A                     u6867 2FD8                     u6787 2CC0  
                   u6877 3092                     u6797 2D04                     u6887 3110  
                   u6897 3196                     abs@a 0013                     _dbuf 0100  
                   _atoi 34A4                     _main 3920                     _dtoa 2652  
     __size_of_LCD_Clear 0008                     _prec 00D5                     _nout 00D1  
                   pad@i 0018                     pad@p 0015                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf1 000FE7                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
          ___fpclassifyf 3C80                     prodh 000FF4                     prodl 000FF3  
                   start 0000          __end_of_MSdelay 4504          ___fldiv@new_exp 0012  
          _LCD_String_xy 4610             ___param_bank 000000                    ??_abs 0015  
                  ??_pad 0017         __end_of_LCD_Char 446E         __end_of_LCD_Init 475E  
          ___fltol@sign1 0009          __end_of___aodiv 37BC                    ?_atoi 0008  
        __end_of___fladd 1E8E                    ?_main 0001                    ?_dtoa 001C  
        __end_of___aomod 3920          __end_of___fldiv 2652          __end_of___awdiv 40A8  
        __end_of___flneg 46C0                    STR_12 0829                    STR_14 0829  
        __end_of___awmod 4158          __end_of___flmul 22B8          __end_of___flsub 454A  
        __end_of___fltol 3B7C          ___awdiv@divisor 0003                    _LATD2 007C62  
                  _LATD3 007C63          ___awdiv@counter 0005             vfpfcnvrt@fmt 0042  
                  _TRISC 000F94                    _TRISD 000F95                    _flags 00D7  
                  _fputc 3E54                    _fputs 454A          __end_of_isdigit 46F8  
                  atoi@n 0015                    pad@fp 0011                    atoi@s 0008  
                  _width 00D3                    _putch 4792                    dtoa@d 001E  
                  dtoa@i 003E                    dtoa@n 0036                    dtoa@p 0030  
                  dtoa@s 0034                    dtoa@w 0032          __end_of_isspace 4422  
        __end_of_isupper 4688                    tablat 000FF5                    status 000FD8  
    __size_of_LCD_String 005E          __end_of_sprintf 43D0           ?___fpclassifyf 0001  
        __end_of_tolower 42C4          __end_of_strncmp 3E54           ?_LCD_String_xy 000B  
        __initialization 458E             __end_of_atoi 3634             __end_of_main 3A76  
           __end_of_dtoa 2936                   ??_atoi 000A                   ??_main 00B2  
                 ??_dtoa 0026        __end_of_LCD_Clear 478C            __activetblptr 000002  
                 ?_fputc 0001                   ?_fputs 000A         ___awdiv@dividend 0001  
                 ?_putch 0001         LCD_String_xy@msg 000C         LCD_String_xy@pos 000B  
       LCD_String_xy@row 000E                ??_MSdelay 0003                   _OSCCON 000FD3  
          vfpfcnvrt@done 0052             vfprintf@cfmt 009E                   ___flge 3B7C  
                 ___fleq 4158                ??___aodiv 0011                ??___fladd 0009  
              ??___aomod 0011                   ___wmul 475E                ??___fldiv 0009  
              ??___awdiv 0005                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0009                ??___flsub 0022                ??___fltol 0005  
     __size_of_Secuence1 0242       __size_of_Secuence2 0248       __size_of_Secuence3 0262  
     __size_of_Secuence4 0270                   _efgtoa 0830                   _floorf 3292  
                 clear_0 45B4                   clear_1 45C0         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   pad@buf 0013  
   __size_of_LCD_Command 004C                   dtoa@fp 001C                   _strcpy 4322  
                 _strlen 46F8                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 4264                ??_sprintf 0060  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 001A  
             ___flge@ff2 001E          ??___fpclassifyf 0005               ___fleq@ff1 0001  
             ___fleq@ff2 0005                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 45C6                ?_LCD_Init 0001          ??_LCD_String_xy 000E  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001             __pidataBANK0 478C            __end_of_fputc 3F1E  
          __end_of_fputs 458E            __end_of_putch 4794             ??_LCD_String 000B  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
      __end_of_Secuence1 3292        __end_of_Secuence2 3050        __end_of_Secuence3 2E08  
      __end_of_Secuence4 2BA6               __pbssBANK0 00C9               __pbssBANK1 0100  
             ??_LCD_Char 0007               ??_LCD_Init 0009       __end_of_LCD_String 4322  
             _efgtoa$764 0064               _efgtoa$773 006A               _efgtoa$765 0066  
             _efgtoa$774 006C               _efgtoa$775 006E               _efgtoa$769 0068  
                ?___flge 001A                  ?___fleq 0001                  ?___wmul 0001  
                ?_efgtoa 002E                  ?_floorf 001A                  ?_strcpy 0001  
                ?_strlen 0001       __size_of_vfpfcnvrt 05EE                  _MSdelay 44BA  
          LCD_String@msg 0009                  __Hparam 0000                  __Lparam 0000  
        __size_of___flge 0104          __size_of___fleq 00AA                  ___aodiv 3634  
                ___fladd 19CE                  ___aomod 37BC                  ___fldiv 22B8  
                ___awdiv 3FE4                  ___flneg 4688                  ___awmod 40A8  
                ___flmul 1E8E                  ___flsub 4504                  ___fltol 3A76  
        __size_of___wmul 0026       main@Total_distance 00B3                ?_vfprintf 0098  
           __psmallconst 0800          __size_of_efgtoa 0BB0          __size_of_floorf 0212  
                __pcinit 458E                  __ramtop 0800                  __ptext0 3920  
                __ptext1 437E                  __ptext2 4202                  __ptext3 13E0  
                __ptext4 3D7E                  __ptext5 0830                  __ptext6 4264  
                __ptext7 4650                  __ptext8 4322                  __ptext9 3292  
        __size_of_strcpy 005C          __size_of_strlen 0036             __size_of_abs 0040  
           __size_of_pad 00C6               _duty_cicle 00E1                  _isdigit 46C0  
       ___awmod@dividend 0001                  _isspace 43D0                  _isupper 4650  
                efgtoa@c 0034                  efgtoa@d 0078                  efgtoa@e 0090  
                efgtoa@f 0030                  efgtoa@g 008C                  efgtoa@h 0082  
                efgtoa@i 008A                  efgtoa@l 0086                  efgtoa@m 0074  
                efgtoa@n 0092                  efgtoa@p 007C                  efgtoa@t 0070  
                efgtoa@u 0094                  efgtoa@w 007F                _LCD_Clear 4784  
                atoi@neg 000E                  _sprintf 437E                  _tolower 4264  
                _strncmp 3D7E     end_of_initialization 45C6                  floorf@e 0028  
                floorf@m 0024                  floorf@u 002A                  floorf@x 001A  
                fputc@fp 0003           LCD_Command@cmd 0008            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 19CE               efgtoa@mode 0081  
             efgtoa@sign 007A                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0060                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001              ___fladd@grs 0010  
              _TRISBbits 000F93               ?_LCD_Clear 0001              ___fldiv@grs 0014  
            ___fldiv@rem 000D              ___flmul@grs 000E        __size_of_LCD_Char 004C  
      __size_of_LCD_Init 0030            ??_LCD_Command 0007           __end_of___flge 3C80  
         __end_of___fleq 4202              vfpfcnvrt@ap 0044              vfpfcnvrt@ct 005C  
            vfpfcnvrt@fp 0040              vfpfcnvrt@ll 004A           __end_of___wmul 4784  
         __end_of_efgtoa 13E0           __end_of_floorf 34A4               floorf@F524 00C9  
         __end_of_strcpy 437E           __end_of_strlen 472E      start_initialization 458E  
            __end_of_abs 4610              __end_of_pad 3FE4    __end_of___fpclassifyf 3D7E  
              _Secuence1 3050                _Secuence2 2E08                _Secuence3 2BA6  
              _Secuence4 2936    __end_of_LCD_String_xy 4650              vfprintf@fmt 009A  
               ??___flge 0022                 ??___fleq 0009                 ??___wmul 0005  
               ??_efgtoa 0035              __pdataBANK0 00E3                 ??_floorf 001E  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0005  
              ___fladd@b 0001                ___fldiv@a 0005                ___fldiv@b 0001  
    __end_of_LCD_Command 44BA                ___flmul@a 0005                ___flmul@b 0001  
              ___flsub@a 001E                ___flsub@b 001A            __pcstackBANK0 0060  
       ___aodiv@dividend 0001              ??_LCD_Clear 0009                 ?_MSdelay 0001  
             ?_Secuence1 0001               ?_Secuence2 0001               ?_Secuence3 0001  
             ?_Secuence4 0001                 ?___aodiv 0001                 ?___fladd 0001  
               ?___aomod 0001                 ?___fldiv 0001                 ?___awdiv 0001  
       ___aodiv@quotient 0013                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 0001                 ?___flsub 001A                 ?___fltol 0001  
      __size_of_vfprintf 0062              __smallconst 0800                 ?_isdigit 0001  
               ?_isspace 0001                 ?_isupper 0001    LCD_String_xy@location 000F  
               ?_sprintf 00A0                 ?_tolower 0007           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_strncmp 0001           __size_of_putch 0002  
               MSdelay@i 0003                 MSdelay@j 0005                 _LCD_Char 4422  
               _LCD_Init 472E           ___wmul@product 0005              _LCD_Command 446E  
              _vfpfcnvrt 13E0        ___wmul@multiplier 0001               vfpfcnvrt@c 005F  
             vfpfcnvrt@f 0058                copy_data0 45A2         __size_of_MSdelay 004A  
            ??_Secuence1 0001              ??_Secuence2 0009              ??_Secuence3 0001  
            ??_Secuence4 0009                 __Hrparam 0000               vfprintf@ap 009C  
               __Lrparam 0000               vfprintf@fp 0098         __size_of___aodiv 0188  
       __size_of___fladd 04C0         __size_of___aomod 0164         __size_of___fldiv 039A  
       __size_of___awdiv 00C4         __size_of___flneg 0038         __size_of___awmod 00B0  
       __size_of___flmul 042A         __size_of___flsub 0046         __size_of___fltol 0106  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F463 00CD               sprintf@fmt 00A2                 _atoi$830 0010  
               _atoi$831 0014                 _atoi$832 0012         __size_of_isdigit 0038  
               _dtoa$740 002E         __size_of_isspace 0052                 __ptext10 3C80  
               __ptext11 3A76                 __ptext20 3FE4                 __ptext12 4504  
               __ptext21 2652                 __ptext13 19CE                 __ptext30 34A4  
               __ptext22 3F1E                 __ptext14 4688                 __ptext31 43D0  
               __ptext23 46F8                 __ptext15 1E8E                 __ptext40 42C4  
               __ptext32 46C0                 __ptext24 454A                 __ptext16 3B7C  
               __ptext41 4422                 __ptext33 475E                 __ptext25 3E54  
               __ptext17 4158                 __ptext42 472E                 __ptext34 2936  
               __ptext26 4792                 __ptext18 22B8                 __ptext43 446E  
               __ptext35 2BA6                 __ptext27 45D0                 __ptext19 40A8  
               __ptext44 44BA                 __ptext36 2E08                 __ptext28 37BC  
               __ptext37 4784                 __ptext29 3634                 __ptext38 3050  
               __ptext39 4610         __size_of_isupper 0038         __size_of_sprintf 0052  
       __size_of_tolower 0060               strcpy@dest 0001         __size_of_strncmp 00D6  
          __size_of_atoi 0190            __size_of_main 0156            __size_of_dtoa 02E4  
             MSdelay@val 0001                 efgtoa@fp 002E                 efgtoa@ne 0076  
               efgtoa@pp 0072                 efgtoa@ou 0060                 _vfprintf 4202  
             _LCD_String 42C4              _isspace$861 0007         ___aomod@dividend 0001  
               isdigit@c 0001                sprintf@ap 00AA                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003              efgtoa@nmode 007E          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0046          ___aomod@counter 0011            _vfpfcnvrt$794 0056  
          _vfpfcnvrt$789 0054                 sprintf@f 00AC                 tolower@c 0007  
               sprintf@s 00A0   __size_of___fpclassifyf 00FE                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A   __size_of_LCD_String_xy 0040  
          ___fladd@signs 000D             ___aodiv@sign 0012             ___fladd@aexp 000E  
           ___fladd@bexp 000F             ___aomod@sign 0012  
